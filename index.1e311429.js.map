{"mappings":"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","sources":["node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults.js","node_modules/process/browser.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","src/ab-protocol/src/support/errors.ts","src/ab-protocol/src/packets/client.ts","src/ab-protocol/src/packets/server.ts","src/ab-protocol/src/types/data.ts","src/ab-protocol/src/schemas/client.ts","src/ab-protocol/src/schemas/server.ts","src/ab-protocol/src/support/utils.ts","src/ab-protocol/src/marshaling/client.ts","src/ab-protocol/src/marshaling/server.ts","src/ab-protocol/src/marshaling/index.ts","src/ab-protocol/src/unmarshaling/client.ts","src/ab-protocol/src/unmarshaling/server.ts","src/ab-protocol/src/unmarshaling/index.ts","src/ab-protocol/src/types/client.ts","src/ab-protocol/src/types/server.ts","src/ab-protocol/src/types/flags.ts","src/ab-protocol/src/decoding/index.ts","src/helpers/stopwatch.ts","src/botting/bot-state.ts","src/events/constants.ts","src/app-context/eventqueue-processor.ts","src/handlers/chat-send-handler.ts","src/handlers/keyboard-message-handler.ts","src/ab-assets/map-constants.ts","src/ab-assets/missile-constants.ts","src/handlers/maintenance/missile-maintenance-handler.ts","src/ab-assets/ships-constants.ts","src/ab-assets/upgrade-constants.ts","src/helpers/periodic-logger.ts","src/handlers/maintenance/player-maintenance-handler.ts","src/ab-assets/chat-constants.ts","src/handlers/server-message-handler.ts","src/models/pos.ts","src/models/mob.ts","src/handlers/server-messages/crate-new-handler.ts","src/handlers/server-messages/flag-update-handler.ts","src/handlers/server-messages/leave-horizon-handler.ts","src/helpers/decoder.ts","src/models/power-ups.ts","src/models/upgrades.ts","src/models/player.ts","src/handlers/server-messages/login-handler.ts","src/handlers/server-messages/mini-map-handler.ts","src/handlers/server-messages/missile-update-handler.ts","src/handlers/server-messages/mob-despawn-handler.ts","src/handlers/server-messages/mountain-hit-handler.ts","src/handlers/server-messages/player-boost-handler.ts","src/handlers/server-messages/player-bounce-handler.ts","src/handlers/server-messages/player-change-flag-handler.ts","src/handlers/server-messages/player-fire-handler.ts","src/handlers/server-messages/player-hit-handler.ts","src/handlers/server-messages/player-killed-handler.ts","src/handlers/server-messages/player-leave-handler.ts","src/handlers/server-messages/player-level-handler.ts","src/handlers/server-messages/player-new-handler.ts","src/handlers/server-messages/player-powerup-handler.ts","src/handlers/server-messages/player-repel-handler.ts","src/handlers/server-messages/player-respawn-handler.ts","src/handlers/server-messages/player-spectate-handler.ts","src/handlers/server-messages/player-stealth-handler.ts","src/handlers/server-messages/player-switch-type-handler.ts","src/handlers/server-messages/player-update-handler.ts","src/handlers/server-messages/player-upgrade-handler.ts","src/handlers/server-messages/score-board-handler.ts","src/handlers/server-messages/score-detailed-handler.ts","src/handlers/server-messages/score-update-handler.ts","src/handlers/server-messages/server-announcement-handler.ts","src/handlers/server-messages/server-command-reply-handler.ts","src/handlers/server-messages/server-custom-handler.ts","src/handlers/server-messages/server-error-handler.ts","src/handlers/server-messages/teams-handler.ts","src/app-context/handler-collections.ts","src/app-context/settings.ts","src/models/ctf-team.ts","src/app-context/state.ts","src/app-context/timer-manager.ts","src/connectivity/keyStateCache.ts","src/connectivity/connection.ts","src/events/event-message.ts","src/events/event-queue.ts","src/handlers/browser-visibility-handler.ts","node_modules/js-cookie/dist/js.cookie.js","src/handlers/flag-cookie-handler.ts","src/handlers/render/chat-render-handler.ts","src/handlers/render/ctf-game-over-render-handler.ts","src/handlers/render/each-second-render-handler.ts","src/models/explosion-visual.ts","src/handlers/render/explosion-visualization-handler.ts","src/handlers/render/game-render-handler.ts","src/models/golifart-visual.ts","src/handlers/render/golifart-visualization-handler.ts","src/models/kill-visual.ts","src/handlers/render/kill-visualization-handler.ts","src/models/cloud-visual.ts","src/models/cloud-visual-spec.ts","src/handlers/render/missile-chemtrail-handler.ts","src/handlers/render/server-announcement-render-handler.ts","src/handlers/render/shake-and-show-message-on-kill-handler.ts","src/handlers/render/shake-on-hit-handler.ts","src/browser-impl/browser-initialization.ts","src/browser-impl/browser-logger.ts","src/browser-impl/browser-websocket-factory.ts","src/browser-impl/clipped-view.ts","src/browser-impl/renderers/background-renderer.ts","src/browser-impl/renderers/debug-info-renderer.ts","src/browser-impl/renderers/effects-renderer.ts","src/ab-assets/ctf-constants.ts","src/browser-impl/renderers/flag-renderer.ts","src/browser-impl/renderers/minimap-renderer.ts","src/browser-impl/renderers/missiles-renderer.ts","src/browser-impl/renderers/path-renderer.ts","src/browser-impl/renderers/playerlist-renderer.ts","src/browser-impl/renderers/players-renderer.ts","src/browser-impl/renderers/stats-renderer.ts","src/browser-impl/renderers/upcrates-renderer.ts","src/ab-assets/walls.ts","src/browser-impl/renderers/walls-renderer.ts","src/browser-impl/renderers/renderer.ts","src/browser-impl/user-input/aircraft-selection.ts","src/browser-impl/user-input/apply-upgrades.ts","src/browser-impl/user-input/chat-input.ts","src/browser-impl/user-input/keyboard-and-mouse-input.ts","src/browser-impl/user-input/player-dropdownmenu.ts","src/handlers/stay-active-handler.ts","src/browser-impl/user-input/drop-flag.ts","src/browser-impl/user-input/auto-fire.ts","src/handlers/auto-fire-handler.ts","src/browser-impl/user-input/spectate.ts","src/browser-impl/user-input/switch-sides.ts","src/helpers/rotation.ts","src/botting/face-location-executor.ts","src/helpers/delta.ts","src/helpers/prediction.ts","src/botting/goto-location-executor.ts","src/handlers/bot/bot-heartbeat-handler.ts","src/browser-impl/user-input/autopilot-to-flag.ts","src/handlers/auto-boost-handler.ts","node_modules/axios/index.js","src/models/game-endpoint.ts","src/models/server-region.ts","src/models/server-region-info.ts","src/helpers/games-repository.ts","src/helpers/styles-repository.ts","src/browser-impl/thirdparty-login.ts","src/browser-app.ts","src/browser-impl/landing-page.ts","src/browser-impl/browser-context.ts"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","module.exports = {\n  \"version\": \"0.25.0\"\n};","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","/* eslint-disable max-classes-per-file */\r\nexport class ProtocolError {\r\n  public name: string;\r\n\r\n  public message: string;\r\n\r\n  constructor(message = '') {\r\n    this.name = this.constructor.name;\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport class StringEncodeError extends ProtocolError {}\r\n\r\nexport class StringDecodeError extends ProtocolError {}\r\n","export default {\r\n  LOGIN: 0,\r\n  BACKUP: 1,\r\n  HORIZON: 2,\r\n  ACK: 5,\r\n  PONG: 6,\r\n  KEY: 10,\r\n  COMMAND: 11,\r\n  SCOREDETAILED: 12,\r\n  CHAT: 20,\r\n  WHISPER: 21,\r\n  SAY: 22,\r\n  TEAMCHAT: 23,\r\n  VOTEMUTE: 24,\r\n  LOCALPING: 255,\r\n};\r\n","export default {\r\n  LOGIN: 0,\r\n  BACKUP: 1,\r\n  PING: 5,\r\n  PING_RESULT: 6,\r\n  ACK: 7,\r\n  ERROR: 8,\r\n  COMMAND_REPLY: 9,\r\n  PLAYER_NEW: 10,\r\n  PLAYER_LEAVE: 11,\r\n  PLAYER_UPDATE: 12,\r\n  PLAYER_FIRE: 13,\r\n  PLAYER_HIT: 14,\r\n  PLAYER_RESPAWN: 15,\r\n  PLAYER_FLAG: 16,\r\n  PLAYER_KILL: 17,\r\n  PLAYER_UPGRADE: 18,\r\n  PLAYER_TYPE: 19,\r\n  PLAYER_POWERUP: 20,\r\n  PLAYER_LEVEL: 21,\r\n  PLAYER_RETEAM: 22,\r\n  GAME_FLAG: 30,\r\n  GAME_SPECTATE: 31,\r\n  GAME_PLAYERSALIVE: 32,\r\n  GAME_FIREWALL: 33,\r\n  EVENT_REPEL: 40,\r\n  EVENT_BOOST: 41,\r\n  EVENT_BOUNCE: 42,\r\n  EVENT_STEALTH: 43,\r\n  EVENT_LEAVEHORIZON: 44,\r\n  MOB_UPDATE: 60,\r\n  MOB_UPDATE_STATIONARY: 61,\r\n  MOB_DESPAWN: 62,\r\n  MOB_DESPAWN_COORDS: 63,\r\n  CHAT_PUBLIC: 70,\r\n  CHAT_TEAM: 71,\r\n  CHAT_SAY: 72,\r\n  CHAT_WHISPER: 73,\r\n  CHAT_VOTEMUTEPASSED: 78,\r\n  CHAT_VOTEMUTED: 79,\r\n  SCORE_UPDATE: 80,\r\n  SCORE_BOARD: 81,\r\n  SCORE_DETAILED: 82,\r\n  SCORE_DETAILED_CTF: 83,\r\n  SCORE_DETAILED_BTR: 84,\r\n  SERVER_MESSAGE: 90,\r\n  SERVER_CUSTOM: 91,\r\n};\r\n","export enum DATA_TYPES {\r\n  text = 1,\r\n  textbig = 2,\r\n  arraysmall = 4,\r\n  array = 3,\r\n  uint8 = 5,\r\n  uint16 = 6,\r\n  uint24 = 7,\r\n  uint32 = 8,\r\n  float32 = 9,\r\n  float64 = 10,\r\n  boolean = 11,\r\n  speed = 12,\r\n  accel = 13,\r\n  coordx = 14,\r\n  coordy = 15,\r\n  coord24 = 16,\r\n  rotation = 17,\r\n  healthenergy = 18,\r\n  regen = 19,\r\n}\r\n\r\nconst MAX_UINT8 = (1 << 8) - 1;\r\nconst MAX_UINT16 = (1 << 16) - 1;\r\nconst CHAR_BITS = 8;\r\n\r\nexport const DATA_TYPE_SIZE_BITS = {\r\n  [DATA_TYPES.text]: 8 + MAX_UINT8 * CHAR_BITS,\r\n  [DATA_TYPES.textbig]: 16 + MAX_UINT16 * CHAR_BITS,\r\n  [DATA_TYPES.arraysmall]: 8,\r\n  [DATA_TYPES.array]: 16,\r\n  [DATA_TYPES.uint8]: 8,\r\n  [DATA_TYPES.uint16]: 16,\r\n  [DATA_TYPES.uint24]: 24,\r\n  [DATA_TYPES.uint32]: 32,\r\n  [DATA_TYPES.float32]: 64,\r\n  [DATA_TYPES.float64]: 64,\r\n  [DATA_TYPES.boolean]: 8,\r\n  [DATA_TYPES.speed]: 16,\r\n  [DATA_TYPES.accel]: 16,\r\n  [DATA_TYPES.coordx]: 16,\r\n  [DATA_TYPES.coordy]: 16,\r\n  [DATA_TYPES.coord24]: 24,\r\n  [DATA_TYPES.rotation]: 16,\r\n  [DATA_TYPES.healthenergy]: 8,\r\n  [DATA_TYPES.regen]: 16,\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport CLIENT_PACKETS from '../packets/client';\r\nimport { DATA_TYPES } from '../types/data';\r\n\r\nexport default {\r\n  [CLIENT_PACKETS.LOGIN]: [\r\n    ['protocol', DATA_TYPES.uint8],\r\n    ['name', DATA_TYPES.text],\r\n    ['session', DATA_TYPES.text],\r\n    ['horizonX', DATA_TYPES.uint16],\r\n    ['horizonY', DATA_TYPES.uint16],\r\n    ['flag', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.BACKUP]: [['token', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.HORIZON]: [\r\n    ['horizonX', DATA_TYPES.uint16],\r\n    ['horizonY', DATA_TYPES.uint16],\r\n  ],\r\n  [CLIENT_PACKETS.ACK]: [],\r\n  [CLIENT_PACKETS.PONG]: [['num', DATA_TYPES.uint32]],\r\n  [CLIENT_PACKETS.KEY]: [\r\n    ['seq', DATA_TYPES.uint32],\r\n    ['key', DATA_TYPES.uint8],\r\n    ['state', DATA_TYPES.boolean],\r\n  ],\r\n  [CLIENT_PACKETS.COMMAND]: [\r\n    ['com', DATA_TYPES.text],\r\n    ['data', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.SCOREDETAILED]: [],\r\n  [CLIENT_PACKETS.CHAT]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.WHISPER]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.SAY]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.TEAMCHAT]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.VOTEMUTE]: [['id', DATA_TYPES.uint16]],\r\n  [CLIENT_PACKETS.LOCALPING]: [['auth', DATA_TYPES.uint32]],\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport SERVER_PACKETS from '../packets/server';\r\nimport { DATA_TYPES } from '../types/data';\r\n\r\nexport default {\r\n  [SERVER_PACKETS.LOGIN]: [\r\n    ['success', DATA_TYPES.boolean],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['team', DATA_TYPES.uint16],\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['token', DATA_TYPES.text],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['room', DATA_TYPES.text],\r\n    [\r\n      'players',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['status', DATA_TYPES.uint8],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['name', DATA_TYPES.text],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['team', DATA_TYPES.uint16],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['rot', DATA_TYPES.rotation],\r\n        ['flag', DATA_TYPES.uint16],\r\n        ['upgrades', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n    ['serverConfiguration', DATA_TYPES.textbig],\r\n    ['bots', DATA_TYPES.array, [['id', DATA_TYPES.uint16]]],\r\n  ],\r\n\r\n  [SERVER_PACKETS.BACKUP]: [],\r\n\r\n  [SERVER_PACKETS.PING]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['num', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PING_RESULT]: [\r\n    ['ping', DATA_TYPES.uint16],\r\n    ['playerstotal', DATA_TYPES.uint32],\r\n    ['playersgame', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.ACK]: [],\r\n\r\n  [SERVER_PACKETS.ERROR]: [['error', DATA_TYPES.uint8]],\r\n\r\n  [SERVER_PACKETS.COMMAND_REPLY]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['text', DATA_TYPES.textbig],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_NEW]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['status', DATA_TYPES.uint8],\r\n    ['name', DATA_TYPES.text],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['team', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['flag', DATA_TYPES.uint16],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n    ['isBot', DATA_TYPES.boolean],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_LEAVE]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.PLAYER_UPDATE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['keystate', DATA_TYPES.uint8],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_FIRE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n    [\r\n      'projectiles',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['accelX', DATA_TYPES.accel],\r\n        ['accelY', DATA_TYPES.accel],\r\n        ['maxSpeed', DATA_TYPES.speed],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  // [packet.PLAYER_SAY]: [['id', types.uint16], ['text', types.text]],\r\n\r\n  [SERVER_PACKETS.PLAYER_RESPAWN]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_FLAG]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['flag', DATA_TYPES.uint16],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_HIT]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['owner', DATA_TYPES.uint16],\r\n    [\r\n      'players',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['health', DATA_TYPES.healthenergy],\r\n        ['healthRegen', DATA_TYPES.regen],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_KILL]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['killer', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_UPGRADE]: [\r\n    ['upgrades', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['speed', DATA_TYPES.uint8],\r\n    ['defense', DATA_TYPES.uint8],\r\n    ['energy', DATA_TYPES.uint8],\r\n    ['missile', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_TYPE]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_POWERUP]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['duration', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_LEVEL]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['level', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_RETEAM]: [\r\n    [\r\n      'players',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['team', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.GAME_FLAG]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['flag', DATA_TYPES.uint8],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['blueteam', DATA_TYPES.uint8],\r\n    ['redteam', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.GAME_SPECTATE]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.GAME_PLAYERSALIVE]: [['players', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.GAME_FIREWALL]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['status', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['radius', DATA_TYPES.float32],\r\n    ['speed', DATA_TYPES.float32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_REPEL]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n    [\r\n      'players',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['keystate', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['rot', DATA_TYPES.rotation],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['energy', DATA_TYPES.healthenergy],\r\n        ['energyRegen', DATA_TYPES.regen],\r\n        ['playerHealth', DATA_TYPES.healthenergy],\r\n        ['playerHealthRegen', DATA_TYPES.regen],\r\n      ],\r\n    ],\r\n    [\r\n      'mobs',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['accelX', DATA_TYPES.accel],\r\n        ['accelY', DATA_TYPES.accel],\r\n        ['maxSpeed', DATA_TYPES.speed],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_BOOST]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['boost', DATA_TYPES.boolean],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_BOUNCE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['keystate', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_STEALTH]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['state', DATA_TYPES.boolean],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_LEAVEHORIZON]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['id', DATA_TYPES.uint16],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_UPDATE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['accelX', DATA_TYPES.accel],\r\n    ['accelY', DATA_TYPES.accel],\r\n    ['maxSpeed', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_UPDATE_STATIONARY]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.float32],\r\n    ['posY', DATA_TYPES.float32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_DESPAWN]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_DESPAWN_COORDS]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_UPDATE]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['score', DATA_TYPES.uint32],\r\n    ['earnings', DATA_TYPES.uint32],\r\n    ['upgrades', DATA_TYPES.uint16],\r\n    ['totalkills', DATA_TYPES.uint32],\r\n    ['totaldeaths', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_BOARD]: [\r\n    [\r\n      'data',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['level', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n    [\r\n      'rankings',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['x', DATA_TYPES.uint8],\r\n        ['y', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED_CTF]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['captures', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED_BTR]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['alive', DATA_TYPES.boolean],\r\n        ['wins', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_TEAM]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_PUBLIC]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_SAY]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_WHISPER]: [\r\n    ['from', DATA_TYPES.uint16],\r\n    ['to', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_VOTEMUTEPASSED]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.CHAT_VOTEMUTED]: [],\r\n\r\n  [SERVER_PACKETS.SERVER_MESSAGE]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['duration', DATA_TYPES.uint32],\r\n    ['text', DATA_TYPES.textbig],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SERVER_CUSTOM]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['data', DATA_TYPES.textbig],\r\n  ],\r\n};\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable no-bitwise */\r\nimport { StringEncodeError, StringDecodeError } from './errors';\r\n\r\n/**\r\n * Marshals a string to an Uint8Array.\r\n * https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\r\n *\r\n * @param s\r\n */\r\nconst encodeUTF8 = (s: string): Uint8Array => {\r\n  let i = 0;\r\n  const bytes = new Uint8Array(s.length * 4);\r\n\r\n  for (let ci = 0; ci !== s.length; ci += 1) {\r\n    let c = s.charCodeAt(ci);\r\n\r\n    if (c < 128) {\r\n      bytes[i++] = c;\r\n      // eslint-disable-next-line no-continue\r\n      continue;\r\n    }\r\n\r\n    if (c < 2048) {\r\n      bytes[i++] = (c >> 6) | 192;\r\n    } else {\r\n      if (c > 0xd7ff && c < 0xdc00) {\r\n        if (++ci >= s.length)\r\n          throw new StringEncodeError('UTF-8 encode: incomplete surrogate pair');\r\n\r\n        const c2 = s.charCodeAt(ci);\r\n\r\n        if (c2 < 0xdc00 || c2 > 0xdfff)\r\n          throw new StringEncodeError(\r\n            `UTF-8 encode: second surrogate character 0x${c2.toString(\r\n              16\r\n            )} at index ${ci} out of range`\r\n          );\r\n\r\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\r\n        bytes[i++] = (c >> 18) | 240;\r\n        bytes[i++] = ((c >> 12) & 63) | 128;\r\n      } else bytes[i++] = (c >> 12) | 224;\r\n\r\n      bytes[i++] = ((c >> 6) & 63) | 128;\r\n    }\r\n\r\n    bytes[i++] = (c & 63) | 128;\r\n  }\r\n\r\n  return bytes.subarray(0, i);\r\n};\r\n\r\n/**\r\n * Unmarshals a string from an Uint8Array.\r\n *\r\n * @param bytes\r\n */\r\nconst decodeUTF8 = (bytes: Uint8Array): string => {\r\n  let i = 0;\r\n  let s = '';\r\n\r\n  while (i < bytes.length) {\r\n    let c = bytes[i++];\r\n\r\n    if (c > 127) {\r\n      if (c > 191 && c < 224) {\r\n        if (i >= bytes.length)\r\n          throw new StringDecodeError('UTF-8 decode: incomplete 2-byte sequence');\r\n\r\n        c = ((c & 31) << 6) | (bytes[i++] & 63);\r\n      } else if (c > 223 && c < 240) {\r\n        if (i + 1 >= bytes.length)\r\n          throw new StringDecodeError('UTF-8 decode: incomplete 3-byte sequence');\r\n\r\n        c = ((c & 15) << 12) | ((bytes[i++] & 63) << 6) | (bytes[i++] & 63);\r\n      } else if (c > 239 && c < 248) {\r\n        if (i + 2 >= bytes.length)\r\n          throw new StringDecodeError('UTF-8 decode: incomplete 4-byte sequence');\r\n\r\n        c =\r\n          ((c & 7) << 18) |\r\n          ((bytes[i++] & 63) << 12) |\r\n          ((bytes[i++] & 63) << 6) |\r\n          (bytes[i++] & 63);\r\n      } else\r\n        throw new StringDecodeError(\r\n          `UTF-8 decode: unknown multibyte start 0x${c.toString(16)} at index ${i - 1}`\r\n        );\r\n    }\r\n\r\n    if (c <= 0xffff) s += String.fromCharCode(c);\r\n    else if (c <= 0x10ffff) {\r\n      c -= 0x10000;\r\n      s += String.fromCharCode((c >> 10) | 0xd800);\r\n      s += String.fromCharCode((c & 0x3ff) | 0xdc00);\r\n    } else\r\n      throw new StringDecodeError(\r\n        `UTF-8 decode: code point 0x${c.toString(16)} exceeds UTF-16 reach`\r\n      );\r\n  }\r\n\r\n  return s;\r\n};\r\n\r\nexport { decodeUTF8, encodeUTF8 };\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/client';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Horizon,\r\n  Pong,\r\n  Key,\r\n  Command,\r\n  Chat,\r\n  Whisper,\r\n  Say,\r\n  Teamchat,\r\n  Votemute,\r\n  Localping,\r\n} from '../types/packets-client';\r\n\r\nconst staticAckPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 5);\r\n\r\n  return buffer;\r\n})();\r\nconst staticScoredetailedPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 12);\r\n\r\n  return buffer;\r\n})();\r\n\r\nexport default {\r\n  [packet.LOGIN]: (msg: Login): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const name = encodeUTF8(msg.name);\r\n    const session = encodeUTF8(msg.session);\r\n    const flag = encodeUTF8(msg.flag);\r\n\r\n    const buffer = new ArrayBuffer(9 + name.length + session.length + flag.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // protocol, uint8\r\n    dataView.setUint8(offset, msg.protocol);\r\n    offset += 1;\r\n\r\n    // name, text\r\n    dataView.setUint8(offset, name.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < name.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, name[charOffset]);\r\n    }\r\n\r\n    offset += name.length;\r\n\r\n    // session, text\r\n    dataView.setUint8(offset, session.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < session.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, session[charOffset]);\r\n    }\r\n\r\n    offset += session.length;\r\n\r\n    // horizonX, uint16\r\n    dataView.setUint16(offset, msg.horizonX, true);\r\n    offset += 2;\r\n\r\n    // horizonY, uint16\r\n    dataView.setUint16(offset, msg.horizonY, true);\r\n    offset += 2;\r\n\r\n    // flag, text\r\n    dataView.setUint8(offset, flag.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < flag.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, flag[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.BACKUP]: (msg: Backup): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const token = encodeUTF8(msg.token);\r\n\r\n    const buffer = new ArrayBuffer(2 + token.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // token, text\r\n    dataView.setUint8(offset, token.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < token.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, token[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.HORIZON]: (msg: Horizon): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // horizonX, uint16\r\n    dataView.setUint16(offset, msg.horizonX, true);\r\n    offset += 2;\r\n\r\n    // horizonY, uint16\r\n    dataView.setUint16(offset, msg.horizonY, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.ACK]: (): ArrayBuffer => staticAckPacket,\r\n\r\n  [packet.PONG]: (msg: Pong): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // num, uint32\r\n    dataView.setUint32(offset, msg.num, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.KEY]: (msg: Key): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(7);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // seq, uint32\r\n    dataView.setUint32(offset, msg.seq, true);\r\n    offset += 4;\r\n\r\n    // key, uint8\r\n    dataView.setUint8(offset, msg.key);\r\n    offset += 1;\r\n\r\n    // state, boolean\r\n    dataView.setUint8(offset, msg.state === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.COMMAND]: (msg: Command): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const com = encodeUTF8(msg.com);\r\n    const data = encodeUTF8(msg.data);\r\n\r\n    const buffer = new ArrayBuffer(3 + com.length + data.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // com, text\r\n    dataView.setUint8(offset, com.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < com.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, com[charOffset]);\r\n    }\r\n\r\n    offset += com.length;\r\n\r\n    // data, text\r\n    dataView.setUint8(offset, data.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < data.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, data[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCOREDETAILED]: (): ArrayBuffer => staticScoredetailedPacket,\r\n\r\n  [packet.CHAT]: (msg: Chat): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.WHISPER]: (msg: Whisper): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SAY]: (msg: Say): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.TEAMCHAT]: (msg: Teamchat): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.VOTEMUTE]: (msg: Votemute): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.LOCALPING]: (msg: Localping): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // auth, uint32\r\n    dataView.setUint32(offset, msg.auth, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n};\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/server';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Ping,\r\n  PingResult,\r\n  Error,\r\n  CommandReply,\r\n  PlayerNew,\r\n  PlayerLeave,\r\n  PlayerUpdate,\r\n  PlayerFire,\r\n  PlayerHit,\r\n  PlayerRespawn,\r\n  PlayerFlag,\r\n  PlayerKill,\r\n  PlayerUpgrade,\r\n  PlayerType,\r\n  PlayerPowerup,\r\n  PlayerLevel,\r\n  PlayerReteam,\r\n  GameFlag,\r\n  GameSpectate,\r\n  GamePlayersalive,\r\n  GameFirewall,\r\n  EventRepel,\r\n  EventBoost,\r\n  EventBounce,\r\n  EventStealth,\r\n  EventLeavehorizon,\r\n  MobUpdate,\r\n  MobUpdateStationary,\r\n  MobDespawn,\r\n  MobDespawnCoords,\r\n  ChatPublic,\r\n  ChatTeam,\r\n  ChatSay,\r\n  ChatWhisper,\r\n  ChatVotemutepassed,\r\n  ScoreUpdate,\r\n  ScoreBoard,\r\n  ScoreDetailed,\r\n  ScoreDetailedCtf,\r\n  ScoreDetailedBtr,\r\n  ServerMessage,\r\n  ServerCustom,\r\n} from '../types/packets-server';\r\n\r\nconst staticBackupPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 1);\r\n\r\n  return buffer;\r\n})();\r\nconst staticAckPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 7);\r\n\r\n  return buffer;\r\n})();\r\nconst staticChatVotemutedPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 79);\r\n\r\n  return buffer;\r\n})();\r\n\r\nexport default {\r\n  [packet.LOGIN]: (msg: Login): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    const arrStrings = [];\r\n    let arrStringsOffset = 0;\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 17;\r\n\r\n      // String \"name\" size calculation\r\n      arrStrings[arrStringsOffset] = encodeUTF8(msg.players[i].name);\r\n      arraysSize += arrStrings[arrStringsOffset].length;\r\n      arrStringsOffset += 1;\r\n    }\r\n\r\n    // Array \"bots\" size calculation\r\n    for (let i = 0; i < msg.bots.length; i += 1) {\r\n      arraysSize += 2;\r\n    }\r\n\r\n    // Root strings size calculation\r\n    const token = encodeUTF8(msg.token);\r\n    const room = encodeUTF8(msg.room);\r\n    const serverConfiguration = encodeUTF8(msg.serverConfiguration);\r\n\r\n    const buffer = new ArrayBuffer(\r\n      19 + token.length + room.length + serverConfiguration.length + arraysSize\r\n    );\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    arrStringsOffset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // success, boolean\r\n    dataView.setUint8(offset, msg.success === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // team, uint16\r\n    dataView.setUint16(offset, msg.team, true);\r\n    offset += 2;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // token, text\r\n    dataView.setUint8(offset, token.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < token.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, token[charOffset]);\r\n    }\r\n\r\n    offset += token.length;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // room, text\r\n    dataView.setUint8(offset, room.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < room.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, room[charOffset]);\r\n    }\r\n\r\n    offset += room.length;\r\n\r\n    // players, array\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint16(offset, players.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[status], uint8\r\n        dataView.setUint8(offset, players[i].status);\r\n        offset += 1;\r\n\r\n        // players[level], uint8\r\n        dataView.setUint8(offset, players[i].level);\r\n        offset += 1;\r\n\r\n        // players[name], text\r\n        dataView.setUint8(offset, arrStrings[arrStringsOffset].length);\r\n        offset += 1;\r\n\r\n        for (\r\n          let charOffset = 0;\r\n          charOffset < arrStrings[arrStringsOffset].length;\r\n          charOffset += 1\r\n        ) {\r\n          dataView.setUint8(offset + charOffset, arrStrings[arrStringsOffset][charOffset]);\r\n        }\r\n\r\n        offset += arrStrings[arrStringsOffset].length;\r\n        arrStringsOffset += 1;\r\n\r\n        // players[type], uint8\r\n        dataView.setUint8(offset, players[i].type);\r\n        offset += 1;\r\n\r\n        // players[team], uint16\r\n        dataView.setUint16(offset, players[i].team, true);\r\n        offset += 2;\r\n\r\n        // players[posX], coordx\r\n        dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[posY], coordy\r\n        dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[rot], rotation\r\n        dataView.setUint16(offset, players[i].rot * 6553.6, true);\r\n        offset += 2;\r\n\r\n        // players[flag], uint16\r\n        dataView.setUint16(offset, players[i].flag, true);\r\n        offset += 2;\r\n\r\n        // players[upgrades], uint8\r\n        dataView.setUint8(offset, players[i].upgrades);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    // serverConfiguration, textbig\r\n    dataView.setUint16(offset, serverConfiguration.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < serverConfiguration.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, serverConfiguration[charOffset]);\r\n    }\r\n\r\n    offset += serverConfiguration.length;\r\n\r\n    // bots, array\r\n    {\r\n      const { bots } = msg;\r\n\r\n      dataView.setUint16(offset, bots.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < bots.length; i += 1) {\r\n        // bots[id], uint16\r\n        dataView.setUint16(offset, bots[i].id, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.BACKUP]: (): ArrayBuffer => staticBackupPacket,\r\n\r\n  [packet.PING]: (msg: Ping): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(9);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // num, uint32\r\n    dataView.setUint32(offset, msg.num, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PING_RESULT]: (msg: PingResult): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(11);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // ping, uint16\r\n    dataView.setUint16(offset, msg.ping, true);\r\n    offset += 2;\r\n\r\n    // playerstotal, uint32\r\n    dataView.setUint32(offset, msg.playerstotal, true);\r\n    offset += 4;\r\n\r\n    // playersgame, uint32\r\n    dataView.setUint32(offset, msg.playersgame, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.ACK]: (): ArrayBuffer => staticAckPacket,\r\n\r\n  [packet.ERROR]: (msg: Error): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(2);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // error, uint8\r\n    dataView.setUint8(offset, msg.error);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.COMMAND_REPLY]: (msg: CommandReply): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // text, textbig\r\n    dataView.setUint16(offset, text.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_NEW]: (msg: PlayerNew): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const name = encodeUTF8(msg.name);\r\n\r\n    const buffer = new ArrayBuffer(18 + name.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // status, uint8\r\n    dataView.setUint8(offset, msg.status);\r\n    offset += 1;\r\n\r\n    // name, text\r\n    dataView.setUint8(offset, name.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < name.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, name[charOffset]);\r\n    }\r\n\r\n    offset += name.length;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // team, uint16\r\n    dataView.setUint16(offset, msg.team, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // flag, uint16\r\n    dataView.setUint16(offset, msg.flag, true);\r\n    offset += 2;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    // isBot, boolean\r\n    dataView.setUint8(offset, msg.isBot === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_LEAVE]: (msg: PlayerLeave): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_UPDATE]: (msg: PlayerUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(21);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // keystate, uint8\r\n    dataView.setUint8(offset, msg.keystate);\r\n    offset += 1;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_FIRE]: (msg: PlayerFire): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"projectiles\" size calculation\r\n    for (let i = 0; i < msg.projectiles.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(11 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    // projectiles, arraysmall\r\n    {\r\n      const { projectiles } = msg;\r\n\r\n      dataView.setUint8(offset, projectiles.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < projectiles.length; i += 1) {\r\n        // projectiles[id], uint16\r\n        dataView.setUint16(offset, projectiles[i].id, true);\r\n        offset += 2;\r\n\r\n        // projectiles[type], uint8\r\n        dataView.setUint8(offset, projectiles[i].type);\r\n        offset += 1;\r\n\r\n        // projectiles[posX], coordx\r\n        dataView.setUint16(offset, projectiles[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[posY], coordy\r\n        dataView.setUint16(offset, projectiles[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[speedX], speed\r\n        dataView.setUint16(offset, projectiles[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[speedY], speed\r\n        dataView.setUint16(offset, projectiles[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[accelX], accel\r\n        dataView.setUint16(offset, projectiles[i].accelX * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[accelY], accel\r\n        dataView.setUint16(offset, projectiles[i].accelY * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[maxSpeed], speed\r\n        dataView.setUint16(offset, projectiles[i].maxSpeed * 1638.4 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_HIT]: (msg: PlayerHit): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 5;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(11 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // owner, uint16\r\n    dataView.setUint16(offset, msg.owner, true);\r\n    offset += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint8(offset, players.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[health], healthenergy\r\n        dataView.setUint8(offset, players[i].health * 255);\r\n        offset += 1;\r\n\r\n        // players[healthRegen], regen\r\n        dataView.setUint16(offset, players[i].healthRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_RESPAWN]: (msg: PlayerRespawn): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(12);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_FLAG]: (msg: PlayerFlag): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // flag, uint16\r\n    dataView.setUint16(offset, msg.flag, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_KILL]: (msg: PlayerKill): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(9);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // killer, uint16\r\n    dataView.setUint16(offset, msg.killer, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_UPGRADE]: (msg: PlayerUpgrade): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(8);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // upgrades, uint16\r\n    dataView.setUint16(offset, msg.upgrades, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // speed, uint8\r\n    dataView.setUint8(offset, msg.speed);\r\n    offset += 1;\r\n\r\n    // defense, uint8\r\n    dataView.setUint8(offset, msg.defense);\r\n    offset += 1;\r\n\r\n    // energy, uint8\r\n    dataView.setUint8(offset, msg.energy);\r\n    offset += 1;\r\n\r\n    // missile, uint8\r\n    dataView.setUint8(offset, msg.missile);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_TYPE]: (msg: PlayerType): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_POWERUP]: (msg: PlayerPowerup): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(6);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // duration, uint32\r\n    dataView.setUint32(offset, msg.duration, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_LEVEL]: (msg: PlayerLevel): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // level, uint8\r\n    dataView.setUint8(offset, msg.level);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_RETEAM]: (msg: PlayerReteam): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 4;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // players, array\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint16(offset, players.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[team], uint16\r\n        dataView.setUint16(offset, players[i].team, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_FLAG]: (msg: GameFlag): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(13);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // flag, uint8\r\n    dataView.setUint8(offset, msg.flag);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // blueteam, uint8\r\n    dataView.setUint8(offset, msg.blueteam);\r\n    offset += 1;\r\n\r\n    // redteam, uint8\r\n    dataView.setUint8(offset, msg.redteam);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_SPECTATE]: (msg: GameSpectate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_PLAYERSALIVE]: (msg: GamePlayersalive): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // players, uint16\r\n    dataView.setUint16(offset, msg.players, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_FIREWALL]: (msg: GameFirewall): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(15);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // status, uint8\r\n    dataView.setUint8(offset, msg.status);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // radius, float32\r\n    dataView.setFloat32(offset, msg.radius, true);\r\n    offset += 4;\r\n\r\n    // speed, float32\r\n    dataView.setFloat32(offset, msg.speed, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_REPEL]: (msg: EventRepel): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 19;\r\n    }\r\n\r\n    // Array \"mobs\" size calculation\r\n    for (let i = 0; i < msg.mobs.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(22 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint8(offset, players.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[keystate], uint8\r\n        dataView.setUint8(offset, players[i].keystate);\r\n        offset += 1;\r\n\r\n        // players[posX], coordx\r\n        dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[posY], coordy\r\n        dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[rot], rotation\r\n        dataView.setUint16(offset, players[i].rot * 6553.6, true);\r\n        offset += 2;\r\n\r\n        // players[speedX], speed\r\n        dataView.setUint16(offset, players[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[speedY], speed\r\n        dataView.setUint16(offset, players[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[energy], healthenergy\r\n        dataView.setUint8(offset, players[i].energy * 255);\r\n        offset += 1;\r\n\r\n        // players[energyRegen], regen\r\n        dataView.setUint16(offset, players[i].energyRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[playerHealth], healthenergy\r\n        dataView.setUint8(offset, players[i].playerHealth * 255);\r\n        offset += 1;\r\n\r\n        // players[playerHealthRegen], regen\r\n        dataView.setUint16(offset, players[i].playerHealthRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    // mobs, arraysmall\r\n    {\r\n      const { mobs } = msg;\r\n\r\n      dataView.setUint8(offset, mobs.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < mobs.length; i += 1) {\r\n        // mobs[id], uint16\r\n        dataView.setUint16(offset, mobs[i].id, true);\r\n        offset += 2;\r\n\r\n        // mobs[type], uint8\r\n        dataView.setUint8(offset, mobs[i].type);\r\n        offset += 1;\r\n\r\n        // mobs[posX], coordx\r\n        dataView.setUint16(offset, mobs[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[posY], coordy\r\n        dataView.setUint16(offset, mobs[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[speedX], speed\r\n        dataView.setUint16(offset, mobs[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[speedY], speed\r\n        dataView.setUint16(offset, mobs[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[accelX], accel\r\n        dataView.setUint16(offset, mobs[i].accelX * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[accelY], accel\r\n        dataView.setUint16(offset, mobs[i].accelY * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[maxSpeed], speed\r\n        dataView.setUint16(offset, mobs[i].maxSpeed * 1638.4 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_BOOST]: (msg: EventBoost): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(23);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // boost, boolean\r\n    dataView.setUint8(offset, msg.boost === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_BOUNCE]: (msg: EventBounce): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(20);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // keystate, uint8\r\n    dataView.setUint8(offset, msg.keystate);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_STEALTH]: (msg: EventStealth): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(7);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // state, boolean\r\n    dataView.setUint8(offset, msg.state === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_LEAVEHORIZON]: (msg: EventLeavehorizon): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_UPDATE]: (msg: MobUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(22);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // accelX, accel\r\n    dataView.setUint16(offset, msg.accelX * 32768 + 32768, true);\r\n    offset += 2;\r\n\r\n    // accelY, accel\r\n    dataView.setUint16(offset, msg.accelY * 32768 + 32768, true);\r\n    offset += 2;\r\n\r\n    // maxSpeed, speed\r\n    dataView.setUint16(offset, msg.maxSpeed * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_UPDATE_STATIONARY]: (msg: MobUpdateStationary): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(12);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, float32\r\n    dataView.setFloat32(offset, msg.posX, true);\r\n    offset += 4;\r\n\r\n    // posY, float32\r\n    dataView.setFloat32(offset, msg.posY, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN]: (msg: MobDespawn): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN_COORDS]: (msg: MobDespawnCoords): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(8);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_PUBLIC]: (msg: ChatPublic): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_TEAM]: (msg: ChatTeam): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_SAY]: (msg: ChatSay): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_WHISPER]: (msg: ChatWhisper): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(6 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // from, uint16\r\n    dataView.setUint16(offset, msg.from, true);\r\n    offset += 2;\r\n\r\n    // to, uint16\r\n    dataView.setUint16(offset, msg.to, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTEPASSED]: (msg: ChatVotemutepassed): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTED]: (): ArrayBuffer => staticChatVotemutedPacket,\r\n\r\n  [packet.SCORE_UPDATE]: (msg: ScoreUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(21);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // score, uint32\r\n    dataView.setUint32(offset, msg.score, true);\r\n    offset += 4;\r\n\r\n    // earnings, uint32\r\n    dataView.setUint32(offset, msg.earnings, true);\r\n    offset += 4;\r\n\r\n    // upgrades, uint16\r\n    dataView.setUint16(offset, msg.upgrades, true);\r\n    offset += 2;\r\n\r\n    // totalkills, uint32\r\n    dataView.setUint32(offset, msg.totalkills, true);\r\n    offset += 4;\r\n\r\n    // totaldeaths, uint32\r\n    dataView.setUint32(offset, msg.totaldeaths, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_BOARD]: (msg: ScoreBoard): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"data\" size calculation\r\n    for (let i = 0; i < msg.data.length; i += 1) {\r\n      arraysSize += 7;\r\n    }\r\n\r\n    // Array \"rankings\" size calculation\r\n    for (let i = 0; i < msg.rankings.length; i += 1) {\r\n      arraysSize += 4;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(5 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // data, array\r\n    {\r\n      const { data } = msg;\r\n\r\n      dataView.setUint16(offset, data.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < data.length; i += 1) {\r\n        // data[id], uint16\r\n        dataView.setUint16(offset, data[i].id, true);\r\n        offset += 2;\r\n\r\n        // data[score], uint32\r\n        dataView.setUint32(offset, data[i].score, true);\r\n        offset += 4;\r\n\r\n        // data[level], uint8\r\n        dataView.setUint8(offset, data[i].level);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    // rankings, array\r\n    {\r\n      const { rankings } = msg;\r\n\r\n      dataView.setUint16(offset, rankings.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < rankings.length; i += 1) {\r\n        // rankings[id], uint16\r\n        dataView.setUint16(offset, rankings[i].id, true);\r\n        offset += 2;\r\n\r\n        // rankings[x], uint8\r\n        dataView.setUint8(offset, rankings[i].x);\r\n        offset += 1;\r\n\r\n        // rankings[y], uint8\r\n        dataView.setUint8(offset, rankings[i].y);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED]: (msg: ScoreDetailed): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_CTF]: (msg: ScoreDetailedCtf): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 19;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[captures], uint16\r\n        dataView.setUint16(offset, scores[i].captures, true);\r\n        offset += 2;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_BTR]: (msg: ScoreDetailedBtr): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 20;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[alive], boolean\r\n        dataView.setUint8(offset, scores[i].alive === false ? 0 : 1);\r\n        offset += 1;\r\n\r\n        // scores[wins], uint16\r\n        dataView.setUint16(offset, scores[i].wins, true);\r\n        offset += 2;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SERVER_MESSAGE]: (msg: ServerMessage): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(8 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // duration, uint32\r\n    dataView.setUint32(offset, msg.duration, true);\r\n    offset += 4;\r\n\r\n    // text, textbig\r\n    dataView.setUint16(offset, text.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SERVER_CUSTOM]: (msg: ServerCustom): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const data = encodeUTF8(msg.data);\r\n\r\n    const buffer = new ArrayBuffer(4 + data.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // data, textbig\r\n    dataView.setUint16(offset, data.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < data.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, data[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n};\r\n","import CLIENT_SCHEMAS from '../schemas/client';\r\nimport SERVER_SCHEMAS from '../schemas/server';\r\nimport { DATA_TYPES } from '../types/data';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport PREDEFINED_CLIENT_MARSHAL from './client';\r\nimport PREDEFINED_SERVER_MARSHAL from './server';\r\nimport { WSPacket, ProtocolPacket } from '../packets';\r\n\r\nconst SERVER_MESSAGE = 0;\r\nconst CLIENT_MESSAGE = 1;\r\n\r\nconst encodedStrings = new (class {\r\n  public storage: Uint8Array[];\r\n\r\n  constructor() {\r\n    this.storage = [];\r\n  }\r\n\r\n  last(): Uint8Array | null {\r\n    if (this.storage.length > 0) {\r\n      return this.storage[this.storage.length - 1];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  put(str: Uint8Array): void {\r\n    this.storage.push(str);\r\n  }\r\n\r\n  shift(): Uint8Array {\r\n    return this.storage.shift();\r\n  }\r\n\r\n  flush(): void {\r\n    this.storage = [];\r\n  }\r\n})();\r\n\r\nconst flushVars = (): void => {\r\n  encodedStrings.flush();\r\n};\r\n\r\nconst calcBufferLength = (\r\n  data: ProtocolPacket,\r\n  dataSchema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): number => {\r\n  let length = 0;\r\n\r\n  for (let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\r\n    const fieldData = data[fieldName];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        encodedStrings.put(encodeUTF8(fieldData as string));\r\n\r\n        if (fieldType === DATA_TYPES.textbig) {\r\n          length += 2;\r\n        } else {\r\n          length += 1;\r\n        }\r\n\r\n        length += encodedStrings.last().length;\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        if (fieldType === DATA_TYPES.array) {\r\n          length += 2;\r\n        } else {\r\n          length += 1;\r\n        }\r\n\r\n        for (let index = 0; index < (fieldData as []).length; index += 1) {\r\n          length += calcBufferLength(fieldData[index], subSchema);\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n      case DATA_TYPES.boolean:\r\n      case DATA_TYPES.healthenergy:\r\n        length += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n      case DATA_TYPES.speed:\r\n      case DATA_TYPES.accel:\r\n      case DATA_TYPES.coordx:\r\n      case DATA_TYPES.coordy:\r\n      case DATA_TYPES.rotation:\r\n      case DATA_TYPES.regen:\r\n        length += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n      case DATA_TYPES.coord24:\r\n        length += 3;\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n      case DATA_TYPES.float32:\r\n        length += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        length += 8;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return length;\r\n};\r\n\r\nconst fillBufferWithData = (\r\n  dataView: DataView,\r\n  startOffset: number,\r\n  data: WSPacket,\r\n  dataSchema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): number => {\r\n  let offset = startOffset;\r\n\r\n  if (offset === 1) {\r\n    dataView.setUint8(0, data.c);\r\n  }\r\n\r\n  for (let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\r\n    const fieldData = data[fieldName];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        {\r\n          const encodedString = encodedStrings.shift();\r\n\r\n          if (fieldType === DATA_TYPES.textbig) {\r\n            dataView.setUint16(offset, encodedString.length, true);\r\n            offset += 2;\r\n          } else {\r\n            dataView.setUint8(offset, encodedString.length);\r\n            offset += 1;\r\n          }\r\n\r\n          for (let charOffset = 0; charOffset < encodedString.length; charOffset += 1) {\r\n            dataView.setUint8(offset + charOffset, encodedString[charOffset]);\r\n          }\r\n\r\n          offset += encodedString.length;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        if (fieldType === DATA_TYPES.array) {\r\n          dataView.setUint16(offset, fieldData.length, true);\r\n          offset += 2;\r\n        } else {\r\n          dataView.setUint8(offset, fieldData.length);\r\n          offset += 1;\r\n        }\r\n\r\n        for (\r\n          let arrayElementIndex = 0;\r\n          arrayElementIndex < fieldData.length;\r\n          arrayElementIndex += 1\r\n        ) {\r\n          offset = fillBufferWithData(dataView, offset, fieldData[arrayElementIndex], subSchema);\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n        dataView.setUint8(offset, fieldData);\r\n        offset += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.healthenergy:\r\n        dataView.setUint8(offset, fieldData * 255);\r\n        offset += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n        dataView.setUint16(offset, fieldData, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.regen:\r\n        dataView.setUint16(offset, fieldData * 1e6 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.rotation:\r\n        dataView.setUint16(offset, fieldData * 6553.6, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordy:\r\n        dataView.setUint16(offset, fieldData * 4 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordx:\r\n        dataView.setUint16(offset, fieldData * 2 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.accel:\r\n        dataView.setUint16(offset, fieldData * 32768 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.speed:\r\n        dataView.setUint16(offset, fieldData * 1638.4 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n        {\r\n          const u8 = fieldData % 256;\r\n          const u16 = (fieldData - u8) / 256;\r\n\r\n          dataView.setUint16(offset, u16, true);\r\n          offset += 2;\r\n\r\n          dataView.setUint8(offset, u8);\r\n          offset += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.coord24:\r\n        {\r\n          const value = fieldData * 512 + 8388608;\r\n          const u8 = value % 256;\r\n          const u16 = (value - u8) / 256;\r\n\r\n          dataView.setUint16(offset, u16, true);\r\n          offset += 2;\r\n          dataView.setUint8(offset, u8);\r\n          offset += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n        dataView.setUint32(offset, fieldData, true);\r\n        offset += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float32:\r\n        dataView.setFloat32(offset, fieldData, true);\r\n        offset += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        dataView.setFloat64(offset, fieldData, true);\r\n        offset += 8;\r\n        break;\r\n\r\n      case DATA_TYPES.boolean:\r\n        dataView.setUint8(offset, fieldData === false ? 0 : 1);\r\n        offset += 1;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return offset;\r\n};\r\n\r\nconst marshal = (\r\n  message: ProtocolPacket,\r\n  type: number,\r\n  usePredefinedMarshal: boolean\r\n): ArrayBuffer => {\r\n  flushVars();\r\n\r\n  const messageCode = message.c;\r\n\r\n  let schema = null;\r\n  let predefMarshal = null;\r\n\r\n  switch (type) {\r\n    case CLIENT_MESSAGE:\r\n      predefMarshal = PREDEFINED_CLIENT_MARSHAL[messageCode];\r\n      schema = CLIENT_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    case SERVER_MESSAGE:\r\n      predefMarshal = PREDEFINED_SERVER_MARSHAL[messageCode];\r\n      schema = SERVER_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  if (schema === null) {\r\n    return null;\r\n  }\r\n\r\n  let buffer = null;\r\n\r\n  if (usePredefinedMarshal && predefMarshal) {\r\n    buffer = predefMarshal(message);\r\n  } else {\r\n    let dataView = null;\r\n    let bufferLength = 0;\r\n\r\n    bufferLength = 1 + calcBufferLength(message, schema);\r\n    buffer = new ArrayBuffer(bufferLength);\r\n    dataView = new DataView(buffer);\r\n\r\n    fillBufferWithData(dataView, 1, message, schema);\r\n  }\r\n\r\n  return buffer;\r\n};\r\n\r\n/**\r\n * Marshal client message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst marshalClientMessage = (\r\n  message: ProtocolPacket,\r\n  usePredefinedMarshal = true\r\n): ArrayBuffer => {\r\n  return marshal(message, CLIENT_MESSAGE, usePredefinedMarshal);\r\n};\r\n\r\n/**\r\n * Marshal server message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst marshalServerMessage = (\r\n  message: ProtocolPacket,\r\n  usePredefinedMarshal = true\r\n): ArrayBuffer => {\r\n  return marshal(message, SERVER_MESSAGE, usePredefinedMarshal);\r\n};\r\n\r\nexport { marshalClientMessage, marshalServerMessage };\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/client';\r\nimport { decodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Horizon,\r\n  Ack,\r\n  Pong,\r\n  Key,\r\n  Command,\r\n  Scoredetailed,\r\n  Chat,\r\n  Whisper,\r\n  Say,\r\n  Teamchat,\r\n  Votemute,\r\n  Localping,\r\n} from '../types/packets-client';\r\n\r\nconst staticAckPacket: Ack = { c: 5 };\r\nconst staticScoredetailedPacket: Scoredetailed = { c: 12 };\r\n\r\nexport default {\r\n  [packet.LOGIN]: (buffer: ArrayBuffer): Login => {\r\n    const msg: Login = { c: 0 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // protocol, uint8\r\n    msg.protocol = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // name, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.name = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // session, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.session = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // horizonX, uint16\r\n    msg.horizonX = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // horizonY, uint16\r\n    msg.horizonY = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // flag, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.flag = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.BACKUP]: (buffer: ArrayBuffer): Backup => {\r\n    const msg: Backup = { c: 1 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // token, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.token = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.HORIZON]: (buffer: ArrayBuffer): Horizon => {\r\n    const msg: Horizon = { c: 2 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // horizonX, uint16\r\n    msg.horizonX = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // horizonY, uint16\r\n    msg.horizonY = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.ACK]: (): Ack => staticAckPacket,\r\n\r\n  [packet.PONG]: (buffer: ArrayBuffer): Pong => {\r\n    const msg: Pong = { c: 6 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // num, uint32\r\n    msg.num = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.KEY]: (buffer: ArrayBuffer): Key => {\r\n    const msg: Key = { c: 10 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // seq, uint32\r\n    msg.seq = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // key, uint8\r\n    msg.key = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // state, boolean\r\n    msg.state = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.COMMAND]: (buffer: ArrayBuffer): Command => {\r\n    const msg: Command = { c: 11 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // com, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.com = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // data, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.data = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCOREDETAILED]: (): Scoredetailed => staticScoredetailedPacket,\r\n\r\n  [packet.CHAT]: (buffer: ArrayBuffer): Chat => {\r\n    const msg: Chat = { c: 20 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.WHISPER]: (buffer: ArrayBuffer): Whisper => {\r\n    const msg: Whisper = { c: 21 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SAY]: (buffer: ArrayBuffer): Say => {\r\n    const msg: Say = { c: 22 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.TEAMCHAT]: (buffer: ArrayBuffer): Teamchat => {\r\n    const msg: Teamchat = { c: 23 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.VOTEMUTE]: (buffer: ArrayBuffer): Votemute => {\r\n    const msg: Votemute = { c: 24 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.LOCALPING]: (buffer: ArrayBuffer): Localping => {\r\n    const msg: Localping = { c: 255 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // auth, uint32\r\n    msg.auth = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n};\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/server';\r\nimport { decodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Ping,\r\n  PingResult,\r\n  Ack,\r\n  Error,\r\n  CommandReply,\r\n  PlayerNew,\r\n  PlayerLeave,\r\n  PlayerUpdate,\r\n  PlayerFire,\r\n  PlayerHit,\r\n  PlayerRespawn,\r\n  PlayerFlag,\r\n  PlayerKill,\r\n  PlayerUpgrade,\r\n  PlayerType,\r\n  PlayerPowerup,\r\n  PlayerLevel,\r\n  PlayerReteam,\r\n  GameFlag,\r\n  GameSpectate,\r\n  GamePlayersalive,\r\n  GameFirewall,\r\n  EventRepel,\r\n  EventBoost,\r\n  EventBounce,\r\n  EventStealth,\r\n  EventLeavehorizon,\r\n  MobUpdate,\r\n  MobUpdateStationary,\r\n  MobDespawn,\r\n  MobDespawnCoords,\r\n  ChatPublic,\r\n  ChatTeam,\r\n  ChatSay,\r\n  ChatWhisper,\r\n  ChatVotemutepassed,\r\n  ChatVotemuted,\r\n  ScoreUpdate,\r\n  ScoreBoard,\r\n  ScoreDetailed,\r\n  ScoreDetailedCtf,\r\n  ScoreDetailedBtr,\r\n  ServerMessage,\r\n  ServerCustom,\r\n} from '../types/packets-server';\r\n\r\nconst staticBackupPacket: Backup = { c: 1 };\r\nconst staticAckPacket: Ack = { c: 7 };\r\nconst staticChatVotemutedPacket: ChatVotemuted = { c: 79 };\r\n\r\nexport default {\r\n  [packet.LOGIN]: (buffer: ArrayBuffer): Login => {\r\n    const msg: Login = { c: 0 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // success, boolean\r\n    msg.success = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // team, uint16\r\n    msg.team = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // token, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.token = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // room, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.room = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // players, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: Login['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // status, uint8\r\n        arrayElement.status = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // name, text\r\n        {\r\n          const stringLength = dataView.getUint8(readIndex);\r\n          const encodedString = new Uint8Array(stringLength);\r\n\r\n          readIndex += 1;\r\n\r\n          for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n            encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n          }\r\n\r\n          arrayElement.name = decodeUTF8(encodedString);\r\n          readIndex += stringLength;\r\n        }\r\n\r\n        // type, uint8\r\n        arrayElement.type = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // team, uint16\r\n        arrayElement.team = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // rot, rotation\r\n        arrayElement.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n        readIndex += 2;\r\n\r\n        // flag, uint16\r\n        arrayElement.flag = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // upgrades, uint8\r\n        arrayElement.upgrades = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    // serverConfiguration, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.serverConfiguration = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // bots, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.bots = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: Login['bots'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.bots.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.BACKUP]: (): Backup => staticBackupPacket,\r\n\r\n  [packet.PING]: (buffer: ArrayBuffer): Ping => {\r\n    const msg: Ping = { c: 5 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // num, uint32\r\n    msg.num = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PING_RESULT]: (buffer: ArrayBuffer): PingResult => {\r\n    const msg: PingResult = { c: 6 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // ping, uint16\r\n    msg.ping = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // playerstotal, uint32\r\n    msg.playerstotal = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // playersgame, uint32\r\n    msg.playersgame = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.ACK]: (): Ack => staticAckPacket,\r\n\r\n  [packet.ERROR]: (buffer: ArrayBuffer): Error => {\r\n    const msg: Error = { c: 8 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // error, uint8\r\n    msg.error = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.COMMAND_REPLY]: (buffer: ArrayBuffer): CommandReply => {\r\n    const msg: CommandReply = { c: 9 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // text, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_NEW]: (buffer: ArrayBuffer): PlayerNew => {\r\n    const msg: PlayerNew = { c: 10 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // status, uint8\r\n    msg.status = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // name, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.name = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // team, uint16\r\n    msg.team = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // flag, uint16\r\n    msg.flag = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // upgrades, uint8\r\n    msg.upgrades = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // isBot, boolean\r\n    msg.isBot = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_LEAVE]: (buffer: ArrayBuffer): PlayerLeave => {\r\n    const msg: PlayerLeave = { c: 11 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_UPDATE]: (buffer: ArrayBuffer): PlayerUpdate => {\r\n    const msg: PlayerUpdate = { c: 12 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // keystate, uint8\r\n    msg.keystate = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // upgrades, uint8\r\n    msg.upgrades = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_FIRE]: (buffer: ArrayBuffer): PlayerFire => {\r\n    const msg: PlayerFire = { c: 13 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    // projectiles, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.projectiles = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: PlayerFire['projectiles'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // type, uint8\r\n        arrayElement.type = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // speedX, speed\r\n        arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // speedY, speed\r\n        arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // accelX, accel\r\n        arrayElement.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // accelY, accel\r\n        arrayElement.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // maxSpeed, speed\r\n        arrayElement.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        msg.projectiles.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_HIT]: (buffer: ArrayBuffer): PlayerHit => {\r\n    const msg: PlayerHit = { c: 14 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // owner, uint16\r\n    msg.owner = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: PlayerHit['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // health, healthenergy\r\n        arrayElement.health = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n\r\n        // healthRegen, regen\r\n        arrayElement.healthRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_RESPAWN]: (buffer: ArrayBuffer): PlayerRespawn => {\r\n    const msg: PlayerRespawn = { c: 15 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // upgrades, uint8\r\n    msg.upgrades = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_FLAG]: (buffer: ArrayBuffer): PlayerFlag => {\r\n    const msg: PlayerFlag = { c: 16 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // flag, uint16\r\n    msg.flag = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_KILL]: (buffer: ArrayBuffer): PlayerKill => {\r\n    const msg: PlayerKill = { c: 17 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // killer, uint16\r\n    msg.killer = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_UPGRADE]: (buffer: ArrayBuffer): PlayerUpgrade => {\r\n    const msg: PlayerUpgrade = { c: 18 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // upgrades, uint16\r\n    msg.upgrades = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // speed, uint8\r\n    msg.speed = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // defense, uint8\r\n    msg.defense = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // energy, uint8\r\n    msg.energy = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // missile, uint8\r\n    msg.missile = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_TYPE]: (buffer: ArrayBuffer): PlayerType => {\r\n    const msg: PlayerType = { c: 19 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_POWERUP]: (buffer: ArrayBuffer): PlayerPowerup => {\r\n    const msg: PlayerPowerup = { c: 20 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // duration, uint32\r\n    msg.duration = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_LEVEL]: (buffer: ArrayBuffer): PlayerLevel => {\r\n    const msg: PlayerLevel = { c: 21 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // level, uint8\r\n    msg.level = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_RETEAM]: (buffer: ArrayBuffer): PlayerReteam => {\r\n    const msg: PlayerReteam = { c: 22 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // players, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: PlayerReteam['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // team, uint16\r\n        arrayElement.team = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_FLAG]: (buffer: ArrayBuffer): GameFlag => {\r\n    const msg: GameFlag = { c: 30 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // flag, uint8\r\n    msg.flag = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // blueteam, uint8\r\n    msg.blueteam = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // redteam, uint8\r\n    msg.redteam = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_SPECTATE]: (buffer: ArrayBuffer): GameSpectate => {\r\n    const msg: GameSpectate = { c: 31 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_PLAYERSALIVE]: (buffer: ArrayBuffer): GamePlayersalive => {\r\n    const msg: GamePlayersalive = { c: 32 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // players, uint16\r\n    msg.players = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_FIREWALL]: (buffer: ArrayBuffer): GameFirewall => {\r\n    const msg: GameFirewall = { c: 33 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // status, uint8\r\n    msg.status = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // radius, float32\r\n    msg.radius = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // speed, float32\r\n    msg.speed = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_REPEL]: (buffer: ArrayBuffer): EventRepel => {\r\n    const msg: EventRepel = { c: 40 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: EventRepel['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // keystate, uint8\r\n        arrayElement.keystate = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // rot, rotation\r\n        arrayElement.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n        readIndex += 2;\r\n\r\n        // speedX, speed\r\n        arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // speedY, speed\r\n        arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // energy, healthenergy\r\n        arrayElement.energy = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n\r\n        // energyRegen, regen\r\n        arrayElement.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n\r\n        // playerHealth, healthenergy\r\n        arrayElement.playerHealth = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n\r\n        // playerHealthRegen, regen\r\n        arrayElement.playerHealthRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    // mobs, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.mobs = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: EventRepel['mobs'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // type, uint8\r\n        arrayElement.type = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // speedX, speed\r\n        arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // speedY, speed\r\n        arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // accelX, accel\r\n        arrayElement.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // accelY, accel\r\n        arrayElement.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // maxSpeed, speed\r\n        arrayElement.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        msg.mobs.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_BOOST]: (buffer: ArrayBuffer): EventBoost => {\r\n    const msg: EventBoost = { c: 41 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // boost, boolean\r\n    msg.boost = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_BOUNCE]: (buffer: ArrayBuffer): EventBounce => {\r\n    const msg: EventBounce = { c: 42 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // keystate, uint8\r\n    msg.keystate = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_STEALTH]: (buffer: ArrayBuffer): EventStealth => {\r\n    const msg: EventStealth = { c: 43 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // state, boolean\r\n    msg.state = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_LEAVEHORIZON]: (buffer: ArrayBuffer): EventLeavehorizon => {\r\n    const msg: EventLeavehorizon = { c: 44 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_UPDATE]: (buffer: ArrayBuffer): MobUpdate => {\r\n    const msg: MobUpdate = { c: 60 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // accelX, accel\r\n    msg.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n    readIndex += 2;\r\n\r\n    // accelY, accel\r\n    msg.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n    readIndex += 2;\r\n\r\n    // maxSpeed, speed\r\n    msg.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_UPDATE_STATIONARY]: (buffer: ArrayBuffer): MobUpdateStationary => {\r\n    const msg: MobUpdateStationary = { c: 61 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, float32\r\n    msg.posX = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // posY, float32\r\n    msg.posY = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN]: (buffer: ArrayBuffer): MobDespawn => {\r\n    const msg: MobDespawn = { c: 62 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN_COORDS]: (buffer: ArrayBuffer): MobDespawnCoords => {\r\n    const msg: MobDespawnCoords = { c: 63 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_PUBLIC]: (buffer: ArrayBuffer): ChatPublic => {\r\n    const msg: ChatPublic = { c: 70 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_TEAM]: (buffer: ArrayBuffer): ChatTeam => {\r\n    const msg: ChatTeam = { c: 71 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_SAY]: (buffer: ArrayBuffer): ChatSay => {\r\n    const msg: ChatSay = { c: 72 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_WHISPER]: (buffer: ArrayBuffer): ChatWhisper => {\r\n    const msg: ChatWhisper = { c: 73 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // from, uint16\r\n    msg.from = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // to, uint16\r\n    msg.to = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTEPASSED]: (buffer: ArrayBuffer): ChatVotemutepassed => {\r\n    const msg: ChatVotemutepassed = { c: 78 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTED]: (): ChatVotemuted => staticChatVotemutedPacket,\r\n\r\n  [packet.SCORE_UPDATE]: (buffer: ArrayBuffer): ScoreUpdate => {\r\n    const msg: ScoreUpdate = { c: 80 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // score, uint32\r\n    msg.score = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // earnings, uint32\r\n    msg.earnings = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // upgrades, uint16\r\n    msg.upgrades = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // totalkills, uint32\r\n    msg.totalkills = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // totaldeaths, uint32\r\n    msg.totaldeaths = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_BOARD]: (buffer: ArrayBuffer): ScoreBoard => {\r\n    const msg: ScoreBoard = { c: 81 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // data, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.data = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreBoard['data'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        msg.data.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    // rankings, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.rankings = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreBoard['rankings'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // x, uint8\r\n        arrayElement.x = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // y, uint8\r\n        arrayElement.y = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        msg.rankings.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED]: (buffer: ArrayBuffer): ScoreDetailed => {\r\n    const msg: ScoreDetailed = { c: 82 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // scores, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.scores = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreDetailed['scores'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // kills, uint16\r\n        arrayElement.kills = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // deaths, uint16\r\n        arrayElement.deaths = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // damage, float32\r\n        arrayElement.damage = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // ping, uint16\r\n        arrayElement.ping = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.scores.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_CTF]: (buffer: ArrayBuffer): ScoreDetailedCtf => {\r\n    const msg: ScoreDetailedCtf = { c: 83 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // scores, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.scores = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreDetailedCtf['scores'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // captures, uint16\r\n        arrayElement.captures = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // kills, uint16\r\n        arrayElement.kills = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // deaths, uint16\r\n        arrayElement.deaths = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // damage, float32\r\n        arrayElement.damage = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // ping, uint16\r\n        arrayElement.ping = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.scores.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_BTR]: (buffer: ArrayBuffer): ScoreDetailedBtr => {\r\n    const msg: ScoreDetailedBtr = { c: 84 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // scores, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.scores = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreDetailedBtr['scores'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // alive, boolean\r\n        arrayElement.alive = dataView.getUint8(readIndex) !== 0;\r\n        readIndex += 1;\r\n\r\n        // wins, uint16\r\n        arrayElement.wins = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // kills, uint16\r\n        arrayElement.kills = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // deaths, uint16\r\n        arrayElement.deaths = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // damage, float32\r\n        arrayElement.damage = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // ping, uint16\r\n        arrayElement.ping = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.scores.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SERVER_MESSAGE]: (buffer: ArrayBuffer): ServerMessage => {\r\n    const msg: ServerMessage = { c: 90 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // duration, uint32\r\n    msg.duration = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // text, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SERVER_CUSTOM]: (buffer: ArrayBuffer): ServerCustom => {\r\n    const msg: ServerCustom = { c: 91 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // data, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.data = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n};\r\n","import { ProtocolPacket } from '../packets';\r\nimport CLIENT_SCHEMAS from '../schemas/client';\r\nimport SERVER_SCHEMAS from '../schemas/server';\r\nimport { decodeUTF8 } from '../support/utils';\r\nimport { DATA_TYPES } from '../types/data';\r\nimport PREDEFINED_CLIENT_MARSHAL from './client';\r\nimport PREDEFINED_SERVER_MARSHAL from './server';\r\n\r\nconst SERVER_BUFFER = 0;\r\nconst CLIENT_BUFFER = 1;\r\n\r\nconst readBufferData = (\r\n  dataView: DataView,\r\n  startReadIndex = 0,\r\n  schema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): ProtocolPacket => {\r\n  const message: ProtocolPacket = {};\r\n  let readIndex = startReadIndex;\r\n\r\n  if (readIndex === 0) {\r\n    message.c = dataView.getUint8(0);\r\n    readIndex += 1;\r\n  }\r\n\r\n  for (let fieldIndex = 0; fieldIndex < schema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = schema[fieldIndex];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        {\r\n          let stringLength = 0;\r\n\r\n          if (fieldType === DATA_TYPES.text) {\r\n            stringLength = dataView.getUint8(readIndex);\r\n            readIndex += 1;\r\n          } else {\r\n            stringLength = dataView.getUint16(readIndex, true);\r\n            readIndex += 2;\r\n          }\r\n\r\n          const encodedString = new Uint8Array(stringLength);\r\n\r\n          for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n            encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n          }\r\n\r\n          message[fieldName] = decodeUTF8(encodedString);\r\n          readIndex += stringLength;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        {\r\n          let arrayLength = 0;\r\n\r\n          if (fieldType === DATA_TYPES.arraysmall) {\r\n            arrayLength = dataView.getUint8(readIndex);\r\n            readIndex += 1;\r\n          } else {\r\n            arrayLength = dataView.getUint16(readIndex, true);\r\n            readIndex += 2;\r\n          }\r\n\r\n          message[fieldName] = [];\r\n\r\n          for (let arrayElementIndex = 0; arrayElementIndex < arrayLength; arrayElementIndex += 1) {\r\n            const arrayElement = {};\r\n\r\n            for (\r\n              let subSchemaFieldIndex = 0;\r\n              subSchemaFieldIndex < subSchema.length;\r\n              subSchemaFieldIndex += 1\r\n            ) {\r\n              const [subFieldName, subFieldType] = subSchema[subSchemaFieldIndex];\r\n\r\n              switch (subFieldType) {\r\n                case DATA_TYPES.text:\r\n                case DATA_TYPES.textbig:\r\n                  {\r\n                    let stringLength = 0;\r\n\r\n                    if (subFieldType === DATA_TYPES.text) {\r\n                      stringLength = dataView.getUint8(readIndex);\r\n                      readIndex += 1;\r\n                    } else {\r\n                      stringLength = dataView.getUint16(readIndex, true);\r\n                      readIndex += 2;\r\n                    }\r\n\r\n                    const encodedString = new Uint8Array(stringLength);\r\n\r\n                    for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n                      encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n                    }\r\n\r\n                    arrayElement[subFieldName] = decodeUTF8(encodedString);\r\n                    readIndex += stringLength;\r\n                  }\r\n\r\n                  break;\r\n\r\n                case DATA_TYPES.uint8:\r\n                  arrayElement[subFieldName] = dataView.getUint8(readIndex);\r\n                  readIndex += 1;\r\n                  break;\r\n\r\n                case DATA_TYPES.uint16:\r\n                  arrayElement[subFieldName] = dataView.getUint16(readIndex, true);\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.uint24:\r\n                  {\r\n                    const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n                    readIndex += 2;\r\n                    arrayElement[subFieldName] = u16 + dataView.getUint8(readIndex);\r\n                    readIndex += 1;\r\n                  }\r\n\r\n                  break;\r\n\r\n                case DATA_TYPES.uint32:\r\n                  arrayElement[subFieldName] = dataView.getUint32(readIndex, true);\r\n                  readIndex += 4;\r\n                  break;\r\n\r\n                case DATA_TYPES.float32:\r\n                  arrayElement[subFieldName] = dataView.getFloat32(readIndex, true);\r\n                  readIndex += 4;\r\n                  break;\r\n\r\n                case DATA_TYPES.float64:\r\n                  arrayElement[subFieldName] = dataView.getFloat64(readIndex, true);\r\n                  readIndex += 8;\r\n                  break;\r\n\r\n                case DATA_TYPES.boolean:\r\n                  arrayElement[subFieldName] = dataView.getUint8(readIndex) !== 0;\r\n                  readIndex += 1;\r\n                  break;\r\n\r\n                case DATA_TYPES.speed:\r\n                  arrayElement[subFieldName] =\r\n                    (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.accel:\r\n                  arrayElement[subFieldName] =\r\n                    (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.coordx:\r\n                  arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.coordy:\r\n                  arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.coord24:\r\n                  {\r\n                    const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n                    readIndex += 2;\r\n                    arrayElement[subFieldName] =\r\n                      (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n                    readIndex += 1;\r\n                  }\r\n\r\n                  break;\r\n\r\n                case DATA_TYPES.rotation:\r\n                  arrayElement[subFieldName] = dataView.getUint16(readIndex, true) / 6553.6;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.regen:\r\n                  arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.healthenergy:\r\n                  arrayElement[subFieldName] = dataView.getUint8(readIndex) / 255;\r\n                  readIndex += 1;\r\n                  break;\r\n\r\n                default:\r\n                  throw Error();\r\n              }\r\n            }\r\n\r\n            (message[fieldName] as {}[]).push(arrayElement);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n        message[fieldName] = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n        message[fieldName] = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n        {\r\n          const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n          readIndex += 2;\r\n          message[fieldName] = u16 + dataView.getUint8(readIndex);\r\n          readIndex += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n        message[fieldName] = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float32:\r\n        message[fieldName] = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        message[fieldName] = dataView.getFloat64(readIndex, true);\r\n        readIndex += 8;\r\n        break;\r\n\r\n      case DATA_TYPES.boolean:\r\n        message[fieldName] = dataView.getUint8(readIndex) !== 0;\r\n        readIndex += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.speed:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.accel:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordx:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordy:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coord24:\r\n        {\r\n          const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n          readIndex += 2;\r\n          message[fieldName] = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n          readIndex += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.rotation:\r\n        message[fieldName] = dataView.getUint16(readIndex, true) / 6553.6;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.regen:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.healthenergy:\r\n        message[fieldName] = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n        break;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\nconst unmarshal = (\r\n  buffer: ArrayBuffer,\r\n  type: number,\r\n  usePredefinedMarshal: boolean\r\n): ProtocolPacket => {\r\n  const dataView = new DataView(buffer);\r\n  const messageCode = dataView.getUint8(0);\r\n\r\n  let predefMarshal = null;\r\n  let message = null;\r\n  let schema = null;\r\n\r\n  switch (type) {\r\n    case CLIENT_BUFFER:\r\n      predefMarshal = PREDEFINED_CLIENT_MARSHAL[messageCode];\r\n      schema = CLIENT_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    case SERVER_BUFFER:\r\n      predefMarshal = PREDEFINED_SERVER_MARSHAL[messageCode];\r\n      schema = SERVER_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  if (usePredefinedMarshal && predefMarshal) {\r\n    message = predefMarshal(buffer);\r\n  } else {\r\n    if (schema === null) {\r\n      return null;\r\n    }\r\n\r\n    message = readBufferData(dataView, 0, schema);\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\n/**\r\n * Unmarshal client binary packet to protocol message.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst unmarshalClientMessage = (\r\n  message: ArrayBuffer,\r\n  usePredefinedMarshal = true\r\n): ProtocolPacket => {\r\n  return unmarshal(message, CLIENT_BUFFER, usePredefinedMarshal);\r\n};\r\n\r\n/**\r\n * Unmarshal server binary packet to protocol message.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst unmarshalServerMessage = (\r\n  message: ArrayBuffer,\r\n  usePredefinedMarshal = true\r\n): ProtocolPacket => {\r\n  return unmarshal(message, SERVER_BUFFER, usePredefinedMarshal);\r\n};\r\n\r\nexport { unmarshalClientMessage, unmarshalServerMessage };\r\n","/**\r\n * CLIENT_PACKETS.KEY types\r\n */\r\nexport enum KEY_CODES {\r\n  UP = 1,\r\n  DOWN = 2,\r\n  LEFT = 3,\r\n  RIGHT = 4,\r\n  FIRE = 5,\r\n  SPECIAL = 6,\r\n}\r\n\r\nexport interface Keystate {\r\n  UP: boolean;\r\n  DOWN: boolean;\r\n  LEFT: boolean;\r\n  RIGHT: boolean;\r\n}\r\n\r\nexport const KEY_NAMES = Object.assign(\r\n  {},\r\n  ...Object.entries(KEY_CODES).map(([name, code]) => ({ [code]: name }))\r\n);\r\n","/**\r\n * Protocol time, 10^-5 seconds.\r\n * Started from 0 at the moment of the server start.\r\n */\r\nexport type ClockTime = number;\r\n\r\n/**\r\n * SERVER_PACKETS.ERROR types.\r\n */\r\nexport enum SERVER_ERRORS {\r\n  PACKET_FLOODING_DISCONNECT = 1,\r\n  PACKET_FLOODING_BAN = 2,\r\n  GLOBAL_BAN = 3,\r\n  UNKNOWN_ERROR = 4,\r\n  REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN = 5,\r\n  AFK_DISCONNECT = 6,\r\n  PLAYER_KICKED = 7,\r\n  INVALID_LOGIN_DATA = 8,\r\n  INCORRECT_PROTOCOL = 9,\r\n  ACCOUNT_BANNED = 10,\r\n  ALREADY_LOGGED_IN = 11,\r\n  FORBIDDEN_TO_CHANGE_PLANE_IN_BTR = 12,\r\n  REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE = 13,\r\n  NOT_ENOUGH_UPGRADES = 20,\r\n  CHAT_SPAMMING = 30,\r\n  FLAG_CHANGE_TOO_FAST = 31,\r\n  UNKNOWN_COMMAND = 100,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.SERVER_MESSAGE types.\r\n */\r\nexport enum SERVER_MESSAGE_TYPES {\r\n  ALERT = 1,\r\n  INFO = 2,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.COMMAND_REPLY types.\r\n */\r\nexport enum COMMAND_REPLY_TYPES {\r\n  /**\r\n   * Special notification at the bottom of the chat.\r\n   */\r\n  CHAT = 0,\r\n\r\n  /**\r\n   * Popup. Use only for debug.\r\n   */\r\n  DEBUG = 1,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.EVENT_LEAVEHORIZON types.\r\n */\r\nexport enum LEAVE_HORIZON_TYPES {\r\n  PLAYER = 0,\r\n  MOB = 1,\r\n}\r\n\r\nexport enum MOB_TYPES {\r\n  PLAYER = 0,\r\n\r\n  // Projectiles\r\n  PREDATOR_MISSILE = 1,\r\n  GOLIATH_MISSILE = 2,\r\n  COPTER_MISSILE = 3,\r\n  TORNADO_MISSILE = 5,\r\n  TORNADO_SMALL_MISSILE = 6,\r\n  PROWLER_MISSILE = 7,\r\n\r\n  // Boxes\r\n  UPGRADE = 4,\r\n  SHIELD = 8,\r\n  INFERNO = 9,\r\n\r\n  // BTR\r\n  FIREWALL = 200,\r\n}\r\n\r\n/**\r\n * EXPIRED — box or projectile despawned.\r\n * PICKUP — player picked up a box.\r\n */\r\nexport enum MOB_DESPAWN_TYPES {\r\n  EXPIRED = 0,\r\n  PICKUP = 1,\r\n}\r\n\r\nexport enum PLAYER_LEVEL_UPDATE_TYPES {\r\n  INFORM = 0,\r\n  LEVELUP = 1,\r\n}\r\n\r\nexport enum PLAYER_STATUS {\r\n  /**\r\n   * On the map.\r\n   */\r\n  ALIVE = 0,\r\n\r\n  /**\r\n   * Dead or spectate\r\n   */\r\n  INACTIVE = 1,\r\n}\r\n\r\nexport enum PLAYER_UPGRADE_TYPES {\r\n  LOST = 0,\r\n  SPEED = 1,\r\n  DEFENSE = 2,\r\n  ENERGY = 3,\r\n  MISSILE = 4,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.SERVER_CUSTOM types.\r\n */\r\nexport enum SERVER_CUSTOM_TYPES {\r\n  BTR = 1,\r\n  CTF = 2,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.PLAYER_POWERUP types.\r\n */\r\nexport enum PLAYER_POWERUP_TYPES {\r\n  SHIELD = 1,\r\n  INFERNO = 2,\r\n}\r\n\r\nexport enum CTF_TEAMS {\r\n  BLUE = 1,\r\n  RED = 2,\r\n}\r\n\r\nexport enum CTF_FLAG_STATE {\r\n  /**\r\n   * Flag dropped.\r\n   */\r\n  STATIC = 1,\r\n\r\n  /**\r\n   * Frag currently owned by player.\r\n   */\r\n  DYNAMIC = 2,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum CTF_CAPTURE_BOUNTY {\r\n  BASE = 100,\r\n  INCREMENT = 100,\r\n  MAX = 1000,\r\n}\r\n\r\nexport enum BTR_FIREWALL_STATUS {\r\n  INACTIVE = 0,\r\n  ACTIVE = 1,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum CTF_WIN_BOUNTY {\r\n  BASE = 100,\r\n  INCREMENT = 100,\r\n  MAX = 1000,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum BTR_WIN_BOUNTY {\r\n  BASE = 500,\r\n  INCREMENT = 500,\r\n  MAX = 5000,\r\n}\r\n\r\nexport enum GAME_TYPES {\r\n  FFA = 1,\r\n  CTF = 2,\r\n  BTR = 3,\r\n}\r\n\r\nexport enum GAME_STATE_CODES {\r\n  LOGIN = 1,\r\n  CONNECTING = 2,\r\n  PLAYING = 3,\r\n}\r\n\r\nexport const GAME_STATE_NAMES = Object.assign(\r\n  {},\r\n  ...Object.entries(GAME_STATE_CODES).map(([name, code]) => ({ [code]: name }))\r\n);\r\n\r\nexport const MAP_SIZE = {\r\n  WIDTH: 32768,\r\n  HEIGHT: 16384,\r\n};\r\n","/**\r\n * Available texture to 2 letter ISO-3166-1 country codes\r\n *\r\n */\r\nconst FLAGS_CODE_TO_ISO = {\r\n  '1': 'SY',\r\n  '2': 'TH',\r\n  '3': 'TM',\r\n  '4': 'TN',\r\n  '5': 'TR',\r\n  '6': 'TT',\r\n  '7': 'TW',\r\n  '8': 'TZ',\r\n  '9': 'UA',\r\n  '10': 'UN',\r\n  '11': 'US',\r\n  '12': 'UY',\r\n  '13': 'UZ',\r\n  '14': 'VE',\r\n  '15': 'VN',\r\n  '16': 'PR',\r\n  '17': 'PT',\r\n  '18': 'PY',\r\n  '19': 'QA',\r\n  '20': 'RAINBOW',\r\n  '21': 'RO',\r\n  '22': 'RS',\r\n  '23': 'RU',\r\n  '24': 'SA',\r\n  '25': 'SE',\r\n  '26': 'SG',\r\n  '27': 'SI',\r\n  '28': 'SK',\r\n  '29': 'SM',\r\n  '30': 'MK',\r\n  '31': 'MO',\r\n  '32': 'MT',\r\n  '33': 'MX',\r\n  '34': 'MY',\r\n  '35': 'NG',\r\n  '36': 'NL',\r\n  '37': 'NO',\r\n  '38': 'NP',\r\n  '39': 'NZ',\r\n  '40': 'OM',\r\n  '41': 'PA',\r\n  '42': 'PE',\r\n  '43': 'JP',\r\n  '44': 'KP',\r\n  '45': 'KR',\r\n  '46': 'KW',\r\n  '47': 'KZ',\r\n  '48': 'LB',\r\n  '49': 'LI',\r\n  '50': 'LK',\r\n  '51': 'LT',\r\n  '52': 'LU',\r\n  '53': 'LV',\r\n  '54': 'HN',\r\n  '55': 'HR',\r\n  '56': 'HU',\r\n  '57': 'ID',\r\n  '58': 'IE',\r\n  '59': 'IL',\r\n  '60': 'IM',\r\n  '61': 'IMPERIAL',\r\n  '62': 'IN',\r\n  '63': 'IQ',\r\n  '64': 'DE',\r\n  '65': 'DK',\r\n  '66': 'DO',\r\n  '67': 'DZ',\r\n  '68': 'EC',\r\n  '69': 'EE',\r\n  '70': 'EG',\r\n  '71': 'ES',\r\n  '72': 'EU',\r\n  '73': 'BH',\r\n  '74': 'BO',\r\n  '75': 'BR',\r\n  '76': 'BT',\r\n  '77': 'BY',\r\n  '78': 'CA',\r\n  '79': 'CH',\r\n  '80': 'AD',\r\n  '81': 'AE',\r\n  '82': 'AL',\r\n  '83': 'AM',\r\n  '84': 'CL',\r\n  '85': 'AQ',\r\n  '86': 'CN',\r\n  '87': 'AR',\r\n  '88': 'FI',\r\n  '89': 'CO',\r\n  '90': 'AT',\r\n  '91': 'IR',\r\n  '92': 'FR',\r\n  '93': 'COMMUNIST',\r\n  '94': 'AU',\r\n  '95': 'LY',\r\n  '96': 'IS',\r\n  '97': 'GB',\r\n  '98': 'CONFEDERATE',\r\n  '99': 'AZ',\r\n  '100': 'MA',\r\n  '101': 'IT',\r\n  '102': 'GE',\r\n  '103': 'CR',\r\n  '104': 'BA',\r\n  '105': 'PH',\r\n  '106': 'MC',\r\n  '107': 'JM',\r\n  '108': 'GR',\r\n  '109': 'CU',\r\n  '110': 'BD',\r\n  '111': 'SO',\r\n  '112': 'PK',\r\n  '113': 'MD',\r\n  '114': 'JO',\r\n  '115': 'GT',\r\n  '116': 'CY',\r\n  '117': 'BE',\r\n  '118': 'ZA',\r\n  '119': 'SV',\r\n  '120': 'PL',\r\n  '121': 'ME',\r\n  '122': 'JOLLY',\r\n  '123': 'HK',\r\n  '124': 'CZ',\r\n  '125': 'BG',\r\n};\r\n\r\nconst FLAGS_ISO_TO_CODE = Object.assign(\r\n  {},\r\n  ...Object.entries(FLAGS_CODE_TO_ISO).map(([numCode, charCode]) => ({ [charCode]: ~~numCode }))\r\n);\r\n\r\n/**\r\n * Country by ISO 3166-2\r\n *\r\n */\r\nconst COUNTRY_NAMES = {\r\n  AL: 'Albania',\r\n  DZ: 'Algeria',\r\n  AD: 'Andorra',\r\n  AQ: 'Antarctica',\r\n  AR: 'Argentina',\r\n  AM: 'Armenia',\r\n  AU: 'Australia',\r\n  AT: 'Austria',\r\n  AZ: 'Azerbaijan',\r\n  BH: 'Bahrain',\r\n  BD: 'Bangladesh',\r\n  BY: 'Belarus',\r\n  BE: 'Belgium',\r\n  BT: 'Bhutan',\r\n  BO: 'Bolivia',\r\n  BA: 'Bosnia and Herzegovina',\r\n  BR: 'Brazil',\r\n  BG: 'Bulgaria',\r\n  CA: 'Canada',\r\n  CL: 'Chile',\r\n  CN: 'China',\r\n  CO: 'Colombia',\r\n  COMMUNIST: 'Communist',\r\n  CONFEDERATE: 'Confederate',\r\n  CR: 'CostaRica',\r\n  HR: 'Croatia',\r\n  CU: 'Cuba',\r\n  CY: 'Cyprus',\r\n  CZ: 'Czech Republic',\r\n  DK: 'Denmark',\r\n  DO: 'Dominican Republic',\r\n  KP: 'DPRK',\r\n  EC: 'Ecuador',\r\n  EG: 'Egypt',\r\n  SV: 'ElSalvador',\r\n  EE: 'Estonia',\r\n  EU: 'European Union',\r\n  FI: 'Finland',\r\n  FR: 'France',\r\n  GE: 'Georgia',\r\n  DE: 'Germany',\r\n  GR: 'Greece',\r\n  GT: 'Guatemala',\r\n  HN: 'Honduras',\r\n  HK: 'HongKong',\r\n  HU: 'Hungary',\r\n  IS: 'Iceland',\r\n  IMPERIAL: 'Imperial Japan',\r\n  IN: 'India',\r\n  ID: 'Indonesia',\r\n  IR: 'Iran',\r\n  IQ: 'Iraq',\r\n  IE: 'Ireland',\r\n  IM: 'Isle of Man',\r\n  IL: 'Israel',\r\n  IT: 'Italy',\r\n  JM: 'Jamaica',\r\n  JP: 'Japan',\r\n  JOLLY: 'Jolly Rogers',\r\n  JO: 'Jordan',\r\n  KZ: 'Kazakhstan',\r\n  KW: 'Kuwait',\r\n  LV: 'Latvia',\r\n  LB: 'Lebanon',\r\n  LY: 'Libyan Arab Jamahiriya',\r\n  LI: 'Liechtenstein',\r\n  LT: 'Lithuania',\r\n  LU: 'Luxembourg',\r\n  MO: 'Macao',\r\n  MK: 'Macedonia',\r\n  MY: 'Malaysia',\r\n  MT: 'Malta',\r\n  MX: 'Mexico',\r\n  MD: 'Moldova',\r\n  MC: 'Monaco',\r\n  ME: 'Montenegro',\r\n  MA: 'Morocco',\r\n  NP: 'Nepal',\r\n  NL: 'Netherlands',\r\n  NZ: 'New Zealand',\r\n  NG: 'Nigeria',\r\n  NO: 'Norway',\r\n  OM: 'Oman',\r\n  PK: 'Pakistan',\r\n  PA: 'Panama',\r\n  PY: 'Paraguay',\r\n  PE: 'Peru',\r\n  PH: 'Philippines',\r\n  PL: 'Poland',\r\n  PT: 'Portugal',\r\n  PR: 'PuertoRico',\r\n  QA: 'Qatar',\r\n  RAINBOW: 'Rainbow',\r\n  RO: 'Romania',\r\n  RU: 'Russian Federation',\r\n  SM: 'SanMarino',\r\n  SA: 'Saudi Arabia',\r\n  RS: 'Serbia',\r\n  SG: 'Singapore',\r\n  SK: 'Slovakia',\r\n  SI: 'Slovenia',\r\n  SO: 'Somalia',\r\n  ZA: 'South Africa',\r\n  KR: 'South Korea',\r\n  ES: 'Spain',\r\n  LK: 'Sri Lanka',\r\n  SE: 'Sweden',\r\n  CH: 'Switzerland',\r\n  SY: 'Syrian Arab Republic',\r\n  TW: 'Taiwan',\r\n  TZ: 'Tanzania',\r\n  TH: 'Thailand',\r\n  TT: 'Trinidad and Tobago',\r\n  TN: 'Tunisia',\r\n  TR: 'Turkey',\r\n  TM: 'Turkmenistan',\r\n  UA: 'Ukraine',\r\n  AE: 'United Arab Emirates',\r\n  GB: 'United Kingdom',\r\n  UN: 'United Nations',\r\n  US: 'United States',\r\n  UY: 'Uruguay',\r\n  UZ: 'Uzbekistan',\r\n  VE: 'Venezuela',\r\n  VN: 'Vietnam',\r\n};\r\n\r\nexport { FLAGS_CODE_TO_ISO, COUNTRY_NAMES, FLAGS_ISO_TO_CODE };\r\n","import { MAP_SIZE } from '../types/server';\r\nimport { Keystate } from '../types/client';\r\n\r\nconst clamp = (value: number, lower: number, upper: number): number => {\r\n  if (value <= lower) {\r\n    return lower;\r\n  }\r\n\r\n  if (value >= upper) {\r\n    return upper;\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nexport const levelToBouty = (level: number): number => {\r\n  return ((level - 1) / 0.0111) ** 2;\r\n};\r\n\r\nexport const decodeMinimapCoords = (x: number, y: number): { x: number; y: number } => {\r\n  return {\r\n    x: 128 * x - MAP_SIZE.WIDTH / 2 + 64,\r\n    y: clamp(128 * y - MAP_SIZE.HEIGHT, -MAP_SIZE.HEIGHT / 2, MAP_SIZE.HEIGHT / 2) + 64,\r\n  };\r\n};\r\n\r\nexport const decodeUpgrades = (\r\n  upgrades: number\r\n): { speed: number; shield: number; inferno: number } => {\r\n  const speed = upgrades & 7;\r\n  const shield = (upgrades & 8) >> 3;\r\n  const inferno = (upgrades & 16) >> 4;\r\n\r\n  return {\r\n    speed,\r\n    shield,\r\n    inferno,\r\n  };\r\n};\r\n\r\nexport const decodeKeystate = (\r\n  keystate: number\r\n): {\r\n  keystate: Keystate;\r\n  boost: boolean;\r\n  strafe: boolean;\r\n  stealthed: boolean;\r\n  flagspeed: boolean;\r\n} => {\r\n  return {\r\n    keystate: {\r\n      UP: (keystate & (1 << 0)) === 1 << 0,\r\n      DOWN: (keystate & (1 << 1)) === 1 << 1,\r\n      LEFT: (keystate & (1 << 2)) === 1 << 2,\r\n      RIGHT: (keystate & (1 << 3)) === 1 << 3,\r\n    },\r\n    boost: (keystate & (1 << 4)) === 1 << 4,\r\n    strafe: (keystate & (1 << 5)) === 1 << 5,\r\n    stealthed: (keystate & (1 << 6)) === 1 << 6,\r\n    flagspeed: (keystate & (1 << 7)) === 1 << 7,\r\n  };\r\n};\r\n\r\nexport default levelToBouty;\r\n","export class StopWatch {\r\n\r\n    // this is overwritten in the nodejs case\r\n    public static performanceNow: () => number = () => performance.now();\r\n\r\n    private startTime: number;\r\n\r\n    constructor(private timeoutMs: number = null) {\r\n        this.start();\r\n    }\r\n\r\n    public start(): void {\r\n        this.startTime = StopWatch.performanceNow();\r\n    }\r\n\r\n    get elapsedMs(): number {\r\n        return  StopWatch.performanceNow() - this.startTime;\r\n    }\r\n\r\n    get elapsedSeconds(): number {\r\n        return this.elapsedMs / 1000;\r\n    }\r\n\r\n    get elapsedMinutes(): number {\r\n        return this.elapsedSeconds / 60;\r\n    }\r\n\r\n    get hasTimedOut(): boolean {\r\n        if (!this.timeoutMs) {\r\n            return false;\r\n        }\r\n        return this.elapsedMs > this.timeoutMs;\r\n    }\r\n\r\n    get timeoutFraction(): number {\r\n        if (!this.timeoutMs) {\r\n            return 0;\r\n        }\r\n        return this.elapsedMs / this.timeoutMs;\r\n    }\r\n}\r\n","import { KEY_CODES } from \"../ab-protocol/src/lib\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { IFindPathConfig } from \"./ifindpath-config\";\r\nimport { IKeyInstruction } from \"./key-instruction\";\r\n\r\nconst PATHFINDING_TIMEOUT = 500; // ms\r\nconst PATHFINDING_STALE = 500; // ms\r\n\r\nexport class BotState {\r\n    playerToKill: number;\r\n    turningTimeout: any;\r\n    boostTimeout: any;\r\n    path: IPos[];\r\n    distanceToTarget: number;\r\n    autoPilotToFlag: boolean;\r\n    autoFire: boolean;\r\n    autoFireToggledManually: boolean;\r\n    autoBoost: boolean;\r\n\r\n    pathFindingWorker: Worker;\r\n    calculatingPathStopwatch: StopWatch;\r\n    public static createPathFindingWorker: () => Worker;\r\n\r\n    private keyQueue: IKeyInstruction[] = [];\r\n    private isWorkerInitializing = false;\r\n    private readonly stopwatchAfterCalculatingPath = new StopWatch();\r\n\r\n    constructor(private context: IContext) {\r\n        this.initPathFindingWorker();\r\n    }\r\n\r\n    initPathFindingWorker() {\r\n        if (!this.isWorkerInitializing && this.calculatingPathStopwatch && this.calculatingPathStopwatch.elapsedMs > PATHFINDING_TIMEOUT) {\r\n            // error in worker probably\r\n            this.context.logger.warn(\"Recycling pathfindingworker after \" + this.calculatingPathStopwatch.elapsedMs + \" ms\");\r\n            this.pathFindingWorker.terminate();\r\n            this.pathFindingWorker = null;\r\n            this.calculatingPathStopwatch = null;\r\n        }\r\n\r\n        if (!this.pathFindingWorker) {\r\n            this.isWorkerInitializing = true;\r\n            this.pathFindingWorker = BotState.createPathFindingWorker();\r\n            this.pathFindingWorker.onmessage = e => {\r\n                if (e.data === \"ready\") {\r\n                    this.isWorkerInitializing = false;\r\n                    return;\r\n                }\r\n                const calculatedPath = JSON.parse(e.data);\r\n\r\n                if (this.calculatingPathStopwatch.elapsedMs < PATHFINDING_STALE) {\r\n                    this.path = calculatedPath.path;\r\n                }\r\n\r\n                this.calculatingPathStopwatch = null;\r\n                this.stopwatchAfterCalculatingPath.start();\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    get needsNewPath(): boolean {\r\n        const isCalculating = !!this.calculatingPathStopwatch;\r\n        return !isCalculating && this.stopwatchAfterCalculatingPath.elapsedMs > PATHFINDING_STALE;\r\n    }\r\n\r\n\r\n    calcPath(config: IFindPathConfig) {\r\n        this.pathFindingWorker.postMessage(JSON.stringify(config));\r\n        this.calculatingPathStopwatch = new StopWatch();\r\n    }\r\n\r\n    stop(force = false) {\r\n        this.path = null;\r\n        this.playerToKill = null;\r\n        this.autoPilotToFlag = false;\r\n        this.autoBoost = false;\r\n        if (!this.autoFireToggledManually || force) {\r\n            this.autoFire = false;\r\n        }\r\n    }\r\n\r\n    isOn(): boolean {\r\n        return !!this.path || !!this.playerToKill || !!this.autoPilotToFlag || !!this.autoFire;\r\n    }\r\n\r\n    enqueueKey(key: KEY_CODES, state: boolean, duration = 0) {\r\n        this.keyQueue.push({ key, state, duration });\r\n    }\r\n\r\n    eatKeyQueue(): IKeyInstruction[] {\r\n        const result = this.keyQueue;\r\n        this.keyQueue = [];\r\n        return result;\r\n    }\r\n\r\n    requestTimeoutFor(instr: IKeyInstruction) {\r\n        switch (instr.key) {\r\n            case KEY_CODES.SPECIAL:\r\n                if (this.boostTimeout) {\r\n                    return null;\r\n                }\r\n                this.boostTimeout = setTimeout(() => {\r\n                    this.context.connection.sendKey(instr.key, !instr.state);\r\n                    this.context.botstate.boostTimeout = null;\r\n                }, instr.duration);\r\n\r\n                return this.boostTimeout;\r\n            default:\r\n                if (this.turningTimeout) {\r\n                    return null;\r\n                }\r\n                this.turningTimeout = setTimeout(() => {\r\n                    this.context.connection.sendKey(instr.key, !instr.state);\r\n                    this.context.botstate.turningTimeout = null;\r\n                }, instr.duration);\r\n\r\n                return this.turningTimeout;\r\n        }\r\n    }\r\n\r\n}","export enum Events {\r\n    BOT_STEERING_INSTRUCTION,\r\n\r\n    CHAT_NOT_POSSIBLE_BC_MUTED,\r\n    CHAT_PLAYER_MUTED,\r\n    CHAT_RECEIVED,\r\n    CHAT_SEND,\r\n    CONNECTION_ERROR,\r\n    CONNECTION_CLOSE,\r\n    CRATE_NEW,\r\n    CTF_GAME_OVER,\r\n    EACH_SECOND,\r\n    EXPLOSION,\r\n    FLAG_UPDATE,\r\n    KEYBOARD,\r\n    LOGIN,\r\n    LEAVE_HORIZON,\r\n    MESSAGE_TO_PLAYER,\r\n    MOB_DESPAWN,\r\n    MINI_MAP,\r\n    MISSILE_UPDATE,\r\n    MOUNTAIN_HIT,\r\n    PLAYER_BOUNCE,\r\n    PLAYER_BOOST,\r\n    PLAYER_CHANGE_FLAG,\r\n    PLAYER_FIRE,\r\n    PLAYER_HIT,\r\n    PLAYER_KILLED,\r\n    PLAYER_LEAVE,\r\n    PLAYER_LEVEL,\r\n    PLAYER_NEW,\r\n    PLAYER_POWERUP,\r\n    PLAYER_REPEL,\r\n    PLAYER_RESPAWN,\r\n    PLAYER_UPDATE,\r\n    PLAYER_UPGRADE_APPLIED,\r\n    PLAYER_SPECTATE,\r\n    PLAYER_STEALTH,\r\n    PLAYER_SWITCH_TYPE,\r\n    SERVER_ANNOUNCEMENT,\r\n    SERVER_COMMAND_REPLY,\r\n    SERVER_CUSTOM,\r\n    SERVER_ERROR,\r\n    SERVER_MESSAGE,\r\n    SCORE_BOARD,\r\n    SCORE_DETAILED,\r\n    SCORE_UPDATE,\r\n    SPAM_WARING_RECEIVED,\r\n    TEAMS,\r\n    TICK,\r\n}\r\n","import { Events } from \"../events/constants\";\r\nimport { ITickArgs } from \"../events/event-args/itick-args\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { IContext } from \"./icontext\";\r\n\r\nconst MS_PER_SEC = 1000;\r\nconst FPS = 60;\r\nconst TICK_MS = MS_PER_SEC / FPS;\r\nconst SKIPPED_FRAMES_PANIC_THRESHOLD = 5 * FPS;\r\n\r\nexport class EventQueueProcessor {\r\n    private handlersByType: {};\r\n    private skippedFrames = 0;\r\n    private stopwatch: StopWatch;\r\n    private eachSecondStopwatch: StopWatch;\r\n    private tickCounter: number;\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public startProcessingEventQueue(): void {\r\n        this.handlersByType = {};\r\n        for (const handler of this.context.handlers) {\r\n            for (const eventType of handler.handles) {\r\n                const handlersForType = this.handlersByType[eventType] || [];\r\n                handlersForType.push(handler);\r\n                this.handlersByType[eventType] = handlersForType;\r\n            }\r\n        }\r\n\r\n        this.context.tm.setInterval(() => this.tick(), Math.floor(TICK_MS));\r\n    }\r\n\r\n    private tick(): void {\r\n        if (!this.stopwatch) {\r\n            this.stopwatch = new StopWatch();\r\n            this.tickCounter = 1;\r\n            this.eachSecondStopwatch = new StopWatch();\r\n            this.skippedFrames = 0;\r\n        }\r\n\r\n        const lag = this.context.connection.getLagMs(); // ms that the server is (probably) ahead of us\r\n        const diffTime = this.stopwatch.elapsedMs + lag;\r\n\r\n        let tooEarly = false;\r\n        if (diffTime < TICK_MS) {\r\n            tooEarly = true;\r\n        } else if (diffTime > TICK_MS * (this.tickCounter + 1)) {\r\n            this.skippedFrames++;\r\n        } else {\r\n            // framefactor = the exact number of frames that should now be processed after the last processed frame.\r\n            // for example \"1\" if it is exactly the time to process the next frame,\r\n            //   or 1.2 if this tick is .2 of a frame to late, or 10 if we missed a few frames, etc.\r\n            const frameFactor = this.skippedFrames + diffTime / (TICK_MS * this.tickCounter);\r\n\r\n            // enqueue the tick message which will be processed last\r\n            this.context.eventQueue.pub(Events.TICK, {\r\n                frame: this.tickCounter,\r\n                frameFactor,\r\n                skippedFrames: this.skippedFrames,\r\n                timeFromStart: diffTime,\r\n            } as ITickArgs);\r\n\r\n            if (this.eachSecondStopwatch.elapsedSeconds >= 1) {\r\n                this.context.eventQueue.pub(Events.EACH_SECOND, {});\r\n                this.eachSecondStopwatch.start();\r\n            }\r\n\r\n            this.skippedFrames = 0;\r\n\r\n            while (true) {\r\n                const nextMessage = this.context.eventQueue.dequeue();\r\n                if (!nextMessage) {\r\n                    break;\r\n                }\r\n                this.process(nextMessage);\r\n            }\r\n        }\r\n\r\n        this.context.state.skippedFrames = this.skippedFrames;\r\n\r\n        if (!tooEarly) {\r\n            this.tickCounter++;\r\n        }\r\n\r\n        if (this.skippedFrames > SKIPPED_FRAMES_PANIC_THRESHOLD) {\r\n            this.stopwatch = null; // just drop all bookkeeping and start over\r\n        } else if (this.skippedFrames > 0 || tooEarly) {\r\n            this.context.tm.setTimeout(() => this.tick(), 1);\r\n        }\r\n    }\r\n\r\n    private process(message: EventMessage) {\r\n        // find the right handler(s)\r\n        const handlersForType = this.handlersByType[message.type] || [];\r\n        for (const handler of handlersForType) {\r\n            // execute handler\r\n            try {\r\n                handler.exec(message);\r\n            } catch (error) {\r\n                // make error loggable\r\n                const err = JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\r\n                this.context.logger.error(`Error handling message ${message.type} with handler ${handler.constructor.name}`, err);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { IChatSendArgs } from \"../events/event-args/ichat-send-args\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\n\r\nexport class ChatSendHandler implements IMessageHandler {\r\n    public handles = [Events.CHAT_SEND];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const args = ev.args as IChatSendArgs;\r\n\r\n        this.context.connection.sendChat(args.type, args.text, args.playerId);\r\n    }\r\n}\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { IKeyboardArgs } from \"../events/event-args/ikeyboard-args\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\n\r\nexport class KeyboardMessageHandler implements IMessageHandler {\r\n    public handles = [Events.KEYBOARD];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const keyArgs = ev.args as IKeyboardArgs;\r\n\r\n        this.context.connection.sendKey(keyArgs.key, keyArgs.state);\r\n    }\r\n\r\n}\r\n","// this file is a partial copy of ab-server\\src\\constants\\collisions.ts and players.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nexport const MAP_SIZE = {\r\n    WIDTH: 32768,\r\n    HEIGHT: 16384,\r\n\r\n    HALF_WIDTH: 32768 / 2,\r\n    HALF_HEIGHT: 16384 / 2,\r\n};\r\n\r\nexport const MAP_COORDS = {\r\n    MIN_X: -MAP_SIZE.WIDTH / 2,\r\n    MIN_Y: -MAP_SIZE.HEIGHT / 2,\r\n    MAX_X: MAP_SIZE.WIDTH / 2,\r\n    MAX_Y: MAP_SIZE.HEIGHT / 2,\r\n};\r\n\r\nexport const PLAYERS_POSITION = {\r\n    MIN_X: -16352,\r\n    MIN_Y: -8160,\r\n\r\n    MAX_X: 16352,\r\n    MAX_Y: 8160,\r\n};","// this file is a copy of ab-server\\src\\constants\\projectiles.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nimport { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\n\r\nexport const PROJECTILES_SHAPES = {\r\n  REGULAR: 1,\r\n  FAT: 2,\r\n  SMALL: 3,\r\n};\r\n\r\nexport const PROJECTILES_COLLISIONS = {\r\n  [PROJECTILES_SHAPES.REGULAR]: [[0, 3, 3], [0, 9, 3], [0, 15, 3]],\r\n  [PROJECTILES_SHAPES.FAT]: [[0, 4, 4], [0, 12, 4], [0, 20, 4]],\r\n  [PROJECTILES_SHAPES.SMALL]: [[0, 2, 2], [0, 6, 2], [0, 10, 2]],\r\n};\r\n\r\nexport const PROJECTILES_EXTRA_SPEED_TO_DAMAGE_FACTOR = 1 / 45;\r\n\r\nexport const PROJECTILES_SPECS = {\r\n  [MOB_TYPES.PREDATOR_MISSILE]: {\r\n    maxSpeed: 9,\r\n    baseSpeed: 4.05,\r\n\r\n    speedFactor: 0.3,\r\n    infernoSpeedFactor: 1,\r\n\r\n    accel: 0.105,\r\n\r\n    /**\r\n     * Basic damage for speed in range [baseSpeed, maxSpeed].\r\n     */\r\n    damage: 0.4,\r\n    infernoDamageFactor: 1,\r\n\r\n    distance: 1104,\r\n\r\n    shape: PROJECTILES_SHAPES.REGULAR,\r\n\r\n    repelEnergy: 197,\r\n  },\r\n\r\n  [MOB_TYPES.GOLIATH_MISSILE]: {\r\n    maxSpeed: 6,\r\n    baseSpeed: 2.1,\r\n\r\n    speedFactor: 0.3,\r\n    infernoSpeedFactor: 1,\r\n\r\n    accel: 0.0375,\r\n\r\n    damage: 1.2,\r\n    infernoDamageFactor: 1,\r\n\r\n    distance: 1076,\r\n\r\n    shape: PROJECTILES_SHAPES.FAT,\r\n\r\n    repelEnergy: 260,\r\n  },\r\n\r\n  [MOB_TYPES.COPTER_MISSILE]: {\r\n    maxSpeed: 9,\r\n    baseSpeed: 5.7,\r\n\r\n    speedFactor: 0.3,\r\n    infernoSpeedFactor: 1,\r\n\r\n    accel: 0.14,\r\n\r\n    damage: 0.2,\r\n    infernoDamageFactor: 1,\r\n\r\n    distance: 1161,\r\n\r\n    shape: PROJECTILES_SHAPES.SMALL,\r\n\r\n    repelEnergy: 155,\r\n  },\r\n\r\n  [MOB_TYPES.TORNADO_MISSILE]: {\r\n    maxSpeed: 7,\r\n    baseSpeed: 3.5,\r\n\r\n    speedFactor: 0.3,\r\n    infernoSpeedFactor: 1,\r\n\r\n    accel: 0.0875,\r\n\r\n    damage: 0.4,\r\n    infernoDamageFactor: 1,\r\n\r\n    distance: 997,\r\n\r\n    shape: PROJECTILES_SHAPES.REGULAR,\r\n\r\n    repelEnergy: 186,\r\n  },\r\n\r\n  [MOB_TYPES.TORNADO_SMALL_MISSILE]: {\r\n    maxSpeed: 7,\r\n    baseSpeed: 3.5,\r\n\r\n    speedFactor: 0.3,\r\n    infernoSpeedFactor: 1,\r\n\r\n    accel: 0.0875,\r\n\r\n    damage: 0.3,\r\n    infernoDamageFactor: 1,\r\n\r\n    distance: 581,\r\n\r\n    shape: PROJECTILES_SHAPES.REGULAR,\r\n\r\n    repelEnergy: 145,\r\n  },\r\n\r\n  [MOB_TYPES.PROWLER_MISSILE]: {\r\n    maxSpeed: 7,\r\n    baseSpeed: 2.8,\r\n\r\n    speedFactor: 0.3,\r\n    infernoSpeedFactor: 1,\r\n\r\n    accel: 0.07,\r\n\r\n    damage: 0.45,\r\n    infernoDamageFactor: 1,\r\n\r\n    distance: 819,\r\n\r\n    shape: PROJECTILES_SHAPES.REGULAR,\r\n\r\n    repelEnergy: 168,\r\n  },\r\n};\r\n","import { MAP_COORDS } from \"../../ab-assets/map-constants\";\r\nimport { PROJECTILES_SPECS } from \"../../ab-assets/missile-constants\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { ITickArgs } from \"../../events/event-args/itick-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class MissileMaintenanceHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.TICK];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        const tick = ev.args as ITickArgs;\r\n\r\n        for (const missile of this.context.state.getMissiles()) {\r\n\r\n            const missileParams = PROJECTILES_SPECS[missile.mobType];\r\n\r\n            const prevSpeedX = missile.speed.x;\r\n            const prevSpeedY = missile.speed.y;\r\n\r\n            const frameFactor = tick.frameFactor;\r\n\r\n            missile.speed.x += missile.accel.x * frameFactor;\r\n            missile.speed.y += missile.accel.y * frameFactor;\r\n\r\n            const speed = Math.hypot(missile.speed.x, missile.speed.y);\r\n\r\n            if (speed > missile.maxSpeed) {\r\n                missile.speed.x *= missile.maxSpeed / speed;\r\n                missile.speed.y *= missile.maxSpeed / speed;\r\n                missile.speed.length = missile.maxSpeed;\r\n            } else {\r\n                missile.speed.length = speed;\r\n            }\r\n\r\n            missile.pos.x += (prevSpeedX + 0.5 * (missile.speed.x - prevSpeedX)) * frameFactor;\r\n            missile.pos.y += (prevSpeedY + 0.5 * (missile.speed.y - prevSpeedY)) * frameFactor;\r\n\r\n            missile.distance = (missile.distance || 0) + Math.hypot(missile.speed.x, missile.speed.y);\r\n\r\n            if (\r\n                missile.pos.x < MAP_COORDS.MIN_X ||\r\n                missile.pos.x > MAP_COORDS.MAX_X ||\r\n                missile.pos.y < MAP_COORDS.MIN_Y ||\r\n                missile.pos.y > MAP_COORDS.MAX_Y ||\r\n                missile.distance >= missileParams.distance\r\n            ) {\r\n                this.context.state.removeMob(missile.id);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// this file is a copy of ab-server\\src\\constants\\ships.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nimport { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\n\r\nexport const SHIPS_TYPES = {\r\n  PREDATOR: 1,\r\n  GOLIATH: 2,\r\n  COPTER: 3,\r\n  TORNADO: 4,\r\n  PROWLER: 5,\r\n};\r\n\r\nexport const SHIPS_FIRE_MODES = {\r\n  FIRE: 'fire',\r\n  INFERNO: 'infernoFire',\r\n};\r\n\r\nexport const SHIPS_FIRE_TYPES = {\r\n  DEFAULT: 'default',\r\n  SPECIAL: 'special',\r\n};\r\n\r\nexport const SHIPS_ENCLOSE_RADIUS = {\r\n  PREDATOR: 32,\r\n  GOLIATH: 88,\r\n  COPTER: 34,\r\n  TORNADO: 38,\r\n  PROWLER: 36,\r\n};\r\n\r\nconst missileTemplate = (type: number, x: number, y: number, rot: number, alt = false): object => {\r\n  return {\r\n    type,\r\n    x,\r\n    y,\r\n    rot,\r\n    alt,\r\n  };\r\n};\r\n\r\nconst missileFireTemplate = (def: any = [], special: any = []): any => {\r\n  return {\r\n    [SHIPS_FIRE_TYPES.DEFAULT]: def,\r\n    [SHIPS_FIRE_TYPES.SPECIAL]: special,\r\n  };\r\n};\r\n\r\nexport const SHIPS_SPECS = {\r\n  [SHIPS_TYPES.PREDATOR]: {\r\n    name: 'raptor',\r\n\r\n    turnFactor: 0.065,\r\n    accelFactor: 0.225,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1.5,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 5.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.008,\r\n    fireEnergy: 0.6,\r\n    specialEnergy: 0,\r\n    specialEnergyRegen: -0.01,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 550, // ms.\r\n    damageFactor: 2,\r\n    energyLight: 0.6,\r\n\r\n    collisions: [[0, 5, 23], [0, -15, 15], [0, -25, 12]],\r\n\r\n    repelEnergy: 2100,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, -20, 5, -0.05),\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 20, 5, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.GOLIATH]: {\r\n    name: 'spirit',\r\n\r\n    turnFactor: 0.04,\r\n    accelFactor: 0.15,\r\n    brakeFactor: 0.015,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 3.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.0005,\r\n    energyRegen: 0.005,\r\n    fireEnergy: 0.9,\r\n    specialEnergy: 0.5,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 1000,\r\n\r\n    fireDelay: 300, // ms.\r\n    damageFactor: 1,\r\n    energyLight: 0.9,\r\n\r\n    collisions: [\r\n      [0, 0, 35],\r\n      [50, 14, 16],\r\n      [74, 26, 14],\r\n      [30, 8, 23],\r\n      [63, 22, 15],\r\n      [-50, 14, 16],\r\n      [-74, 26, 14],\r\n      [-30, 8, 23],\r\n      [-63, 22, 15],\r\n    ],\r\n\r\n    repelEnergy: 7500,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, -30, 0, -0.05),\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 30, 0, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.COPTER]: {\r\n    name: 'mohawk',\r\n\r\n    turnFactor: 0.07,\r\n    accelFactor: 0.275,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 6,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.01,\r\n    fireEnergy: 0.3,\r\n    specialEnergy: 0,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 300,\r\n    damageFactor: 2.78,\r\n    energyLight: 0.3,\r\n\r\n    collisions: [[0, -12, 15], [0, 0, 17], [0, 13, 15], [0, 26, 15]],\r\n\r\n    repelEnergy: 1800,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 15, 10, 0, true),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, -10, 5, -0.05),\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 0, 10, 0),\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 10, 5, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.TORNADO]: {\r\n    name: 'tornado',\r\n\r\n    turnFactor: 0.055,\r\n    accelFactor: 0.2,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 4.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.006,\r\n    fireEnergy: 0.5,\r\n    specialEnergy: 0.9,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 500,\r\n    damageFactor: 5 / 3,\r\n    energyLight: 0.5,\r\n\r\n    collisions: [[0, 8, 18], [14, 12, 13], [-14, 12, 13], [0, -12, 16], [0, -26, 14], [0, -35, 12]],\r\n\r\n    repelEnergy: 2400,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate(\r\n      [missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0)],\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, -15, 10, -0.05),\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, 15, 10, 0.05),\r\n      ]\r\n    ),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate(\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -15, 10, -0.05),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 15, 10, 0.05),\r\n      ],\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -30, 20, -0.06),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -20, 15, -0.03),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 20, 15, 0.03),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 30, 20, 0.06),\r\n      ]\r\n    ),\r\n  },\r\n\r\n  [SHIPS_TYPES.PROWLER]: {\r\n    name: 'prowler',\r\n\r\n    turnFactor: 0.055,\r\n    accelFactor: 0.2,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 4.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.006,\r\n    fireEnergy: 0.75,\r\n    specialEnergy: 0.6,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 1500,\r\n\r\n    damageFactor: 5 / 3,\r\n    fireDelay: 300,\r\n    energyLight: 0.75,\r\n\r\n    collisions: [[0, 11, 25], [0, -8, 18], [19, 20, 10], [-19, 20, 10], [0, -20, 14]],\r\n\r\n    repelEnergy: 2600,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, -20, 0, -0.05),\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 20, 0, 0.05),\r\n    ]),\r\n  },\r\n};\r\n","// this file is a partial copy of ab-server\\src\\constants\\upgrades.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nconst MS_PER_SEC = 1000;\r\n\r\nexport const UPGRADES_DEFAULT_MIN_CHANCE = 0.3;\r\n\r\nexport const UPGRADES_DEFAULT_MAX_CHANCE = 0.8;\r\n\r\nexport const UPGRADES_MIN_VICTIM_SCORE_TO_DROP = 26;\r\n\r\nexport const UPGRADES_TYPES = {\r\n  1: 'SPEED',\r\n  2: 'DEFENSE',\r\n  3: 'ENERGY',\r\n  4: 'MISSILE',\r\n};\r\n\r\nexport const UPGRADES_START_AMOUNT = 0;\r\n\r\nexport const UPGRADES_SPECS = {\r\n  SPEED: {\r\n    cost: [0, 1, 1, 1, 1, 1],\r\n    factor: [1, 1.05, 1.1, 1.15, 1.2, 1.25],\r\n  },\r\n  DEFENSE: {\r\n    cost: [0, 1, 1, 1, 1, 1],\r\n    factor: [1, 1.05, 1.1, 1.15, 1.2, 1.25],\r\n  },\r\n  ENERGY: {\r\n    cost: [0, 1, 1, 1, 1, 1],\r\n    factor: [1, 1.05, 1.1, 1.15, 1.2, 1.25],\r\n  },\r\n  MISSILE: {\r\n    cost: [0, 1, 1, 1, 1, 1],\r\n    factor: [1, 1.05, 1.1, 1.15, 1.2, 1.25],\r\n  },\r\n};\r\n\r\nexport const UPGRADES_ACTION_TYPE = {\r\n  LOST: 0,\r\n  SPEED: 1,\r\n  DEFENSE: 2,\r\n  ENERGY: 3,\r\n  MISSILE: 4,\r\n};\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { StopWatch } from \"./stopwatch\";\r\n\r\nexport class PeriodicLogger {\r\n\r\n    private stopwatch = new StopWatch();\r\n\r\n    constructor(private context: IContext, private intervalSeconds: number = 3) {\r\n    }\r\n\r\n    public log(msg: string, ...args: any[]) {\r\n        if (this.stopwatch.elapsedSeconds < this.intervalSeconds) {\r\n            return;\r\n        }\r\n        this.context.logger.info(msg, ...args);\r\n        this.stopwatch.start();\r\n    }\r\n}\r\n","import { PLAYERS_POSITION } from \"../../ab-assets/map-constants\";\r\nimport { SHIPS_SPECS } from \"../../ab-assets/ships-constants\";\r\nimport { UPGRADES_SPECS } from \"../../ab-assets/upgrade-constants\";\r\nimport { PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { ITickArgs } from \"../../events/event-args/itick-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { PeriodicLogger } from \"../../helpers/periodic-logger\";\r\nimport { Player } from \"../../models/player\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport const PI_X2 = 2 * Math.PI;\r\n\r\nexport class PlayerMaintenanceHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.TICK];\r\n\r\n    private logger = new PeriodicLogger(this.context);\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        const tick = ev.args as ITickArgs;\r\n\r\n        for (const player of this.context.state.getPlayers()) {\r\n\r\n            if (player.status === PLAYER_STATUS.INACTIVE) {\r\n                continue;\r\n            }\r\n\r\n            this.updatePlayer(player, tick);\r\n        }\r\n    }\r\n\r\n    private updatePlayer(player: Player, tick: ITickArgs) {\r\n\r\n        const aircraftSpecs = SHIPS_SPECS[player.type];\r\n\r\n        const boostFactor = player.boost ? aircraftSpecs.boostFactor : 1;\r\n\r\n        const frameFactor = tick.frameFactor;\r\n\r\n        if (!isNaN(player.energyRegen)) {\r\n            const energyDiff = player.energyRegen * frameFactor;\r\n\r\n            player.energy += energyDiff;\r\n            if (player.energy > 1) {\r\n                player.energy = 1;\r\n            } else if (player.energy < 0) {\r\n                player.energy = 0;\r\n            } else if (isNaN(player.energy)) {\r\n                player.energy = 1;\r\n            }\r\n        }\r\n\r\n        player.health += frameFactor * aircraftSpecs.healthRegen;\r\n        if (player.health > 1) {\r\n            player.health = 1;\r\n        } else if (player.health < 0) {\r\n            player.health = 0;\r\n        }\r\n\r\n        // kill shield/inferno timer after it has expired\r\n        if (player.shieldOrInfernoTimer && player.shieldOrInfernoTimer.hasTimedOut) {\r\n            player.shieldOrInfernoTimer = null;\r\n            player.powerUps.inferno = null;\r\n            player.powerUps.shield = null;\r\n        }\r\n\r\n        let flightDirection = -999;\r\n\r\n        if (player.strafe) {\r\n            /**\r\n             * Copter strafe.\r\n             */\r\n            if (player.keystate.LEFT) {\r\n                flightDirection = player.rot - 0.5 * Math.PI;\r\n            }\r\n\r\n            if (player.keystate.RIGHT) {\r\n                flightDirection = player.rot + 0.5 * Math.PI;\r\n            }\r\n        } else if (player.keystate.LEFT || player.keystate.RIGHT) {\r\n\r\n            if (player.keystate.LEFT) {\r\n                player.rot -= frameFactor * aircraftSpecs.turnFactor;\r\n            }\r\n\r\n            if (player.keystate.RIGHT) {\r\n                player.rot += frameFactor * aircraftSpecs.turnFactor;\r\n            }\r\n\r\n            player.rot = ((player.rot % PI_X2) + PI_X2) % PI_X2;\r\n        }\r\n\r\n        if (player.keystate.UP) {\r\n            if (flightDirection === -999) {\r\n                flightDirection = player.rot;\r\n            } else {\r\n                flightDirection += Math.PI * (player.keystate.RIGHT ? -0.25 : 0.25);\r\n            }\r\n        } else if (player.keystate.DOWN) {\r\n            if (flightDirection === -999) {\r\n                flightDirection = player.rot + Math.PI;\r\n            } else {\r\n                flightDirection += Math.PI * (player.keystate.RIGHT ? 0.25 : -0.25);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * speed update.\r\n         */\r\n        let speedValue = 0;\r\n\r\n        if (\r\n            player.speed.x !== 0 ||\r\n            player.speed.y !== 0 ||\r\n            player.keystate.UP ||\r\n            player.keystate.DOWN ||\r\n            player.strafe\r\n        ) {\r\n            const startSpeedX = player.speed.x;\r\n            const startSpeedY = player.speed.y;\r\n\r\n            if (flightDirection !== -999) {\r\n                player.speed.x +=\r\n                    Math.sin(flightDirection) * aircraftSpecs.accelFactor * boostFactor * frameFactor;\r\n                player.speed.y -=\r\n                    Math.cos(flightDirection) * aircraftSpecs.accelFactor * boostFactor * frameFactor;\r\n            }\r\n\r\n            speedValue = Math.hypot(player.speed.x, player.speed.y);\r\n\r\n            let maxspeed =\r\n                aircraftSpecs.maxSpeed * boostFactor * UPGRADES_SPECS.SPEED.factor[player.upgrades.speed];\r\n\r\n            if (player.powerUps.inferno) {\r\n                maxspeed *= aircraftSpecs.infernoFactor;\r\n            }\r\n\r\n            if (player.flagspeed) {\r\n                maxspeed = aircraftSpecs.flagSpeed;\r\n            }\r\n\r\n            if (speedValue > maxspeed) {\r\n                player.speed.x *= maxspeed / speedValue;\r\n                player.speed.y *= maxspeed / speedValue;\r\n            } else if (\r\n                player.speed.x > aircraftSpecs.minSpeed ||\r\n                player.speed.x < -aircraftSpecs.minSpeed ||\r\n                player.speed.y > aircraftSpecs.minSpeed ||\r\n                player.speed.y < -aircraftSpecs.minSpeed\r\n            ) {\r\n                player.speed.x *= 1 - aircraftSpecs.brakeFactor * frameFactor;\r\n                player.speed.y *= 1 - aircraftSpecs.brakeFactor * frameFactor;\r\n            } else {\r\n                player.speed.x = 0;\r\n                player.speed.y = 0;\r\n            }\r\n\r\n            /**\r\n             * Update player position.\r\n             */\r\n            player.pos.x += frameFactor * startSpeedX +\r\n                0.5 * (player.speed.x - startSpeedX) * frameFactor * frameFactor;\r\n            player.pos.y += frameFactor * startSpeedY +\r\n                0.5 * (player.speed.y - startSpeedY) * frameFactor * frameFactor;\r\n        }\r\n\r\n        /**\r\n         * Validate coords.\r\n         */\r\n        if (player.pos.x < PLAYERS_POSITION.MIN_X) {\r\n            player.pos.x = PLAYERS_POSITION.MIN_X;\r\n        }\r\n\r\n        if (player.pos.x > PLAYERS_POSITION.MAX_X) {\r\n            player.pos.x = PLAYERS_POSITION.MAX_X;\r\n        }\r\n\r\n        if (player.pos.y < PLAYERS_POSITION.MIN_Y) {\r\n            player.pos.y = PLAYERS_POSITION.MIN_Y;\r\n        }\r\n\r\n        if (player.pos.y > PLAYERS_POSITION.MAX_Y) {\r\n            player.pos.y = PLAYERS_POSITION.MAX_Y;\r\n        }\r\n    }\r\n}\r\n","export enum CHAT_TYPE {\r\n    CHAT,\r\n    SAY,\r\n    TEAM,\r\n    WHISPER,\r\n}\r\n","import { CHAT_TYPE } from \"../ab-assets/chat-constants\";\r\nimport { ProtocolPacket, SERVER_PACKETS } from \"../ab-protocol/src/lib\";\r\nimport { ScoreBoard, ScoreDetailed, ScoreDetailedCtf } from \"../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { IChatArgs } from \"../events/event-args/chat-args\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\n\r\nexport class ServerMessageHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SERVER_MESSAGE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        const serverMessage = ev.args as ProtocolPacket;\r\n\r\n        let chatType: CHAT_TYPE;\r\n\r\n        switch (serverMessage.c) {\r\n            case SERVER_PACKETS.CHAT_PUBLIC:\r\n                chatType = CHAT_TYPE.CHAT;\r\n                this.context.eventQueue.pub(Events.CHAT_RECEIVED, {\r\n                    chatMessage: serverMessage.text,\r\n                    chatType,\r\n                    playerId: serverMessage.id,\r\n                } as IChatArgs);\r\n                break;\r\n\r\n            case SERVER_PACKETS.CHAT_SAY:\r\n                chatType = CHAT_TYPE.SAY;\r\n                this.context.eventQueue.pub(Events.CHAT_RECEIVED, {\r\n                    chatMessage: serverMessage.text,\r\n                    chatType,\r\n                    playerId: serverMessage.id,\r\n                } as IChatArgs);\r\n                break;\r\n\r\n            case SERVER_PACKETS.CHAT_TEAM:\r\n                chatType = CHAT_TYPE.TEAM;\r\n                this.context.eventQueue.pub(Events.CHAT_RECEIVED, {\r\n                    chatMessage: serverMessage.text,\r\n                    chatType,\r\n                    playerId: serverMessage.id,\r\n                } as IChatArgs);\r\n                break;\r\n\r\n            case SERVER_PACKETS.CHAT_WHISPER:\r\n                chatType = CHAT_TYPE.WHISPER;\r\n                this.context.eventQueue.pub(Events.CHAT_RECEIVED, {\r\n                    chatMessage: serverMessage.text,\r\n                    chatType,\r\n                    playerId: serverMessage.from,\r\n                    to: serverMessage.to,\r\n                } as IChatArgs);\r\n                break;\r\n\r\n            case SERVER_PACKETS.CHAT_VOTEMUTED:\r\n                this.context.eventQueue.pub(Events.CHAT_NOT_POSSIBLE_BC_MUTED, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.CHAT_VOTEMUTEPASSED:\r\n                this.context.eventQueue.pub(Events.CHAT_PLAYER_MUTED, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.COMMAND_REPLY:\r\n                this.context.eventQueue.pub(Events.SERVER_COMMAND_REPLY, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.ERROR:\r\n                this.context.eventQueue.pub(Events.SERVER_ERROR, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.EVENT_BOOST:\r\n                this.context.eventQueue.pub(Events.PLAYER_BOOST, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.EVENT_BOUNCE:\r\n                this.context.eventQueue.pub(Events.PLAYER_BOUNCE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.EVENT_LEAVEHORIZON:\r\n                this.context.eventQueue.pub(Events.LEAVE_HORIZON, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.EVENT_REPEL:\r\n                this.context.eventQueue.pub(Events.PLAYER_REPEL, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.EVENT_STEALTH:\r\n                this.context.eventQueue.pub(Events.PLAYER_STEALTH, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.GAME_FLAG:\r\n                this.context.eventQueue.pub(Events.FLAG_UPDATE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.GAME_SPECTATE:\r\n                this.context.eventQueue.pub(Events.PLAYER_SPECTATE, serverMessage);\r\n\r\n            case SERVER_PACKETS.LOGIN:\r\n                this.context.eventQueue.pub(Events.LOGIN, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.MOB_DESPAWN:\r\n                this.context.eventQueue.pub(Events.MOB_DESPAWN, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.MOB_DESPAWN_COORDS:\r\n                this.context.eventQueue.pub(Events.MOUNTAIN_HIT, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.MOB_UPDATE:\r\n                this.context.eventQueue.pub(Events.MISSILE_UPDATE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.MOB_UPDATE_STATIONARY:\r\n                this.context.eventQueue.pub(Events.CRATE_NEW, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_FIRE:\r\n                this.context.eventQueue.pub(Events.PLAYER_FIRE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_FLAG:\r\n                this.context.eventQueue.pub(Events.PLAYER_CHANGE_FLAG, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_HIT:\r\n                this.context.eventQueue.pub(Events.PLAYER_HIT, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_KILL:\r\n                this.context.eventQueue.pub(Events.PLAYER_KILLED, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_LEAVE:\r\n                this.context.eventQueue.pub(Events.PLAYER_LEAVE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_LEVEL:\r\n                this.context.eventQueue.pub(Events.PLAYER_LEVEL, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_NEW:\r\n                this.context.eventQueue.pub(Events.PLAYER_NEW, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_POWERUP:\r\n                this.context.eventQueue.pub(Events.PLAYER_POWERUP, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_UPDATE:\r\n                this.context.eventQueue.pub(Events.PLAYER_UPDATE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_RETEAM:\r\n                this.context.eventQueue.pub(Events.TEAMS, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_UPGRADE:\r\n                this.context.eventQueue.pub(Events.PLAYER_UPGRADE_APPLIED, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_RESPAWN:\r\n                this.context.eventQueue.pub(Events.PLAYER_RESPAWN, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.PLAYER_TYPE:\r\n                this.context.eventQueue.pub(Events.PLAYER_SWITCH_TYPE, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.SERVER_CUSTOM:\r\n                this.context.eventQueue.pub(Events.SERVER_CUSTOM, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.SERVER_MESSAGE:\r\n                this.context.eventQueue.pub(Events.SERVER_ANNOUNCEMENT, serverMessage);\r\n                break;\r\n\r\n            case SERVER_PACKETS.SCORE_BOARD:\r\n                const scoreBoard = serverMessage as ScoreBoard;\r\n                this.context.eventQueue.pub(Events.SCORE_BOARD, scoreBoard.data);\r\n                this.context.eventQueue.pub(Events.MINI_MAP, scoreBoard.rankings);\r\n                break;\r\n\r\n            case SERVER_PACKETS.SCORE_DETAILED:\r\n                const detailedFfa = serverMessage as ScoreDetailed;\r\n                this.context.eventQueue.pub(Events.SCORE_DETAILED, { ffaScores: detailedFfa.scores });\r\n                break;\r\n\r\n            case SERVER_PACKETS.SCORE_DETAILED_CTF:\r\n                const detailedCtf = serverMessage as ScoreDetailedCtf;\r\n                this.context.eventQueue.pub(Events.SCORE_DETAILED, { ffaScores: detailedCtf.scores });\r\n                break;\r\n\r\n            case SERVER_PACKETS.SCORE_UPDATE:\r\n                this.context.eventQueue.pub(Events.SCORE_UPDATE, serverMessage);\r\n                break;\r\n\r\n        }\r\n    }\r\n}\r\n","import { IPos } from \"./ipos\";\r\n\r\nconst PI_2 = Math.PI * 2;\r\n\r\nexport class Pos implements IPos {\r\n    // TODO rename to Vector\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public length: number;\r\n\r\n    constructor(x?: number | { x: number, y: number }, y?: number) {\r\n        if ((x || x === 0) && (y || y === 0)) {\r\n            this.x = x as number;\r\n            this.y = y;\r\n        } else if (x) {\r\n            const other = x as Pos;\r\n            this.x = other.x;\r\n            this.y = other.y;\r\n        } else {\r\n            this.x = 0;\r\n            this.y = 0;\r\n        }\r\n    }\r\n\r\n    public direction() {\r\n        let dir = -(Math.atan2(this.x, this.y) + Math.PI);\r\n        if (dir < 0) {\r\n            dir += PI_2;\r\n        }\r\n        if (dir > PI_2) {\r\n            dir -= PI_2;\r\n        }\r\n        return dir;\r\n    }\r\n\r\n    public equals(other: IPos): boolean {\r\n        return !!other && other.x === this.x && other.y === this.y;\r\n    }\r\n}\r\n","import { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { Pos } from \"./pos\";\r\n\r\nexport class Mob {\r\n\r\n    public id: number;\r\n    public mobType: MOB_TYPES;\r\n    public rot: number;\r\n    public speed: Pos;\r\n    public maxSpeed: number;\r\n    public accel: Pos;\r\n    public ownerId: number;\r\n    public team: number;\r\n    public isVisibleOnScreen: boolean;\r\n    public distance: number;\r\n\r\n    public get pos(): Pos {\r\n        return this.highResPos;\r\n    }\r\n    public set pos(value: Pos) {\r\n        this.highResPos = value;\r\n        this.posUpdateTimer.start();\r\n    }\r\n\r\n    protected posUpdateTimer = new StopWatch();\r\n\r\n    private highResPos: Pos;\r\n\r\n    constructor() {\r\n        this.speed = new Pos();\r\n        this.pos = new Pos();\r\n        this.accel = new Pos();\r\n    }\r\n\r\n}\r\n","import { MobUpdateStationary } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Mob } from \"../../models/mob\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class CrateNewHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.CRATE_NEW];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as MobUpdateStationary;\r\n\r\n        const m = new Mob();\r\n        m.id = msg.id;\r\n        m.pos = new Pos(msg.posX, msg.posY);\r\n        m.mobType = msg.type;\r\n\r\n        this.context.state.addMob(m);\r\n    }\r\n}\r\n","import { CTF_TEAMS } from \"../../ab-protocol/src/lib\";\r\nimport { GameFlag } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class FlagUpdateHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.FLAG_UPDATE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as GameFlag;\r\n\r\n        const team = this.context.state.getCtfTeam(msg.flag);\r\n        team.flagState = msg.type;\r\n        team.flagTakenById = msg.id;\r\n\r\n        team.flagPos = new Pos(msg.posX, msg.posY);\r\n\r\n        this.context.state.getCtfTeam(CTF_TEAMS.BLUE).score = msg.blueteam;\r\n        this.context.state.getCtfTeam(CTF_TEAMS.RED).score = msg.redteam;\r\n    }\r\n}\r\n","import { EventLeavehorizon } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { LEAVE_HORIZON_TYPES } from \"../../ab-protocol/src/types/server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Mob } from \"../../models/mob\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class LeaveHorizonHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.LEAVE_HORIZON];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as EventLeavehorizon;\r\n\r\n        let mobOrPlayer: Mob;\r\n        if (msg.type === LEAVE_HORIZON_TYPES.MOB) {\r\n            mobOrPlayer = this.context.state.getMobById(msg.id);\r\n        } else {\r\n            mobOrPlayer = this.context.state.getPlayerById(msg.id);\r\n        }\r\n\r\n        if (mobOrPlayer) {\r\n            mobOrPlayer.isVisibleOnScreen = false;\r\n        }\r\n\r\n        if (msg.type !== LEAVE_HORIZON_TYPES.PLAYER) {\r\n            // We don't seem to get every despawn of mobs that have left the horizon,\r\n            // so remove it entirely now. This is what the canonical frontend does also.\r\n            this.context.state.removeMob(msg.id);\r\n        }\r\n\r\n    }\r\n}\r\n","import { decodeKeystate, decodeUpgrades } from \"../ab-protocol/src/lib\";\r\nimport { PlayerMovements } from \"../models/player-movements\";\r\nimport { PowerUps } from \"../models/power-ups\";\r\n\r\nexport class Decoder {\r\n\r\n    public static upgradesToPowerUps(upgrades: number): PowerUps {\r\n        if (!upgrades) {\r\n            return null;\r\n        }\r\n\r\n        return decodeUpgrades(upgrades);\r\n    }\r\n\r\n    public static keystateToPlayerMovements(keystate: number): PlayerMovements {\r\n        if (!keystate) {\r\n            return null;\r\n        }\r\n\r\n        return decodeKeystate(keystate);\r\n    }\r\n}\r\n","export class PowerUps {\r\n    public speed: number;\r\n    public shield: number;\r\n    public inferno: number;\r\n}\r\n","export class Upgrades {\r\n    public speed: number = 0;\r\n    public defense: number = 0;\r\n    public energy: number = 0;\r\n    public missile: number = 0;\r\n    public available: number = 0;\r\n}\r\n","import { Keystate, MOB_TYPES, PLAYER_STATUS } from \"../ab-protocol/src/lib\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { Mob } from \"./mob\";\r\nimport { PlayerMovements } from \"./player-movements\";\r\nimport { Pos } from \"./pos\";\r\nimport { PowerUps } from \"./power-ups\";\r\nimport { Upgrades } from \"./upgrades\";\r\n\r\nconst STALENESS_MS = 4000;\r\n\r\nexport class Player extends Mob {\r\n    public id: number;\r\n    public flag: number;\r\n    public name: string;\r\n    public type: number;\r\n\r\n    public energy: number = 1;\r\n    public energyRegen: number;\r\n\r\n    public flagspeed: boolean;\r\n    public stealthed: boolean;\r\n    public strafe: boolean;\r\n    public boost: boolean;\r\n    public keystate: Keystate;\r\n\r\n    public upgrades: Upgrades;\r\n    public powerUps: PowerUps;\r\n    public hasShield: boolean;\r\n    public hasInferno: boolean;\r\n    public shieldOrInfernoTimer: StopWatch;\r\n\r\n    public health: number = 1;\r\n    public healthRegen: number;\r\n\r\n    public score: number = 0;\r\n    public level: number;\r\n    public kills: number;\r\n    public deaths: number;\r\n    public damage: number;\r\n    public ping: number;\r\n    public captures: number;\r\n    public ranking: number;\r\n\r\n    public status: PLAYER_STATUS;\r\n    public isMuted: boolean;\r\n\r\n    public get posFromMinimap(): Pos {\r\n        return this.lowResPos;\r\n    }\r\n    public set posFromMinimap(value: Pos) {\r\n        this.lowResPos = value;\r\n        this.lowResPosUpdateTimer.start();\r\n    }\r\n\r\n    private lowResPos: Pos;\r\n    private lowResPosUpdateTimer = new StopWatch();\r\n\r\n    constructor() {\r\n        super();\r\n        this.mobType = MOB_TYPES.PLAYER;\r\n        this.upgrades = new Upgrades();\r\n        this.powerUps = new PowerUps();\r\n        this.keystate = {} as Keystate;\r\n    }\r\n\r\n    public get mostReliablePos(): Pos {\r\n        const diff = this.posUpdateTimer.elapsedMs - this.lowResPosUpdateTimer.elapsedMs;\r\n        if (diff < STALENESS_MS || !this.lowResPos) {\r\n            return this.pos;\r\n        }\r\n        return this.lowResPos;\r\n    }\r\n\r\n    public setMovements(movements: PlayerMovements) {\r\n        if (movements) {\r\n            this.boost = movements.boost;\r\n            this.flagspeed = movements.flagspeed;\r\n            this.stealthed = movements.stealthed;\r\n            this.strafe = movements.strafe;\r\n            this.keystate = movements.keystate;\r\n        } else {\r\n            this.boost = false;\r\n            this.flagspeed = false;\r\n            this.stealthed = false;\r\n            this.strafe = false;\r\n            this.keystate = {} as Keystate;\r\n        }\r\n    }\r\n}\r\n","import { CTF_TEAMS, GAME_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { Login } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Decoder } from \"../../helpers/decoder\";\r\nimport { Player } from \"../../models/player\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { PowerUps } from \"../../models/power-ups\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class LoginHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.LOGIN];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as Login;\r\n        const s = this.context.state;\r\n\r\n        s.id = msg.id;\r\n\r\n        // the id given is the id of the user we are spectating\r\n        // in case of spectating.\r\n        const isSpectating = !!this.context.state.spectatingId;\r\n        if (!isSpectating) {\r\n            s.myPlayerId = msg.id;\r\n        }\r\n\r\n        if (!msg.players) {\r\n            // this is a message that is used for spectate start\r\n            return;\r\n        }\r\n\r\n        s.team = msg.team;\r\n\r\n        this.context.gameType = GAME_TYPES.FFA;\r\n        if (msg.team === CTF_TEAMS.BLUE || msg.team === CTF_TEAMS.RED) {\r\n            this.context.gameType = GAME_TYPES.CTF;\r\n        }\r\n\r\n\r\n        let ranking = 0;\r\n\r\n        for (const loginPlayer of msg.players) {\r\n            const p = new Player();\r\n            ranking++;\r\n\r\n            p.id = loginPlayer.id;\r\n            p.flag = loginPlayer.flag;\r\n            p.name = loginPlayer.name;\r\n            p.pos = new Pos(loginPlayer.posX, loginPlayer.posY);\r\n            p.type = loginPlayer.type;\r\n            p.rot = loginPlayer.rot;\r\n            p.status = loginPlayer.status;\r\n            p.team = loginPlayer.team;\r\n            p.ranking = ranking;\r\n            p.health = 1;\r\n            p.energy = 1;\r\n            p.level = loginPlayer.level;\r\n\r\n            p.powerUps = Decoder.upgradesToPowerUps(loginPlayer.upgrades) || new PowerUps();\r\n\r\n            s.addPlayer(p);\r\n        }\r\n    }\r\n}\r\n","import { decodeMinimapCoords, PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { ScoreBoardRanking } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class MiniMapHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.MINI_MAP];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const data = ev.args as ScoreBoardRanking[];\r\n\r\n        for (const playerMinimapPos of data) {\r\n            const player = this.context.state.getPlayerById(playerMinimapPos.id);\r\n            if (!player) {\r\n                continue;\r\n            }\r\n\r\n            if (playerMinimapPos.x === 0 && playerMinimapPos.y === 0) {\r\n                // invisible prowler may not get the correct minimap data,\r\n                // so ignore this if i'm hidden as a prowler\r\n                const focusAircraft = this.context.state.getFocusedPlayer();\r\n                if (focusAircraft && focusAircraft.stealthed) {\r\n                    player.status = PLAYER_STATUS.INACTIVE;\r\n                }\r\n            } else {\r\n                const coords = decodeMinimapCoords(playerMinimapPos.x, playerMinimapPos.y);\r\n                player.posFromMinimap = new Pos(coords);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { MobUpdate } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Mob } from \"../../models/mob\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class MissileUpdateHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.MISSILE_UPDATE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as MobUpdate;\r\n\r\n        let mob = this.context.state.getMobById(msg.id);\r\n\r\n        if (!mob) {\r\n            mob = new Mob();\r\n            mob.id = msg.id;\r\n            this.context.state.addMob(mob);\r\n        }\r\n\r\n        mob.isVisibleOnScreen = true;\r\n        mob.pos = new Pos(msg.posX, msg.posY);\r\n        mob.accel = new Pos(msg.accelX, msg.accelY);\r\n        mob.maxSpeed = msg.maxSpeed;\r\n        mob.speed = new Pos(msg.speedX, msg.speedY);\r\n        mob.rot = mob.speed.direction();\r\n        mob.mobType = msg.type;\r\n    }\r\n}\r\n","import { MobDespawn } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class MobDespawnHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.MOB_DESPAWN];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as MobDespawn;\r\n        this.context.state.removeMob(msg.id);\r\n    }\r\n}\r\n","import { MobDespawnCoords } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IExplosionArgs } from \"../../events/event-args/iexplosion-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class MountainHitHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.MOUNTAIN_HIT];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as MobDespawnCoords;\r\n\r\n        this.context.eventQueue.pub(Events.EXPLOSION, {\r\n            pos: new Pos(msg.posX, msg.posY),\r\n            type: msg.type,\r\n        } as IExplosionArgs);\r\n\r\n        this.context.state.removeMob(msg.id);\r\n    }\r\n}\r\n","import { EventBoost } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerBoostHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_BOOST];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as EventBoost;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (!player) {\r\n            return;\r\n        }\r\n\r\n        player.boost = msg.boost;\r\n        player.energy = msg.energy;\r\n        player.energyRegen = msg.energyRegen;\r\n        player.pos = new Pos(msg.posX, msg.posY);\r\n        player.rot = msg.rot;\r\n        player.speed = new Pos(msg.speedX, msg.speedY);\r\n    }\r\n}\r\n","import { EventBounce } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Decoder } from \"../../helpers/decoder\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerBounceHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_BOUNCE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as EventBounce;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (!player) {\r\n            return;\r\n        }\r\n\r\n        const movements = Decoder.keystateToPlayerMovements(msg.keystate);\r\n        player.setMovements(movements);\r\n\r\n        player.pos = new Pos(msg.posX, msg.posY);\r\n        player.rot = msg.rot;\r\n        player.speed = new Pos(msg.speedX, msg.speedY);\r\n    }\r\n}\r\n","import { PlayerFlag } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerChangeFlagHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_CHANGE_FLAG];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerFlag;\r\n\r\n        const p = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (p) {\r\n            p.flag = msg.flag;\r\n        }\r\n    }\r\n}\r\n","import { PlayerFire } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Mob } from \"../../models/mob\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerFireHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_FIRE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerFire;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (!player) {\r\n            return;\r\n        }\r\n\r\n        player.energy = msg.energy;\r\n        player.energyRegen = msg.energyRegen;\r\n\r\n        for (const missile of msg.projectiles) {\r\n            const mob = new Mob();\r\n            mob.id = missile.id;\r\n            mob.pos = new Pos(missile.posX, missile.posY);\r\n            mob.accel = new Pos(missile.accelX, missile.accelY);\r\n            mob.maxSpeed = missile.maxSpeed;\r\n            mob.speed = new Pos(missile.speedX, missile.speedY);\r\n            mob.mobType = missile.type;\r\n            mob.ownerId = msg.id;\r\n            mob.rot = mob.speed.direction();\r\n            mob.team = player.team;\r\n\r\n            this.context.state.addMob(mob);\r\n        }\r\n\r\n    }\r\n}\r\n","import { PlayerHit } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IExplosionArgs } from \"../../events/event-args/iexplosion-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerHitHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_HIT];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerHit;\r\n\r\n        this.context.eventQueue.pub(Events.EXPLOSION, {\r\n            pos: new Pos(msg.posX, msg.posY),\r\n            type: msg.type,\r\n        } as IExplosionArgs);\r\n\r\n        for (const who of msg.players) {\r\n            const player = this.context.state.getPlayerById(who.id);\r\n            if (!player) {\r\n                continue;\r\n            }\r\n            player.health = who.health;\r\n            player.healthRegen = who.healthRegen;\r\n        }\r\n\r\n        this.context.state.removeMob(msg.id);\r\n    }\r\n}\r\n","import { PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { PlayerKill } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerKilledHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_KILLED];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerKill;\r\n\r\n        const p = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (p) {\r\n            p.status = PLAYER_STATUS.INACTIVE;\r\n        }\r\n    }\r\n}\r\n","import { PlayerLeave } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerLeaveHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_LEAVE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerLeave;\r\n\r\n        this.context.state.removePlayer(msg.id);\r\n    }\r\n}\r\n","import { PLAYER_LEVEL_UPDATE_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { PlayerLevel } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerLevelHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_LEVEL];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerLevel;\r\n\r\n        const p = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (p) {\r\n            p.level = msg.level;\r\n\r\n            if (msg.type === PLAYER_LEVEL_UPDATE_TYPES.LEVELUP && msg.id === this.context.state.id) {\r\n                this.context.eventQueue.pub(Events.MESSAGE_TO_PLAYER, {\r\n                    message: `You have reached level ${p.level}!`,\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { PlayerNew } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Decoder } from \"../../helpers/decoder\";\r\nimport { Player } from \"../../models/player\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { PowerUps } from \"../../models/power-ups\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerNewHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_NEW];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerNew;\r\n\r\n        const p = new Player();\r\n        p.id = msg.id;\r\n        p.flag = msg.flag;\r\n        p.name = msg.name;\r\n        p.pos = new Pos(msg.posX, msg.posY);\r\n        p.type = msg.type;\r\n        p.rot = msg.rot;\r\n        p.status = msg.status;\r\n        p.team = msg.team;\r\n        p.energy = 1;\r\n        p.health = 1;\r\n\r\n        p.powerUps = Decoder.upgradesToPowerUps(msg.upgrades) || new PowerUps();\r\n\r\n        this.context.state.addPlayer(p);\r\n    }\r\n}\r\n","import { PLAYER_POWERUP_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { PlayerPowerup } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { StopWatch } from \"../../helpers/stopwatch\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerPowerupHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_POWERUP];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerPowerup;\r\n\r\n        const player = this.context.state.getFocusedPlayer();\r\n        if (player) {\r\n            player.hasShield = msg.type === PLAYER_POWERUP_TYPES.SHIELD;\r\n            player.hasInferno = msg.type === PLAYER_POWERUP_TYPES.INFERNO;\r\n            player.shieldOrInfernoTimer = new StopWatch(msg.duration);\r\n        }\r\n    }\r\n}\r\n","import { EventRepel } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Decoder } from \"../../helpers/decoder\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerRepelHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_REPEL];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as EventRepel;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n        if (player) {\r\n            player.pos = new Pos(msg.posX, msg.posY);\r\n            player.rot = msg.rot;\r\n            player.speed = new Pos(msg.speedX, msg.speedY);\r\n            player.energyRegen = msg.energyRegen;\r\n            player.energy = msg.energy;\r\n        }\r\n\r\n        for (const repelledPlayer of msg.players) {\r\n            const p = this.context.state.getPlayerById(repelledPlayer.id);\r\n\r\n            if (!p) {\r\n                continue;\r\n            }\r\n\r\n            const movements = Decoder.keystateToPlayerMovements(repelledPlayer.keystate);\r\n            p.setMovements(movements);\r\n\r\n            p.pos = new Pos(repelledPlayer.posX, repelledPlayer.posY);\r\n            p.rot = repelledPlayer.rot;\r\n            p.speed = new Pos(repelledPlayer.speedX, repelledPlayer.speedY);\r\n            p.energyRegen = repelledPlayer.energyRegen;\r\n            p.energy = repelledPlayer.energy;\r\n            p.health = repelledPlayer.playerHealth;\r\n            p.healthRegen = repelledPlayer.playerHealthRegen;\r\n        }\r\n\r\n        for (const missile of msg.mobs) {\r\n            const mob = this.context.state.getMobById(missile.id);\r\n\r\n            if (!mob) {\r\n                continue;\r\n            }\r\n\r\n            mob.pos = new Pos(missile.posX, missile.posY);\r\n            mob.accel = new Pos(missile.accelX, missile.accelY);\r\n            mob.maxSpeed = missile.maxSpeed;\r\n            mob.speed = new Pos(missile.speedX, missile.speedY);\r\n            mob.rot = mob.speed.direction();\r\n            mob.mobType = missile.type;\r\n            mob.ownerId = msg.id;\r\n            mob.team = player.team;\r\n        }\r\n\r\n    }\r\n}\r\n","import { PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { PlayerRespawn } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Decoder } from \"../../helpers/decoder\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { PowerUps } from \"../../models/power-ups\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerRespawnHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_RESPAWN];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerRespawn;\r\n\r\n        const p = this.context.state.getPlayerById(msg.id);\r\n        if (!p) {\r\n            return;\r\n        }\r\n        p.pos = new Pos(msg.posX, msg.posY);\r\n        p.rot = msg.rot;\r\n        p.powerUps = Decoder.upgradesToPowerUps(msg.upgrades) || new PowerUps();\r\n        p.status = PLAYER_STATUS.ALIVE;\r\n        p.health = 1;\r\n        p.energy = 1;\r\n\r\n        if (msg.id === this.context.state.myPlayerId) {\r\n            const wasSpectating = !!this.context.state.spectatingId;\r\n            if (wasSpectating) {\r\n                this.context.state.spectatingId = null;\r\n                this.context.state.id = this.context.state.myPlayerId;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { GameSpectate } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerSpectateHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_SPECTATE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as GameSpectate;\r\n\r\n        const p = this.context.state.getPlayerById(msg.id);\r\n        if (!p) {\r\n            return;\r\n        }\r\n\r\n        this.context.state.spectatingId = msg.id;\r\n    }\r\n}\r\n","import { EventStealth } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerStealthHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_STEALTH];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as EventStealth;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (!player) {\r\n            return;\r\n        }\r\n\r\n        player.stealthed = msg.state;\r\n        player.energy = msg.energy;\r\n        player.energyRegen = msg.energyRegen;\r\n    }\r\n}\r\n","import { PlayerType } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerSwitchTypeHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_SWITCH_TYPE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerType;\r\n\r\n        const p = this.context.state.getPlayerById(msg.id);\r\n        if (p) {\r\n            p.type = msg.type;\r\n        }\r\n    }\r\n}\r\n","import { PlayerUpdate } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Decoder } from \"../../helpers/decoder\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { PowerUps } from \"../../models/power-ups\";\r\nimport { Upgrades } from \"../../models/upgrades\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerUpdateHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_UPDATE];\r\n\r\n    private lastUp: boolean;\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerUpdate;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n\r\n        if (!player) {\r\n            return;\r\n        }\r\n\r\n        player.isVisibleOnScreen = true;\r\n\r\n        const movements = Decoder.keystateToPlayerMovements(msg.keystate);\r\n        player.setMovements(movements);\r\n\r\n        const powerUps = Decoder.upgradesToPowerUps(msg.upgrades);\r\n        player.powerUps = powerUps || new PowerUps();\r\n\r\n        player.upgrades = player.upgrades || new Upgrades();\r\n        player.upgrades.speed = player.powerUps.speed || 0;\r\n\r\n        player.pos = new Pos(msg.posX, msg.posY);\r\n        player.rot = msg.rot;\r\n        player.speed = new Pos(msg.speedX, msg.speedY);\r\n    }\r\n}\r\n","import { PlayerUpgrade, ScoreUpdate } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Upgrades } from \"../../models/upgrades\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class PlayerUpgradeAppliedHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_UPGRADE_APPLIED];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const player = this.context.state.getFocusedPlayer();\r\n\r\n        if (!player) {\r\n            return;\r\n        }\r\n\r\n        if (!player.upgrades) {\r\n            player.upgrades = new Upgrades();\r\n        }\r\n\r\n        const msg = ev.args as PlayerUpgrade;\r\n\r\n        const u = player.upgrades;\r\n        u.available = msg.upgrades;\r\n        u.defense = msg.defense;\r\n        u.energy = msg.energy;\r\n        u.missile = msg.missile;\r\n        u.speed = msg.speed;\r\n    }\r\n}\r\n","import { ScoreBoardData } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ScoreBoardHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SCORE_BOARD];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const data = ev.args as ScoreBoardData[];\r\n\r\n        let ranking = 0;\r\n        for (const playerScore of data) {\r\n            ranking++;\r\n            const player = this.context.state.getPlayerById(playerScore.id);\r\n            if (!player) {\r\n                continue;\r\n            }\r\n            player.score = playerScore.score;\r\n            player.level = playerScore.level;\r\n            player.ranking = ranking;\r\n        }\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { ScoreDetailedArgs } from \"../../events/event-args/score-detailed-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ScoreDetailedHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SCORE_DETAILED];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as ScoreDetailedArgs;\r\n\r\n        if (msg.ffaScores) {\r\n            for (const playerScore of msg.ffaScores) {\r\n                const player = this.context.state.getPlayerById(playerScore.id);\r\n                if (!player) {\r\n                    continue;\r\n                }\r\n                player.score = playerScore.score;\r\n                player.level = playerScore.level;\r\n                player.kills = playerScore.kills;\r\n                player.deaths = playerScore.deaths;\r\n                player.damage = playerScore.damage;\r\n                player.ping = playerScore.ping;\r\n            }\r\n        } else if (msg.ctfScores) {\r\n            for (const playerScore of msg.ctfScores) {\r\n                const player = this.context.state.getPlayerById(playerScore.id);\r\n                if (!player) {\r\n                    continue;\r\n                }\r\n                player.score = playerScore.score;\r\n                player.level = playerScore.level;\r\n                player.kills = playerScore.kills;\r\n                player.deaths = playerScore.deaths;\r\n                player.damage = playerScore.damage;\r\n                player.ping = playerScore.ping;\r\n                player.captures = playerScore.captures;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ScoreUpdate } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { Upgrades } from \"../../models/upgrades\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ScoreUpdateHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SCORE_UPDATE];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as ScoreUpdate;\r\n\r\n        const player = this.context.state.getPlayerById(msg.id);\r\n        if (player) {\r\n            player.score = msg.score;\r\n            player.kills = msg.totalkills;\r\n            player.deaths = msg.totaldeaths;\r\n\r\n            if (!player.upgrades) {\r\n                player.upgrades = new Upgrades();\r\n            }\r\n            player.upgrades.available = msg.upgrades;\r\n        }\r\n    }\r\n}\r\n","import { ServerMessage } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ServerAnnouncementHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SERVER_ANNOUNCEMENT];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as ServerMessage;\r\n\r\n        this.context.logger.info(\"Server message: \" + msg.text);\r\n    }\r\n}\r\n","import { CommandReply, ServerMessage } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IMessageToPlayerArgs } from \"../../events/event-args/message-to-player-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ServerCommandReplyHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SERVER_COMMAND_REPLY, Events.CHAT_NOT_POSSIBLE_BC_MUTED];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n\r\n        if (ev.type === Events.CHAT_NOT_POSSIBLE_BC_MUTED) {\r\n            this.context.eventQueue.pub(Events.MESSAGE_TO_PLAYER, {\r\n                message: \"You have been muted.\",\r\n            } as IMessageToPlayerArgs);\r\n        } else {\r\n            const msg = ev.args as CommandReply;\r\n\r\n            if (msg.text === \"Don't spam!\") {\r\n                this.context.eventQueue.pub(Events.SPAM_WARING_RECEIVED, {});\r\n            }\r\n\r\n            this.context.eventQueue.pub(Events.MESSAGE_TO_PLAYER, {\r\n                message: msg.text,\r\n            } as IMessageToPlayerArgs);\r\n        }\r\n    }\r\n}\r\n","import { SERVER_CUSTOM_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { ServerCustom, ServerCustomCTFData } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ServerCustomHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SERVER_CUSTOM];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as ServerCustom;\r\n\r\n        if (msg.type === SERVER_CUSTOM_TYPES.CTF) {\r\n            const data = JSON.parse(msg.data) as ServerCustomCTFData;\r\n            this.context.eventQueue.pub(Events.CTF_GAME_OVER, data);\r\n        }\r\n    }\r\n}\r\n","import { Error } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ServerErrorHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SERVER_ERROR];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as Error;\r\n\r\n        this.context.logger.error(\"Server reports error: \" + msg.error);\r\n    }\r\n}\r\n","import { PlayerReteam, ScoreUpdate } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class TeamsHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.TEAMS];\r\n\r\n    constructor(private context: IContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerReteam;\r\n\r\n        for (const p of msg.players) {\r\n            if (p.id === this.context.state.myPlayerId) {\r\n                this.context.state.team = p.team;\r\n            }\r\n\r\n            const player = this.context.state.getPlayerById(p.id);\r\n            if (!player) {\r\n                continue;\r\n            }\r\n\r\n            player.team = p.team;\r\n        }\r\n    }\r\n}\r\n","import { ChatSendHandler } from \"../handlers/chat-send-handler\";\r\nimport { IMessageHandler } from \"../handlers/imessage-handler\";\r\nimport { KeyboardMessageHandler } from \"../handlers/keyboard-message-handler\";\r\nimport { MissileMaintenanceHandler } from \"../handlers/maintenance/missile-maintenance-handler\";\r\nimport { PlayerMaintenanceHandler } from \"../handlers/maintenance/player-maintenance-handler\";\r\nimport { ServerMessageHandler } from \"../handlers/server-message-handler\";\r\nimport { CrateNewHandler } from \"../handlers/server-messages/crate-new-handler\";\r\nimport { FlagUpdateHandler } from \"../handlers/server-messages/flag-update-handler\";\r\nimport { LeaveHorizonHandler } from \"../handlers/server-messages/leave-horizon-handler\";\r\nimport { LoginHandler } from \"../handlers/server-messages/login-handler\";\r\nimport { MiniMapHandler } from \"../handlers/server-messages/mini-map-handler\";\r\nimport { MissileUpdateHandler } from \"../handlers/server-messages/missile-update-handler\";\r\nimport { MobDespawnHandler } from \"../handlers/server-messages/mob-despawn-handler\";\r\nimport { MountainHitHandler } from \"../handlers/server-messages/mountain-hit-handler\";\r\nimport { PlayerBoostHandler } from \"../handlers/server-messages/player-boost-handler\";\r\nimport { PlayerBounceHandler } from \"../handlers/server-messages/player-bounce-handler\";\r\nimport { PlayerChangeFlagHandler } from \"../handlers/server-messages/player-change-flag-handler\";\r\nimport { PlayerFireHandler } from \"../handlers/server-messages/player-fire-handler\";\r\nimport { PlayerHitHandler } from \"../handlers/server-messages/player-hit-handler\";\r\nimport { PlayerKilledHandler } from \"../handlers/server-messages/player-killed-handler\";\r\nimport { PlayerLeaveHandler } from \"../handlers/server-messages/player-leave-handler\";\r\nimport { PlayerLevelHandler } from \"../handlers/server-messages/player-level-handler\";\r\nimport { PlayerNewHandler } from \"../handlers/server-messages/player-new-handler\";\r\nimport { PlayerPowerupHandler } from \"../handlers/server-messages/player-powerup-handler\";\r\nimport { PlayerRepelHandler } from \"../handlers/server-messages/player-repel-handler\";\r\nimport { PlayerRespawnHandler } from \"../handlers/server-messages/player-respawn-handler\";\r\nimport { PlayerSpectateHandler } from \"../handlers/server-messages/player-spectate-handler\";\r\nimport { PlayerStealthHandler } from \"../handlers/server-messages/player-stealth-handler\";\r\nimport { PlayerSwitchTypeHandler } from \"../handlers/server-messages/player-switch-type-handler\";\r\nimport { PlayerUpdateHandler } from \"../handlers/server-messages/player-update-handler\";\r\nimport { PlayerUpgradeAppliedHandler } from \"../handlers/server-messages/player-upgrade-handler\";\r\nimport { ScoreBoardHandler } from \"../handlers/server-messages/score-board-handler\";\r\nimport { ScoreDetailedHandler } from \"../handlers/server-messages/score-detailed-handler\";\r\nimport { ScoreUpdateHandler } from \"../handlers/server-messages/score-update-handler\";\r\nimport { ServerAnnouncementHandler } from \"../handlers/server-messages/server-announcement-handler\";\r\nimport { ServerCommandReplyHandler } from \"../handlers/server-messages/server-command-reply-handler\";\r\nimport { ServerCustomHandler } from \"../handlers/server-messages/server-custom-handler\";\r\nimport { ServerErrorHandler } from \"../handlers/server-messages/server-error-handler\";\r\nimport { TeamsHandler } from \"../handlers/server-messages/teams-handler\";\r\nimport { IContext } from \"./icontext\";\r\n\r\nexport class HandlerCollections {\r\n    public static getDefaultHandlers(context: IContext): IMessageHandler[] {\r\n        return [\r\n            // server messages\r\n            new CrateNewHandler(context),\r\n            new FlagUpdateHandler(context),\r\n            new LeaveHorizonHandler(context),\r\n            new LoginHandler(context),\r\n            new MiniMapHandler(context),\r\n            new MissileUpdateHandler(context),\r\n            new MobDespawnHandler(context),\r\n            new MountainHitHandler(context),\r\n            new PlayerBoostHandler(context),\r\n            new PlayerBounceHandler(context),\r\n            new PlayerChangeFlagHandler(context),\r\n            new PlayerFireHandler(context),\r\n            new PlayerHitHandler(context),\r\n            new PlayerKilledHandler(context),\r\n            new PlayerLeaveHandler(context),\r\n            new PlayerLevelHandler(context),\r\n            new PlayerNewHandler(context),\r\n            new PlayerPowerupHandler(context),\r\n            new PlayerRepelHandler(context),\r\n            new PlayerRespawnHandler(context),\r\n            new PlayerSpectateHandler(context),\r\n            new PlayerStealthHandler(context),\r\n            new PlayerSwitchTypeHandler(context),\r\n            new PlayerUpdateHandler(context),\r\n            new PlayerUpgradeAppliedHandler(context),\r\n            new ServerCommandReplyHandler(context),\r\n            new ServerCustomHandler(context),\r\n            new ServerErrorHandler(context),\r\n            new ServerMessageHandler(context),\r\n            new ServerAnnouncementHandler(context),\r\n            new ScoreBoardHandler(context),\r\n            new ScoreDetailedHandler(context),\r\n            new ScoreUpdateHandler(context),\r\n            new TeamsHandler(context),\r\n\r\n            // maintenance\r\n            new MissileMaintenanceHandler(context),\r\n            new PlayerMaintenanceHandler(context),\r\n\r\n            // client input\r\n            new KeyboardMessageHandler(context),\r\n            new ChatSendHandler(context),\r\n        ];\r\n    }\r\n\r\n}\r\n","export class Settings {\r\n    public websocketUrl: string = \"wss://game.airmash.cc/ffa\";\r\n    public playerName: string = \"Unknown\";\r\n    public horizonX: number = 2000;\r\n    public horizonY: number = 2000;\r\n    public flag: string = \"jolly\";\r\n    public logLevel: string = \"info\";\r\n    public isDevelopment: boolean = false;\r\n    public zoom = 0.8;\r\n    public useBitmaps: boolean = true;\r\n    public shouldShowDebugInfo: boolean = false;\r\n}\r\n\r\n\r\n/*\r\ndata: \"[{\"name\":\"Europe\",\"id\":\"eu\",\"games\":[{\"type\":\"1\",\"id\":\"ffa1\",\"name\":\"Free For All #1\",\"nameShort\":\"FFA #1\",\"host\":\"eu.airmash.online\",\"path\":\"ffa\",\"players\":8,\"bots\":5},{\"type\":\"2\",\"id\":\"ctf1\",\"name\":\"Capture The Flag #1\",\"nameShort\":\"CTF #1\",\"host\":\"dev.airbattle.xyz\",\"path\":\"ctf\",\"players\":12,\"bots\":12},{\"type\":\"3\",\"id\":\"btr1\",\"name\":\"Battle Royale #1\",\"nameShort\":\"BTR #1\",\"host\":\"eu.airmash.online\",\"path\":\"btr\",\"players\":1}]},{\"name\":\"US\",\"id\":\"us\",\"games\":[{\"type\":\"1\",\"id\":\"ffa1\",\"name\":\"Free For All #1\",\"nameShort\":\"FFA #1\",\"host\":\"game.airmash.cc\",\"path\":\"ffa\",\"players\":0},{\"type\":\"1\",\"id\":\"ffa2\",\"name\":\"Free For All #2\",\"nameShort\":\"FFA #2\",\"host\":\"ffa.herrmash.com\",\"path\":\"ffa\",\"players\":13,\"bots\":5},{\"type\":\"2\",\"id\":\"ctf1\",\"name\":\"Capture The Flag #1\",\"nameShort\":\"CTF #1\",\"host\":\"game.airmash.cc\",\"path\":\"ctf\",\"players\":0},{\"type\":\"2\",\"id\":\"ctf2\",\"name\":\"Capture The Flag #2\",\"nameShort\":\"CTF #2\",\"host\":\"ctf.herrmash.com\",\"path\":\"ctf\",\"players\":12,\"bots\":12},{\"type\":\"3\",\"id\":\"btr1\",\"name\":\"Battle Royale #1\",\"nameShort\":\"BTR #1\",\"host\":\"us.airmash.online\",\"path\":\"btr\",\"players\":0}]}]\"\r\n*/","import { CTF_FLAG_STATE } from \"../ab-protocol/src/lib\";\r\nimport { Pos } from \"./pos\";\r\n\r\nexport class CtfTeam {\r\n    public flagState: CTF_FLAG_STATE;\r\n    public flagTakenById: number;\r\n    public flagPos: Pos;\r\n    public score: number;\r\n}\r\n","import { CTF_TEAMS, MOB_TYPES } from \"../ab-protocol/src/lib\";\r\nimport { CloudVisual } from \"../models/cloud-visual\";\r\nimport { CtfTeam } from \"../models/ctf-team\";\r\nimport { ExplosionVisual } from \"../models/explosion-visual\";\r\nimport { GoliFartVisual } from \"../models/golifart-visual\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { KillVisual } from \"../models/kill-visual\";\r\nimport { Mob } from \"../models/mob\";\r\nimport { Player } from \"../models/player\";\r\n\r\nconst MISSILES: MOB_TYPES[] = [\r\n    MOB_TYPES.PREDATOR_MISSILE,\r\n    MOB_TYPES.GOLIATH_MISSILE,\r\n    MOB_TYPES.COPTER_MISSILE,\r\n    MOB_TYPES.TORNADO_MISSILE,\r\n    MOB_TYPES.TORNADO_SMALL_MISSILE,\r\n    MOB_TYPES.PROWLER_MISSILE,\r\n];\r\n\r\nconst CRATES: MOB_TYPES[] = [\r\n    MOB_TYPES.UPGRADE,\r\n    MOB_TYPES.SHIELD,\r\n    MOB_TYPES.INFERNO,\r\n];\r\n\r\nexport class State {\r\n\r\n    public id: number;\r\n    public team: number;\r\n    public ping: number;\r\n    public numPlayers: number;\r\n    public numPlayersTotal: number;\r\n    public spectatingId: number;\r\n    public myPlayerId: number;\r\n\r\n    // random debug info\r\n    public skippedFrames: number = 0;\r\n\r\n    private players = {};\r\n    private mobs = {};\r\n    private teams = {};\r\n    private explosions: ExplosionVisual[] = [];\r\n    private farts: GoliFartVisual[] = [];\r\n    private kills: KillVisual[] = [];\r\n    private rocketTrailClouds: CloudVisual[] = [];\r\n\r\n    constructor() {\r\n        this.teams[CTF_TEAMS.BLUE] = new CtfTeam();\r\n        this.teams[CTF_TEAMS.RED] = new CtfTeam();\r\n    }\r\n\r\n    public addPlayer(p: Player): void {\r\n        this.players[Number(p.id)] = p;\r\n    }\r\n\r\n    public removePlayer(id: number) {\r\n        delete this.players[Number(id)];\r\n    }\r\n\r\n    // get the player that has the focus. Mostly the player himself.\r\n    // In case of spectating, this returns the player being spectated.\r\n    public getFocusedPlayer(): Player {\r\n        return this.getPlayerById(this.id);\r\n    }\r\n\r\n    public getPlayerById(id: number): Player {\r\n        return this.players[Number(id)];\r\n    }\r\n\r\n    public getPlayerByName(name: string): Player {\r\n        return this.getPlayers().find((x) => x.name === name);\r\n    }\r\n\r\n    public getPlayers(): Player[] {\r\n        return Object.values(this.players);\r\n    }\r\n\r\n    public getPlayerName(id: number): string {\r\n        if (!id) {\r\n            return \"(empty)\";\r\n        }\r\n\r\n        const p = this.getPlayerById(id);\r\n        if (!p) {\r\n            return id + \"_(left)\";\r\n        }\r\n\r\n        return p.name;\r\n    }\r\n\r\n    public addMob(m: Mob): void {\r\n        this.mobs[Number(m.id)] = m;\r\n    }\r\n\r\n    public removeMob(id: number): void {\r\n        delete this.mobs[Number(id)];\r\n    }\r\n\r\n    public getMobById(id: number): Mob {\r\n        return this.mobs[Number(id)];\r\n    }\r\n\r\n    public getMissiles(): Mob[] {\r\n        const allMobs = Object.values(this.mobs) as Mob[];\r\n        return allMobs.filter((m) => MISSILES.indexOf(m.mobType) !== -1);\r\n    }\r\n\r\n    public getUpcrates(): Mob[] {\r\n        const allMobs = Object.values(this.mobs) as Mob[];\r\n        return allMobs.filter((m) => CRATES.indexOf(m.mobType) !== -1);\r\n    }\r\n\r\n    public getCtfTeam(team: CTF_TEAMS): CtfTeam {\r\n        return this.teams[team];\r\n    }\r\n\r\n    public getOtherCtfTeam(team: CTF_TEAMS): CtfTeam {\r\n        const otherTeam = team === CTF_TEAMS.BLUE ? CTF_TEAMS.RED : CTF_TEAMS.BLUE;\r\n        return this.teams[otherTeam];\r\n    }\r\n\r\n    public purgeAfterPanic(): void {\r\n        // purge any fancy stuff, so the panic doesn't get worse: this prevents\r\n        // rendering explosions from long ago.\r\n        this.explosions.splice(0);\r\n        this.kills.splice(0);\r\n        this.rocketTrailClouds.splice(0);\r\n    }\r\n\r\n    public addExplosion(expl: ExplosionVisual) {\r\n        this.explosions.push(expl);\r\n    }\r\n\r\n    // get only active explosions, also purges the collection of inactive explosions\r\n    public getActiveExplosions(): ExplosionVisual[] {\r\n        const activeExplosions = this.explosions.filter((e) => !e.isFinished);\r\n        this.explosions = activeExplosions;\r\n        return activeExplosions;\r\n    }\r\n\r\n    public addKill(kill: KillVisual) {\r\n        this.kills.push(kill);\r\n    }\r\n\r\n    // get only active kill visuals, also purges the collection of inactive kills\r\n    public getActiveKills(): KillVisual[] {\r\n        const activeKills = this.kills.filter((e) => !e.isFinished);\r\n        this.kills = activeKills;\r\n        return activeKills;\r\n    }\r\n\r\n    public addFart(fart: GoliFartVisual) {\r\n        this.farts.push(fart);\r\n    }\r\n\r\n    // get only active fart visuals, also purges the collection of inactive farts\r\n    public getActiveFarts(): GoliFartVisual[] {\r\n        const activeFarts = this.farts.filter((e) => !e.isFinished);\r\n        this.farts = activeFarts;\r\n        return activeFarts;\r\n    }\r\n\r\n    public addRocketTrailCloud(cloud: CloudVisual) {\r\n        this.rocketTrailClouds.push(cloud);\r\n    }\r\n\r\n    public getActiveRocketTrailClouds(): CloudVisual[] {\r\n        const activeClouds = this.rocketTrailClouds.filter((e) => !e.isFinished);\r\n        this.rocketTrailClouds = activeClouds;\r\n        return activeClouds;\r\n    }\r\n\r\n}\r\n","export class TimerManager {\r\n    private timeouts = [];\r\n    private intervals = [];\r\n\r\n    public setTimeout(action: () => void, ms) {\r\n        const id = setTimeout(() => {\r\n            this.onTimeoutFinished(id);\r\n            action();\r\n        }, ms);\r\n        this.timeouts.push(id);\r\n        return id;\r\n    }\r\n\r\n    public setInterval(action: () => void, ms) {\r\n        const id = setInterval(() => action(), ms);\r\n        this.intervals.push(id);\r\n        return id;\r\n    }\r\n\r\n    public clearTimeout(id): void {\r\n        clearTimeout(id);\r\n        this.onTimeoutFinished(id);\r\n    }\r\n\r\n    public clearInterval(id): void {\r\n        clearInterval(id);\r\n        this.onIntervalCleared(id);\r\n    }\r\n\r\n    public clearAll() {\r\n        for (const t of this.timeouts) {\r\n            clearTimeout(t);\r\n        }\r\n        for (const i of this.intervals) {\r\n            clearInterval(i);\r\n        }\r\n\r\n        this.timeouts = [];\r\n        this.intervals = [];\r\n    }\r\n\r\n    private onTimeoutFinished(id) {\r\n        this.timeouts = this.timeouts.filter((x) => x !== id);\r\n    }\r\n\r\n    private onIntervalCleared(id) {\r\n        this.intervals = this.intervals.filter((x) => x !== id);\r\n    }\r\n}\r\n","import { KEY_CODES } from \"../ab-protocol/src/lib\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\n\r\nexport class KeyStateCache {\r\n    public key: KEY_CODES;\r\n    public state: boolean;\r\n    public lastPressed: StopWatch;\r\n\r\n    constructor(key: KEY_CODES, state: boolean) {\r\n        this.key = key;\r\n        this.state = state;\r\n        this.lastPressed = new StopWatch();\r\n    }\r\n}\r\n","import { CHAT_TYPE } from \"../ab-assets/chat-constants\";\r\nimport { KEY_CODES } from \"../ab-protocol/src/lib\";\r\nimport * as marshaling from \"../ab-protocol/src/marshaling\";\r\nimport { ProtocolPacket } from \"../ab-protocol/src/packets\";\r\nimport CLIENT_PACKETS from \"../ab-protocol/src/packets/client\";\r\nimport SERVER_PACKETS from \"../ab-protocol/src/packets/server\";\r\nimport { Backup, Chat, Command, Horizon, Key, Votemute } from \"../ab-protocol/src/types/packets-client\";\r\nimport { Login, Ping, PingResult } from \"../ab-protocol/src/types/packets-server\";\r\nimport * as unmarshaling from \"../ab-protocol/src/unmarshaling\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { PeriodicLogger } from \"../helpers/periodic-logger\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { KeyStateCache } from \"./keyStateCache\";\r\n\r\nconst KEY_THROTTLE_MS = 50;\r\n\r\nexport class Connection {\r\n\r\n    private client: WebSocket;\r\n    private backupClient: WebSocket;\r\n    private backupClientIsConnected: boolean;\r\n    private ackToBackup: boolean;\r\n    private ackInterval: any;\r\n    private keySequenceNumber: number = 0;\r\n    private loginPromiseResolver: (value?: any) => void;\r\n\r\n    private serverClockCalibrationTime: number;\r\n    private serverClockCalibrationTimeResetStopwatch: StopWatch;\r\n    private lagMs = 0;\r\n    private lastServerClock: number;\r\n    private lastReceivedMessages: { [key: string]: StopWatch } = {};\r\n    private lastReceivedMessagesGcStopwatch = new StopWatch();\r\n\r\n    private lastSentKeyStates: KeyStateCache[] = [];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public async init(): Promise<any> {\r\n        this.client = await this.initWebSocket(true);\r\n        await this.onInitPrimary();\r\n    }\r\n\r\n    public sendKey(key: KEY_CODES, state: boolean) {\r\n\r\n        let cache = this.lastSentKeyStates.find((x) => x.key === key && x.state === state);\r\n        if (cache) {\r\n            if (cache.lastPressed.elapsedMs < KEY_THROTTLE_MS) {\r\n                // don't send to prevent flooding\r\n                return;\r\n            }\r\n        } else {\r\n            cache = new KeyStateCache(key, state);\r\n            this.lastSentKeyStates.push(cache);\r\n        }\r\n\r\n        // allow the key, and reset the stopwatch\r\n        cache.lastPressed.start();\r\n\r\n        this.keySequenceNumber++;\r\n        const msg = {\r\n            c: CLIENT_PACKETS.KEY,\r\n            key,\r\n            seq: this.keySequenceNumber,\r\n            state,\r\n        } as Key;\r\n        this.send(msg);\r\n        if (this.backupClientIsConnected) {\r\n            this.send(msg, true);\r\n        }\r\n    }\r\n\r\n    public sendCommand(command: string, params: string) {\r\n        const msg = {\r\n            c: CLIENT_PACKETS.COMMAND,\r\n            com: command,\r\n            data: params,\r\n        } as Command;\r\n        this.send(msg);\r\n    }\r\n\r\n    public voteMute(playerId: number) {\r\n        const msg = {\r\n            c: CLIENT_PACKETS.VOTEMUTE,\r\n            id: playerId,\r\n        } as Votemute;\r\n        this.send(msg);\r\n    }\r\n\r\n    public fetchDetailedScore() {\r\n        this.send({ c: CLIENT_PACKETS.SCOREDETAILED });\r\n    }\r\n\r\n    public sendChat(type: CHAT_TYPE, text: string, targetPlayerID: number = null): void {\r\n        let c: number;\r\n        switch (type) {\r\n            case CHAT_TYPE.CHAT:\r\n                c = CLIENT_PACKETS.CHAT;\r\n                break;\r\n            case CHAT_TYPE.SAY:\r\n                c = CLIENT_PACKETS.SAY;\r\n                break;\r\n            case CHAT_TYPE.TEAM:\r\n                c = CLIENT_PACKETS.TEAMCHAT;\r\n                break;\r\n            case CHAT_TYPE.WHISPER:\r\n                c = CLIENT_PACKETS.WHISPER;\r\n                break;\r\n        }\r\n\r\n        const msg = {\r\n            c,\r\n            id: targetPlayerID,\r\n            text,\r\n        } as Chat;\r\n\r\n        this.send(msg);\r\n    }\r\n\r\n    public sendScreenSize(width: number, height: number) {\r\n        this.send({\r\n            c: CLIENT_PACKETS.HORIZON,\r\n            horizonX: Math.ceil(width / 2),\r\n            horizonY: Math.ceil(height / 2),\r\n        } as Horizon);\r\n    }\r\n\r\n    public getLagMs() {\r\n        return this.lagMs;\r\n    }\r\n\r\n    private onInitPrimary(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            this.loginPromiseResolver = resolve;\r\n            this.context.logger.debug(\"Primary socket connecting\");\r\n\r\n            let thirdPartyLogin = \"none\";\r\n            if (this.context.auth) {\r\n                thirdPartyLogin = JSON.stringify({ token: this.context.auth.tokens.game });\r\n            }\r\n\r\n            this.send({\r\n                c: CLIENT_PACKETS.LOGIN,\r\n                flag: this.context.settings.flag,\r\n                horizonX: Math.ceil(this.context.settings.horizonX),\r\n                horizonY: Math.ceil(this.context.settings.horizonY),\r\n                name: this.context.settings.playerName,\r\n                protocol: 5,\r\n                session: thirdPartyLogin,\r\n            });\r\n        });\r\n    }\r\n\r\n    private async afterLogin(msg: Login) {\r\n        // send regular ack messages to keep the connection alive\r\n        if (this.ackInterval) {\r\n            this.context.tm.clearInterval(this.ackInterval);\r\n        }\r\n        this.ackInterval = this.context.tm.setInterval(() => {\r\n            this.send({ c: CLIENT_PACKETS.ACK }, this.ackToBackup);\r\n            this.ackToBackup = !this.ackToBackup;\r\n        }, 1000); // original airmash has 50ms, but wights server has a 10 second ack timeout. So.\r\n\r\n        const token = msg.token as string;\r\n\r\n        if (this.backupClientIsConnected) {\r\n            this.backupClient.close();\r\n            this.backupClientIsConnected = false;\r\n        }\r\n        this.backupClient = await this.initWebSocket(false);\r\n        this.onInitBackup(token);\r\n\r\n        // send start info to game\r\n        this.context.eventQueue.pub(Events.SERVER_MESSAGE, msg);\r\n\r\n        // return from the await in init()\r\n        this.loginPromiseResolver();\r\n    }\r\n\r\n    private resetCalibration(newTime: number) {\r\n        this.serverClockCalibrationTimeResetStopwatch = new StopWatch();\r\n        this.serverClockCalibrationTime = newTime;\r\n        this.lagMs = 0;\r\n    }\r\n\r\n    private onInitBackup(token: any) {\r\n        this.context.logger.debug(\"Backup socket connecting\");\r\n        this.backupClientIsConnected = true;\r\n        this.send({\r\n            c: CLIENT_PACKETS.BACKUP,\r\n            token,\r\n        } as Backup, true);\r\n    }\r\n\r\n    private initWebSocket(isPrimary: boolean): Promise<WebSocket> {\r\n        return new Promise((resolve, reject) => {\r\n            const ws = this.context.webSocketFactory.create(this.context.settings.websocketUrl);\r\n            ws.binaryType = \"arraybuffer\";\r\n\r\n            ws.onopen = () => resolve(ws);\r\n            ws.onmessage = (msg: { data: ArrayBuffer }) => {\r\n                try {\r\n                    const result = unmarshaling.unmarshalServerMessage(msg.data);\r\n                    if (!result) {\r\n                        this.context.logger.warn(\"no result\", msg);\r\n                        return;\r\n                    }\r\n\r\n                    if (this.shouldDropMessage(result)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.calibrateTime(result);\r\n\r\n                    // handle a few meta messages directly\r\n                    if (result.c === SERVER_PACKETS.PING) {\r\n                        const pingResult = result as Ping;\r\n                        this.send({ c: CLIENT_PACKETS.PONG, num: pingResult.num }, !isPrimary);\r\n\r\n                    } else if (result.c === SERVER_PACKETS.BACKUP) {\r\n\r\n                        this.context.logger.debug(\"backup client connected\");\r\n                        this.backupClientIsConnected = true;\r\n\r\n                    } else if (result.c === SERVER_PACKETS.LOGIN) {\r\n                        this.afterLogin(result);\r\n                    } else if (result.c === SERVER_PACKETS.PING_RESULT) {\r\n                        const pingResultResult = result as PingResult;\r\n                        this.context.state.ping = pingResultResult.ping;\r\n                        this.context.state.numPlayers = pingResultResult.playersgame;\r\n                        this.context.state.numPlayersTotal = pingResultResult.playerstotal;\r\n\r\n                    } else {\r\n                        // let most messages be handled by a subscriber\r\n                        this.context.eventQueue.pub(Events.SERVER_MESSAGE, result);\r\n                    }\r\n                } catch (error) {\r\n                    this.context.logger.error(\"Error receiving message\", error);\r\n                }\r\n            };\r\n            ws.onerror = (ev) => {\r\n                this.context.eventQueue.pub(Events.CONNECTION_ERROR, ev);\r\n            };\r\n            ws.onclose = () => {\r\n                this.context.eventQueue.pub(Events.CONNECTION_CLOSE, { isPrimary });\r\n            };\r\n            return ws;\r\n        });\r\n    }\r\n\r\n    private calibrateTime(msg: ProtocolPacket) {\r\n        if (!msg.clock) {\r\n            return;\r\n        }\r\n\r\n        const currentServerClock = msg.clock as number / 100;\r\n\r\n        const shouldResetCalibration = !this.serverClockCalibrationTimeResetStopwatch ||\r\n            this.serverClockCalibrationTimeResetStopwatch.elapsedMinutes > 5;\r\n\r\n        if (shouldResetCalibration) {\r\n            this.resetCalibration(currentServerClock);\r\n            return;\r\n        }\r\n\r\n        if (currentServerClock < this.lastServerClock) {\r\n            // only evaluate messages arriving in the right order\r\n            return;\r\n        }\r\n\r\n        this.lastServerClock = currentServerClock;\r\n\r\n        const elapsedOnServer = currentServerClock - this.serverClockCalibrationTime;\r\n        const elapsedHere = this.serverClockCalibrationTimeResetStopwatch.elapsedMs;\r\n\r\n        // if a message arrives that has an elapsedtime of 10 ms,\r\n        // while our local elapsedtime is at 20 ms, we have a 10-ms delay in receiving the messages\r\n        // this will be compensated by extrapolating this in the eventqueue\r\n        const diffInMs = elapsedHere - elapsedOnServer;\r\n\r\n        this.lagMs = diffInMs;\r\n    }\r\n\r\n    private shouldDropMessage(msg: ProtocolPacket): boolean {\r\n        if (!msg.id || !msg.clock || msg.id !== this.context.state.id) {\r\n            return false;\r\n        }\r\n\r\n        // do GC\r\n        if (this.lastReceivedMessagesGcStopwatch.elapsedSeconds > 5) {\r\n            for (const existingKey of Object.keys(this.lastReceivedMessages)) {\r\n                if (this.lastReceivedMessages[existingKey].elapsedSeconds > 1) {\r\n                    delete this.lastReceivedMessages[existingKey];\r\n                }\r\n            }\r\n        }\r\n\r\n        const key = `${msg.c}_${msg.clock}`;\r\n\r\n        if (this.lastReceivedMessages[key]) {\r\n            return true;\r\n        }\r\n\r\n        this.lastReceivedMessages[key] = new StopWatch();\r\n        return false;\r\n    }\r\n\r\n    private send(msg: ProtocolPacket, sendToBackup = false) {\r\n        const clientMgs = marshaling.marshalClientMessage(msg);\r\n        if (sendToBackup) {\r\n            if (this.backupClientIsConnected) {\r\n                this.backupClient.send(clientMgs);\r\n            }\r\n        } else {\r\n            if (this.client) {\r\n                this.client.send(clientMgs);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Events } from \"./constants\";\r\n\r\nexport class EventMessage {\r\n    public type: Events;\r\n    public args: any;\r\n}\r\n","import { Events } from \"./constants\";\r\nimport { EventMessage } from \"./event-message\";\r\n\r\nexport class EventQueue {\r\n    private queue: EventMessage[] = [];\r\n\r\n    public pub(ev: Events, args: any): void {\r\n        const msg = new EventMessage();\r\n        msg.type = ev;\r\n        msg.args = args;\r\n\r\n        this.queue.push(msg);\r\n    }\r\n\r\n    public dequeue(): EventMessage {\r\n        return this.queue.shift();\r\n    }\r\n\r\n}\r\n","import { KEY_CODES } from \"../ab-protocol/src/lib\";\r\nimport { BrowserContext } from \"../browser-impl/browser-context\";\r\n\r\n// this can't be a messagehandler, because the tick won't fire if browser is not visible\r\nexport class BrowserVisibilityHandler {\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public clearKeys(): void {\r\n        const me = this.context.state.getFocusedPlayer();\r\n        if (!me) {\r\n            return;\r\n        }\r\n\r\n        // send key-up for all keys\r\n        if (me.keystate.DOWN) {\r\n            this.context.connection.sendKey(KEY_CODES.DOWN, false);\r\n        }\r\n        if (me.keystate.UP) {\r\n            this.context.connection.sendKey(KEY_CODES.UP, false);\r\n        }\r\n        if (me.keystate.LEFT) {\r\n            this.context.connection.sendKey(KEY_CODES.LEFT, false);\r\n        }\r\n        if (me.keystate.RIGHT) {\r\n\r\n            this.context.connection.sendKey(KEY_CODES.RIGHT, false);\r\n        }\r\n\r\n        this.context.connection.sendKey(KEY_CODES.SPECIAL, false);\r\n        this.context.connection.sendKey(KEY_CODES.FIRE, false);\r\n    }\r\n}\r\n","/*! js-cookie v3.0.1 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  }()));\n}(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        key + '=' + converter.write(value, key) + stringifiedAttributes)\n    }\n\n    function get (key) {\n      if (typeof document === 'undefined' || (arguments.length && !key)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar\n    }\n\n    return Object.create(\n      {\n        set: set,\n        get: get,\n        remove: function (key, attributes) {\n          set(\n            key,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n})));\n","import Cookies from \"js-cookie\";\r\nimport { FLAGS_CODE_TO_ISO } from \"../ab-protocol/src/lib\";\r\nimport { PlayerFlag } from \"../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\n\r\nexport class FlagCookieHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.PLAYER_CHANGE_FLAG];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerFlag;\r\n        if (msg.id !== this.context.state.id) {\r\n            return;\r\n        }\r\n        const flag = FLAGS_CODE_TO_ISO[\"\" + msg.flag];\r\n        Cookies.set(\"flag\", flag, { expires: 365 });\r\n    }\r\n}\r\n","import { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IChatArgs } from \"../../events/event-args/chat-args\";\r\nimport { IMessageToPlayerArgs } from \"../../events/event-args/message-to-player-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ChatRenderHandler implements IMessageHandler {\r\n    public handles = [Events.CHAT_RECEIVED, Events.MESSAGE_TO_PLAYER];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        if (ev.type === Events.MESSAGE_TO_PLAYER) {\r\n            const msg = ev.args as IMessageToPlayerArgs;\r\n            this.context.renderer.addMessageToPlayer(msg.message);\r\n        } else {\r\n            const chat = ev.args as IChatArgs;\r\n            const player = this.context.state.getPlayerName(chat.playerId);\r\n\r\n            this.context.renderer.addChat(chat.playerId, player, chat.chatType, chat.chatMessage, chat.to);\r\n        }\r\n    }\r\n}\r\n","import { CTF_TEAMS, SERVER_MESSAGE_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { ServerCustomCTFData } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class CtfGameOverRenderHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.CTF_GAME_OVER];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        const msg = ev.args as ServerCustomCTFData;\r\n\r\n        this.context.renderer.showServerMessage(SERVER_MESSAGE_TYPES.INFO, 5000,\r\n            `Game over!<br/>The ${msg.w === CTF_TEAMS.BLUE ? \"blue\" : \"red\"} team has won!`);\r\n    }\r\n}\r\n","import { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\n// renders stuff that is not that important each second\r\nexport class EachSecondRenderHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.EACH_SECOND];\r\n\r\n    constructor(private context: BrowserContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        if (!this.context.isBrowserVisible) {\r\n            return;\r\n        }\r\n        this.context.renderer.renderMinimap();\r\n        this.context.renderer.renderPlayerList();\r\n        this.context.renderer.showPing();\r\n        this.context.renderer.showStats();\r\n        this.context.renderer.hideServerMessageAfterTimeout();\r\n\r\n        // removed for now per issue #29 (https://github.com/spatiebot/ab-client/issues/29)\r\n        // this.context.connection.fetchDetailedScore();\r\n    }\r\n}\r\n","import { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { Pos } from \"./pos\";\r\n\r\nconst EXPLOSION_TIMEOUT_MS = 500;\r\nconst EXPLOSION_MAX_SIZE = 60;\r\nconst EXPLOSION_GROW_PER_MS =  EXPLOSION_MAX_SIZE / EXPLOSION_TIMEOUT_MS;\r\n\r\nexport class ExplosionVisual {\r\n    public pos: Pos;\r\n    public type: MOB_TYPES;\r\n\r\n    private stopwatch: StopWatch = new StopWatch();\r\n\r\n    public get isFinished(): boolean {\r\n        return this.stopwatch.elapsedMs > EXPLOSION_TIMEOUT_MS;\r\n    }\r\n\r\n    public get size(): number {\r\n        return this.stopwatch.elapsedMs * EXPLOSION_GROW_PER_MS;\r\n    }\r\n}\r\n","import { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IExplosionArgs } from \"../../events/event-args/iexplosion-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { ExplosionVisual } from \"../../models/explosion-visual\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ExplosionVisualizationHandler implements IMessageHandler {\r\n    public handles = [Events.EXPLOSION];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        if (!this.context.isBrowserVisible) {\r\n            return;\r\n        }\r\n\r\n        const expl = ev.args as IExplosionArgs;\r\n        const explosion = new ExplosionVisual();\r\n        explosion.pos = expl.pos;\r\n        explosion.type = expl.type;\r\n        this.context.state.addExplosion(explosion);\r\n    }\r\n}\r\n","import { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { ITickArgs } from \"../../events/event-args/itick-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class GameRenderHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.TICK];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        if (!this.context.isBrowserVisible) {\r\n            return;\r\n        }\r\n\r\n        const msg = ev.args as ITickArgs;\r\n        const isFirstTick = msg.frame === 1;\r\n\r\n        window.requestAnimationFrame(() => this.context.renderer.renderGame(isFirstTick));\r\n    }\r\n}\r\n","import { StopWatch } from \"../helpers/stopwatch\";\r\nimport { Player } from \"./player\";\r\n\r\nconst FART_TIMEOUT_MS = 150;\r\nconst FART_MAX_SIZE = 140;\r\nconst FART_START_SIZE = 120;\r\nconst FART_GROW_PER_MS = (FART_MAX_SIZE - FART_START_SIZE) / FART_TIMEOUT_MS;\r\n\r\nexport class GoliFartVisual {\r\n    public player: Player;\r\n\r\n    private stopwatch = new StopWatch();\r\n\r\n    public get isFinished(): boolean {\r\n        return this.stopwatch.elapsedMs > FART_TIMEOUT_MS;\r\n    }\r\n\r\n    public get size(): number {\r\n        return FART_START_SIZE + this.stopwatch.elapsedMs * FART_GROW_PER_MS;\r\n    }\r\n}\r\n","import { EventRepel } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { GoliFartVisual } from \"../../models/golifart-visual\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class GoliFartVisualizationHandler implements IMessageHandler {\r\n    public handles = [Events.PLAYER_REPEL];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const repel = ev.args as EventRepel;\r\n\r\n        const fartVisual = new GoliFartVisual();\r\n        fartVisual.player = this.context.state.getPlayerById(repel.id);\r\n        this.context.state.addFart(fartVisual);\r\n    }\r\n}\r\n","import { StopWatch } from \"../helpers/stopwatch\";\r\nimport { Pos } from \"./pos\";\r\n\r\nconst KILL_TIMEOUT_MS = 500;\r\nconst KILL_MAX_SIZE = 60;\r\nconst KILL_GROW_PER_MS = KILL_MAX_SIZE / KILL_TIMEOUT_MS;\r\n\r\nexport class KillVisual {\r\n    public pos: Pos;\r\n\r\n    private stopwatch = new StopWatch();\r\n\r\n    public get isFinished(): boolean {\r\n        return this.stopwatch.elapsedMs > KILL_TIMEOUT_MS;\r\n    }\r\n\r\n    public get size(): number {\r\n        return this.stopwatch.elapsedMs * KILL_GROW_PER_MS;\r\n    }\r\n}\r\n","import { PlayerKill } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { KillVisual } from \"../../models/kill-visual\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class KillVisualizationHandler implements IMessageHandler {\r\n    public handles = [Events.PLAYER_KILLED];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const kill = ev.args as PlayerKill;\r\n\r\n        const killVisual = new KillVisual();\r\n        killVisual.pos = new Pos(kill.posX, kill.posY);\r\n        this.context.state.addKill(killVisual);\r\n    }\r\n}\r\n","import { StopWatch } from \"../helpers/stopwatch\";\r\nimport { CloudVisualSpec } from \"./cloud-visual-spec\";\r\nimport { Pos } from \"./pos\";\r\n\r\nexport class CloudVisual {\r\n    public pos: Pos;\r\n\r\n    private readonly stopwatch: StopWatch = new StopWatch();\r\n\r\n    constructor(private spec: CloudVisualSpec) {\r\n    }\r\n\r\n    public get isFinished(): boolean {\r\n        return this.stopwatch.elapsedMs > this.spec.cloudTimeoutMs;\r\n    }\r\n\r\n    public get opacity(): number {\r\n        if (this.stopwatch.elapsedMs < this.spec.cloudGrowMs) {\r\n            // growing\r\n            return this.stopwatch.elapsedMs * this.spec.opacityGrowStep;\r\n        }\r\n        // shrinking\r\n        return Math.max(0, this.spec.opacityMax - this.stopwatch.elapsedMs * this.spec.opacityShrinkStep);\r\n    }\r\n\r\n    public get size(): number {\r\n        if (this.stopwatch.elapsedMs < this.spec.cloudGrowMs) {\r\n            // growing\r\n            return this.spec.sizeStart + this.stopwatch.elapsedMs * this.spec.sizeGrowStep;\r\n        }\r\n        // shrinking\r\n        return Math.max(0, this.spec.sizeMax - this.spec.sizeShrinkStep * this.stopwatch.elapsedMs);\r\n    }\r\n}\r\n","import { PROJECTILES_SPECS } from \"../ab-assets/missile-constants\";\r\nimport { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\n\r\nconst specs = {};\r\n\r\nexport class CloudVisualSpec {\r\n\r\n    public static getFor(type: MOB_TYPES): CloudVisualSpec {\r\n        if (!specs[type]) {\r\n            specs[type] = new CloudVisualSpec(type);\r\n        }\r\n        return specs[type];\r\n    }\r\n\r\n    public readonly opacityMax = 0.22;\r\n\r\n    public readonly cloudTimeoutMs: number;\r\n    public readonly cloudGrowMs: number;\r\n\r\n    public readonly opacityGrowStep: number;\r\n    public readonly opacityShrinkStep: number;\r\n\r\n    public readonly sizeStart: number;\r\n    public readonly sizeMax: number;\r\n    public readonly sizeShrinkStep: number;\r\n    public readonly sizeGrowStep: number;\r\n\r\n    public readonly spawnFreq: number;\r\n    public readonly distribBandwidth: number;\r\n\r\n    constructor(type: MOB_TYPES) {\r\n        const scale = 1 + (PROJECTILES_SPECS[type].damage as number - 0.3) / 1.8;\r\n\r\n        this.cloudTimeoutMs = 800 * scale;\r\n        this.cloudGrowMs = 200 * scale;\r\n\r\n        this.opacityGrowStep = this.opacityMax / this.cloudGrowMs;\r\n        this.opacityShrinkStep = this.opacityMax / (this.cloudTimeoutMs - this.cloudGrowMs);\r\n\r\n        this.sizeStart = 5 * scale;\r\n        this.sizeMax = 15 * scale;\r\n\r\n        this.sizeShrinkStep = this.sizeMax / (this.cloudTimeoutMs - this.cloudGrowMs);\r\n        this.sizeGrowStep = (this.sizeMax - this.sizeStart) / this.cloudGrowMs;\r\n\r\n        this.spawnFreq = Math.ceil(2 * scale * 1.2);\r\n\r\n        this.distribBandwidth = Math.ceil(3 * scale);\r\n    }\r\n\r\n}\r\n","import { PROJECTILES_SPECS } from \"../../ab-assets/missile-constants\";\r\nimport { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { ITickArgs } from \"../../events/event-args/itick-args\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { CloudVisual } from \"../../models/cloud-visual\";\r\nimport { CloudVisualSpec } from \"../../models/cloud-visual-spec\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class MissileChemtrailHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.TICK];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n\r\n        if (!this.context.isBrowserVisible) {\r\n            return;\r\n        }\r\n\r\n        const tick = ev.args as ITickArgs;\r\n\r\n        for (const missile of this.context.state.getMissiles()) {\r\n\r\n            const cloudVisualSpec = CloudVisualSpec.getFor(missile.mobType);\r\n\r\n            if (tick.frame % cloudVisualSpec.spawnFreq === 0) {\r\n                const cloud = new CloudVisual(cloudVisualSpec);\r\n                cloud.pos = new Pos(missile.pos);\r\n\r\n                const maxSpeed = PROJECTILES_SPECS[missile.mobType].maxSpeed;\r\n                const jumpX = missile.speed.y / maxSpeed * cloudVisualSpec.distribBandwidth;\r\n                const jumpY = missile.speed.x / maxSpeed * cloudVisualSpec.distribBandwidth;\r\n                cloud.pos.x += tick.frame % (cloudVisualSpec.spawnFreq * 2) === 0 ? -jumpX : jumpX;\r\n                cloud.pos.y += tick.frame % (cloudVisualSpec.spawnFreq * 2) === 0 ? jumpY : -jumpY;\r\n                this.context.state.addRocketTrailCloud(cloud);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { CHAT_TYPE } from \"../../ab-assets/chat-constants\";\r\nimport { SERVER_ERRORS, SERVER_MESSAGE_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { Error, ServerMessage } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ServerAnnouncementRenderHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.SERVER_ANNOUNCEMENT, Events.SERVER_ERROR];\r\n\r\n    constructor(private context: BrowserContext) {\r\n\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        let msg: ServerMessage;\r\n        if (ev.type === Events.SERVER_ANNOUNCEMENT) {\r\n            msg = ev.args as ServerMessage;\r\n        } else {\r\n            const error = ev.args as Error;\r\n            msg = { type: SERVER_MESSAGE_TYPES.ALERT, duration: 4000 } as ServerMessage;\r\n\r\n            switch (error.error) {\r\n                case SERVER_ERRORS.ACCOUNT_BANNED:\r\n                    msg.text = \"Account is banned\";\r\n                    break;\r\n                case SERVER_ERRORS.AFK_DISCONNECT:\r\n                    msg.text = \"Disconnected, away too long.\";\r\n                    break;\r\n                case SERVER_ERRORS.ALREADY_LOGGED_IN:\r\n                    msg.text = \"You are already logged in.\";\r\n                    break;\r\n                case SERVER_ERRORS.CHAT_SPAMMING:\r\n                    msg.text = \"Don't spam!\";\r\n                    break;\r\n                case SERVER_ERRORS.FLAG_CHANGE_TOO_FAST:\r\n                    msg.text = \"Wait before changing your flag.\";\r\n                    break;\r\n                case SERVER_ERRORS.FORBIDDEN_TO_CHANGE_PLANE_IN_BTR:\r\n                    msg.text = \"Can't change aircraft in BTR.\";\r\n                    break;\r\n                case SERVER_ERRORS.GLOBAL_BAN:\r\n                    msg.text = \"You have been banned.\";\r\n                    break;\r\n                case SERVER_ERRORS.INCORRECT_PROTOCOL:\r\n                    msg.text = \"Your client uses an incorrect protocol version.\";\r\n                    break;\r\n                case SERVER_ERRORS.INVALID_LOGIN_DATA:\r\n                    msg.text = \"Invalid login data.\";\r\n                    break;\r\n                case SERVER_ERRORS.NOT_ENOUGH_UPGRADES:\r\n                    msg.text = \"Not enough upgrades\";\r\n                    break;\r\n                case SERVER_ERRORS.PACKET_FLOODING_BAN:\r\n                    msg.text = \"Banned for packet flooding.\";\r\n                    break;\r\n                case SERVER_ERRORS.PACKET_FLOODING_DISCONNECT:\r\n                    msg.text = \"Disconnected for packet flooding.\";\r\n                    break;\r\n                case SERVER_ERRORS.PLAYER_KICKED:\r\n                    msg.text = \"You have been kicked.\";\r\n                    break;\r\n                case SERVER_ERRORS.REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN:\r\n                    msg.text = \"Two seconds of inactivity and full health required to respawn.\";\r\n                    break;\r\n                case SERVER_ERRORS.REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE:\r\n                    msg.text = \"Two seconds of inactivity and full health required to spectate.\";\r\n                    break;\r\n                case SERVER_ERRORS.UNKNOWN_COMMAND:\r\n                    msg.text = \"Unknown command\";\r\n                    break;\r\n                case SERVER_ERRORS.UNKNOWN_ERROR:\r\n                    msg.text = \"Unknown error\";\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n        this.context.renderer.showServerMessage(msg.type, msg.duration, msg.text);\r\n\r\n        // also show server messages in the chat.\r\n        const div = document.createElement(\"div\");\r\n        div.innerHTML = msg.text;\r\n        msg.text = div.innerText; // remove html elements\r\n        this.context.renderer.addChat(null, \"Server\", CHAT_TYPE.CHAT, msg.text, null);\r\n    }\r\n}\r\n","import { SERVER_MESSAGE_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { PlayerKill } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nconst KILL_MSG_DURATION_MS = 1000;\r\n\r\nexport class ShakeAndShowMessageOnKillHandler implements IMessageHandler {\r\n    public handles = [Events.PLAYER_KILLED];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerKill;\r\n\r\n        if (!msg.killer) {\r\n            // spectate or switching aircraft\r\n            return;\r\n        }\r\n\r\n        let text = \"\";\r\n        if (msg.killer === this.context.state.id) {\r\n            text = `You have destroyed ${this.context.state.getPlayerName(msg.id)}`;\r\n        } else if (msg.id === this.context.state.id) {\r\n            text = `Destroyed by ${this.context.state.getPlayerName(msg.killer)}`;\r\n            this.context.renderer.renderKill();\r\n        }\r\n\r\n        if (text) {\r\n            this.context.renderer.showServerMessage(SERVER_MESSAGE_TYPES.INFO, KILL_MSG_DURATION_MS, text);\r\n        }\r\n    }\r\n}\r\n","import { PlayerHit } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { BrowserContext } from \"../../browser-impl/browser-context\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nexport class ShakeOnHitHandler implements IMessageHandler {\r\n    public handles = [Events.PLAYER_HIT];\r\n\r\n    constructor(private context: BrowserContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n        const msg = ev.args as PlayerHit;\r\n\r\n        if (msg.players.find((x) => x.id === this.context.state.id)) {\r\n            this.context.renderer.renderHit();\r\n        }\r\n    }\r\n}\r\n","import { Events } from \"../events/constants\";\r\nimport { IBrowserVisibilityArgs } from \"../events/event-args/browser-visibility-args\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { BrowserContext } from \"./browser-context\";\r\n\r\n/**\r\n * specific initializations needed for using the app in the browser\r\n */\r\nexport class BrowserInitialization {\r\n\r\n    constructor(private context: BrowserContext) {\r\n\r\n    }\r\n\r\n    public detectVisibilityChange() {\r\n        let hidden: string;\r\n        let visibilityChange: string;\r\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\r\n            hidden = \"hidden\";\r\n            visibilityChange = \"visibilitychange\";\r\n        } else if (typeof (document as any).msHidden !== \"undefined\") {\r\n            hidden = \"msHidden\";\r\n            visibilityChange = \"msvisibilitychange\";\r\n        } else if (typeof (document as any).webkitHidden !== \"undefined\") {\r\n            hidden = \"webkitHidden\";\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n        }\r\n\r\n        const handleVisibilityChange = () => {\r\n            const isVisible = !document[hidden];\r\n            // this can't be published to the eventqueue, because the tick interval won't fire\r\n            // if the browserwindow isn't visible (in most browsers).\r\n            this.context.setBrowserVisibility(isVisible);\r\n        };\r\n\r\n        document.addEventListener(visibilityChange, handleVisibilityChange, false);\r\n\r\n        // set initial value\r\n        this.context.isBrowserVisible = !document[hidden];\r\n    }\r\n\r\n    public throttleZoom() {\r\n        // throttle Ctrl+Scroll to prevent flooding\r\n        const zoomThrottleStopwatch = new StopWatch();\r\n        document.getElementById(\"root\").addEventListener(\"wheel\", (e) => {\r\n            if (e.ctrlKey) {\r\n                if (zoomThrottleStopwatch.elapsedSeconds < 1) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                zoomThrottleStopwatch.start();\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { ILogger } from \"../app-context/ilogger\";\r\n\r\nexport class BrowserLogger implements ILogger {\r\n    public debug(msg: string, ...args: any[]): void {\r\n        if ((window as any).debug) {\r\n            this.log(msg, ...args);\r\n        }\r\n    }\r\n    public info(msg: string, ...args: any[]): void {\r\n        this.log(msg, ...args);\r\n    }\r\n    public warn(msg: string, ...args: any[]): void {\r\n        this.log(msg, ...args);\r\n    }\r\n    public error(msg: string, ...args: any[]): void {\r\n        this.log(msg, ...args);\r\n    }\r\n    public fatal(msg: string, ...args: any[]): void {\r\n        this.log(msg, ...args);\r\n    }\r\n    public log(msg: string, ...args: any[]) {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(msg, ...args);\r\n    }\r\n\r\n}\r\n","import { IWebSocketFactory } from \"../app-context/iwebsocket-factory\";\r\n\r\nexport class BrowserWebSocketFactory implements IWebSocketFactory {\r\n    public create(url: string): WebSocket {\r\n        return new WebSocket(url);\r\n    }\r\n}\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { Pos } from \"../models/pos\";\r\n\r\nconst SHAKE_MARGIN = 20;\r\nconst SHAKE_MARGIN_CSS = `-${SHAKE_MARGIN}px`;\r\nconst SHAKE_MARGIN_DOUBLE = SHAKE_MARGIN * 2;\r\n\r\nexport class ClippedView {\r\n\r\n    private clipRectangle: Pos[];\r\n    private lastWidth: number;\r\n    private lastHeight: number;\r\n    private zoom: number;\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public setClip(canvas: HTMLCanvasElement): void {\r\n\r\n        // add margin of 25 on each side to allow for shaking\r\n        canvas.width = window.innerWidth + SHAKE_MARGIN_DOUBLE;\r\n        canvas.height = window.innerHeight + SHAKE_MARGIN_DOUBLE;\r\n        canvas.style.left = SHAKE_MARGIN_CSS;\r\n        canvas.style.top = SHAKE_MARGIN_CSS;\r\n\r\n        const zoom = this.context.settings.zoom;\r\n\r\n        if (this.lastWidth !== canvas.width || this.lastHeight !== canvas.height) {\r\n            const screenSizeX = canvas.width / zoom;\r\n            const screenSizeY = canvas.height / zoom;\r\n            this.context.connection.sendScreenSize(screenSizeX, screenSizeY);\r\n            this.lastWidth = canvas.width;\r\n            this.lastHeight = canvas.height;\r\n\r\n            // this is for sending the correct initial values\r\n            this.context.settings.horizonX = screenSizeX / 2;\r\n            this.context.settings.horizonY = screenSizeY / 2;\r\n        }\r\n\r\n        const myPos = this.context.state.getFocusedPlayer().pos;\r\n        const halfWidth = (canvas.width / zoom) / 2;\r\n        const halfHeight = (canvas.height / zoom) / 2;\r\n        this.clipRectangle = [\r\n            new Pos(myPos.x - halfWidth, myPos.y - halfHeight),\r\n            new Pos(myPos.x + halfWidth, myPos.y + halfHeight),\r\n        ];\r\n\r\n        this.zoom = zoom;\r\n    }\r\n\r\n    public isVisible(pos: IPos): boolean {\r\n        return this.clipRectangle[0].x < pos.x && this.clipRectangle[1].x > pos.x &&\r\n            this.clipRectangle[0].y < pos.y && this.clipRectangle[1].y > pos.y;\r\n    }\r\n\r\n    public translate(pos: IPos): Pos {\r\n        return new Pos((pos.x - this.clipRectangle[0].x) * this.zoom, (pos.y - this.clipRectangle[0].y) * this.zoom);\r\n    }\r\n\r\n    public scale(x: number) {\r\n        return x * this.zoom;\r\n    }\r\n\r\n    public getClipRectangle(): Pos[] {\r\n        // make a copy to prevent altering\r\n        return [\r\n            new Pos(this.clipRectangle[0]),\r\n            new Pos(this.clipRectangle[1]),\r\n        ];\r\n    }\r\n\r\n    public getClipSize(): Pos {\r\n        return new Pos(this.lastWidth, this.lastHeight);\r\n    }\r\n}\r\n","import { MAP_SIZE } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\ndeclare const constants: any;\r\n\r\nconst GRID_DISTANCE = 100;\r\n// the background image is 4x too small for performance reasons\r\nconst MAP_SCALE = .25;\r\n\r\nexport class BackgroundRenderer {\r\n    private backgroundImage: HTMLImageElement;\r\n    constructor(private clip: ClippedView, private context: IContext) {\r\n        this.backgroundImage = document.getElementById(\"map\") as HTMLImageElement;\r\n    }\r\n\r\n    public renderBackground(context: CanvasRenderingContext2D): void {\r\n\r\n        const clipRect = this.clip.getClipRectangle();\r\n\r\n        // draw background if using bitmaps only\r\n        if (this.context.settings.useBitmaps) {\r\n            const clipSize = new Pos(clipRect[1].x - clipRect[0].x, clipRect[1].y - clipRect[0].y);\r\n            context.drawImage(this.backgroundImage,\r\n                (MAP_SIZE.WIDTH / 2 + clipRect[0].x) * MAP_SCALE, (MAP_SIZE.HEIGHT / 2 + clipRect[0].y) * MAP_SCALE,\r\n                clipSize.x * MAP_SCALE, clipSize.y * MAP_SCALE,\r\n                0, 0, this.clip.scale(clipSize.x), this.clip.scale(clipSize.y));\r\n        }\r\n\r\n        // draw a grid\r\n        context.fillStyle = constants.BACKGROUND_GRID_COLOR;\r\n        const gridDistance = this.clip.scale(GRID_DISTANCE);\r\n        for (let y = clipRect[0].y - (clipRect[0].y % gridDistance); y < clipRect[1].y; y += gridDistance) {\r\n            for (let x = clipRect[0].x - (clipRect[0].x % gridDistance); x < clipRect[1].x; x += gridDistance) {\r\n                const pos = this.clip.translate(new Pos(x, y));\r\n                context.fillRect(pos.x, pos.y, 1, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\n\r\nexport class DebugInfoRenderer {\r\n    private debugPanel: HTMLDivElement;\r\n    private skippedFramesElement: HTMLSpanElement;\r\n\r\n    constructor(private context: IContext) {\r\n        this.debugPanel = document.getElementById(\"debugPanel\") as HTMLDivElement;\r\n    }\r\n\r\n    public render(): void {\r\n        if (!this.context.settings.shouldShowDebugInfo) {\r\n            return;\r\n        }\r\n\r\n        const lag = this.context.connection.getLagMs();\r\n        const lagText = lag.toLocaleString(\"en-us\", {\r\n            maximumFractionDigits: 2,\r\n            minimumFractionDigits: 2,\r\n        });\r\n\r\n        const skippedFramesText = this.context.state.skippedFrames.toString();\r\n\r\n        this.debugPanel.innerHTML = `Lag: ${lagText}\\nSkipped frames: ${skippedFramesText}\\n` +\r\n            `My id: ${this.context.state.id}\\n` +\r\n            `GameType: ${this.context.gameType}`;\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\ndeclare const constants: any;\r\n\r\nexport class EffectsRenderer {\r\n    constructor(private context: IContext, private clip: ClippedView) {\r\n\r\n    }\r\n\r\n    public renderExplosions(context: CanvasRenderingContext2D) {\r\n        context.fillStyle = constants.EFFECTS_EXPLOSION_COLOR;\r\n        for (const explosion of this.context.state.getActiveExplosions()) {\r\n            const pos = explosion.pos;\r\n            if (!pos) {\r\n                continue;\r\n            }\r\n            if (this.clip.isVisible(pos)) {\r\n                const clipPos = this.clip.translate(pos);\r\n                context.beginPath();\r\n                context.arc(clipPos.x, clipPos.y, this.clip.scale(explosion.size), 0, 2 * Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n\r\n        // kills\r\n        context.fillStyle = constants.EFFECTS_KILL_COLOR;\r\n        for (const kill of this.context.state.getActiveKills()) {\r\n            const pos = kill.pos;\r\n            if (!pos) {\r\n                continue;\r\n            }\r\n            if (this.clip.isVisible(pos)) {\r\n                const clipPos = this.clip.translate(pos);\r\n                context.beginPath();\r\n                context.arc(clipPos.x, clipPos.y, this.clip.scale(kill.size), 0, 2 * Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n\r\n        // farts\r\n        context.fillStyle = constants.EFFECTS_FART_COLOR;\r\n        for (const fart of this.context.state.getActiveFarts()) {\r\n            if (!fart.player) {\r\n                continue;\r\n            }\r\n            const pos = fart.player.pos;\r\n            if (!pos) {\r\n                continue;\r\n            }\r\n\r\n            if (this.clip.isVisible(pos)) {\r\n                const clipPos = this.clip.translate(pos);\r\n                context.beginPath();\r\n                context.arc(clipPos.x, clipPos.y, this.clip.scale(fart.size), 0, 2 * Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n\r\n        // missile clouds\r\n        for (const cloud of this.context.state.getActiveRocketTrailClouds()) {\r\n            const pos = cloud.pos;\r\n            if (!pos) {\r\n                continue;\r\n            }\r\n            if (this.clip.isVisible(pos)) {\r\n                const opacity = cloud.opacity;\r\n                if (opacity === 0) {\r\n                    continue;\r\n                }\r\n                context.fillStyle = `rgba(${constants.EFFECTS_MISSILE_BASE_COLOR}, ${opacity})`;\r\n                const clipPos = this.clip.translate(pos);\r\n                context.beginPath();\r\n                const cloudSize = this.clip.scale(cloud.size);\r\n                context.arc(clipPos.x, clipPos.y, cloudSize, 0, 2 * Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n    }\r\n}\r\n","export const FLAG_DEFAULT_POSITION = {\r\n    blue: { x: -9670, y: -1470 },\r\n    red: { x: 8600, y: -940 },\r\n};\r\n","import { FLAG_DEFAULT_POSITION } from \"../../ab-assets/ctf-constants\";\r\nimport { CTF_FLAG_STATE, CTF_TEAMS } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { CtfTeam } from \"../../models/ctf-team\";\r\nimport { IPos } from \"../../models/ipos\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\nconst CTF_BASE_SIZE = 120;\r\nconst CTF_BASE_HALF_SIZE = CTF_BASE_SIZE / 2;\r\nconst CTF_BASE_LINE_WIDTH = 8;\r\n\r\ndeclare const constants: any;\r\n\r\nexport class FlagRenderer {\r\n    private readonly blueFlag: HTMLImageElement;\r\n    private readonly redFlag: HTMLImageElement;\r\n\r\n    constructor(private context: IContext, private clip: ClippedView) {\r\n        this.blueFlag = document.getElementById(\"blue-flag\") as HTMLImageElement;\r\n        this.redFlag = document.getElementById(\"red-flag\") as HTMLImageElement;\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n        const redTeam = this.context.state.getCtfTeam(CTF_TEAMS.RED);\r\n        const blueTeam = this.context.state.getCtfTeam(CTF_TEAMS.BLUE);\r\n\r\n        this.renderFlag(redTeam, this.redFlag, ctx);\r\n        this.renderFlag(blueTeam, this.blueFlag, ctx);\r\n\r\n        this.renderBase(ctx, FLAG_DEFAULT_POSITION.blue, constants.CTF_BLUE_TEAM_COLOR);\r\n        this.renderBase(ctx, FLAG_DEFAULT_POSITION.red, constants.CTF_RED_TEAM_COLOR);\r\n    }\r\n\r\n    private renderBase(ctx: CanvasRenderingContext2D, pos: IPos, color: string) {\r\n        const leftUpper = new Pos(pos.x - CTF_BASE_HALF_SIZE, pos.y - CTF_BASE_HALF_SIZE);\r\n        const rightBottom = new Pos(pos.x + CTF_BASE_HALF_SIZE, pos.y + CTF_BASE_HALF_SIZE);\r\n        if (!this.clip.isVisible(leftUpper) && !this.clip.isVisible(rightBottom)) {\r\n            return;\r\n        }\r\n\r\n        const scaledBasePos = this.clip.translate(pos);\r\n        const scaledBaseSize = this.clip.scale(CTF_BASE_SIZE);\r\n        const halfBaseSize = scaledBaseSize / 2;\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = this.clip.scale(CTF_BASE_LINE_WIDTH);\r\n        ctx.lineJoin = \"round\";\r\n        ctx.strokeRect(\r\n            scaledBasePos.x - halfBaseSize, scaledBasePos.y - halfBaseSize,\r\n            scaledBaseSize, scaledBaseSize);\r\n    }\r\n\r\n    private renderFlag(team: CtfTeam, flag: HTMLImageElement, ctx: CanvasRenderingContext2D) {\r\n        let pos = team.flagPos;\r\n\r\n        if (!pos) {\r\n            return;\r\n        }\r\n\r\n        let isFlagVisible: boolean;\r\n        let isFlagBeingCarried = false;\r\n        if (team.flagState === CTF_FLAG_STATE.DYNAMIC) {\r\n            // flag is on the move\r\n            const carrier = this.context.state.getPlayerById(team.flagTakenById);\r\n            if (carrier) {\r\n                pos = carrier.mostReliablePos;\r\n                isFlagVisible = carrier.isVisibleOnScreen && this.clip.isVisible(pos);\r\n                isFlagBeingCarried = true;\r\n            }\r\n        } else {\r\n            isFlagVisible = this.clip.isVisible(pos);\r\n        }\r\n\r\n        if (isFlagVisible) {\r\n            const clippedFlagPos = this.clip.translate(pos);\r\n            const scaledWidth = this.clip.scale(flag.width);\r\n            const scaledHeight = this.clip.scale(flag.height);\r\n            ctx.drawImage(flag, 0, 0, flag.width, flag.height,\r\n                clippedFlagPos.x - scaledWidth / 2 + (isFlagBeingCarried ? scaledWidth / 2 : 0),\r\n                clippedFlagPos.y - scaledHeight / 2 - (isFlagBeingCarried ? scaledHeight / 2 : 0),\r\n                scaledWidth, scaledHeight);\r\n        }\r\n    }\r\n}\r\n","import { FLAG_DEFAULT_POSITION } from \"../../ab-assets/ctf-constants\";\r\nimport { CTF_FLAG_STATE, CTF_TEAMS, GAME_TYPES, MAP_SIZE, PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { CtfTeam } from \"../../models/ctf-team\";\r\nimport { IPos } from \"../../models/ipos\";\r\nimport { Pos } from \"../../models/pos\";\r\n\r\nconst MARKER_SIZE = 3;\r\nconst MY_RECT_WIDTH = 15;\r\nconst MY_RECT_HEIGHT = 10;\r\n\r\nconst HALF_MAP_WIDTH = MAP_SIZE.WIDTH / 2;\r\nconst HALF_MAP_HEIGHT = MAP_SIZE.HEIGHT / 2;\r\n\r\nconst CTF_BASE_SIZE = 4;\r\nconst CTF_FLAG_SIZE = 10;\r\n\r\nconst HIGHLIGH_SIZE = 2 * MARKER_SIZE;\r\n\r\ndeclare const constants: any;\r\n\r\nexport class MinimapRenderer {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    private canvasContext: CanvasRenderingContext2D;\r\n    private readonly blueFlag: HTMLImageElement;\r\n    private readonly redFlag: HTMLImageElement;\r\n\r\n    private playerToHighlight: number;\r\n\r\n    constructor(private context: IContext) {\r\n        this.canvas = document.getElementById(\"minimap-canvas\") as HTMLCanvasElement;\r\n        this.canvasContext = this.canvas.getContext(\"2d\");\r\n        this.blueFlag = document.getElementById(\"blue-flag\") as HTMLImageElement;\r\n        this.redFlag = document.getElementById(\"red-flag\") as HTMLImageElement;\r\n    }\r\n\r\n    public highlight(playerId: number) {\r\n        this.playerToHighlight = playerId;\r\n    }\r\n\r\n    public render(): void {\r\n        this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        const scaleX = this.canvas.width / MAP_SIZE.WIDTH;\r\n        const scaleY = this.canvas.height / MAP_SIZE.HEIGHT;\r\n\r\n        const myId = this.context.state.id;\r\n\r\n        for (const player of this.context.state.getPlayers()) {\r\n            if (player.status === PLAYER_STATUS.INACTIVE) {\r\n                continue;\r\n            }\r\n\r\n            const pos = new Pos(\r\n                (player.mostReliablePos.x + HALF_MAP_WIDTH) * scaleX,\r\n                (player.mostReliablePos.y + HALF_MAP_HEIGHT) * scaleY);\r\n\r\n            if (player.id === myId) {\r\n                this.canvasContext.strokeStyle = constants.MINIMAP_HIGHLIGHT_COLOR;\r\n                this.canvasContext.strokeRect(\r\n                    pos.x - MY_RECT_WIDTH / 2, pos.y - MY_RECT_HEIGHT / 2,\r\n                    MY_RECT_WIDTH, MY_RECT_HEIGHT);\r\n            } else {\r\n                let fillStyle = constants.MINIMAP_FFA_PLAYER_COLOR;\r\n                if (player.team === CTF_TEAMS.BLUE) {\r\n                    fillStyle = constants.CTF_BLUE_TEAM_COLOR;\r\n                } else if (player.team === CTF_TEAMS.RED) {\r\n                    fillStyle = constants.CTF_RED_TEAM_COLOR;\r\n                }\r\n                switch (player.ranking) {\r\n                    case 1:\r\n                        fillStyle = constants.MINIMAP_PLAYER_1_COLOR;\r\n                        break;\r\n                    case 2:\r\n                        fillStyle = constants.MINIMAP_PLAYER_2_COLOR;\r\n                        break;\r\n                    case 3:\r\n                        fillStyle = constants.MINIMAP_PLAYER_3_COLOR;\r\n                        break;\r\n                }\r\n\r\n                this.canvasContext.fillStyle = fillStyle;\r\n                this.canvasContext.beginPath();\r\n                this.canvasContext.arc(pos.x, pos.y, MARKER_SIZE, 0, 2 * Math.PI);\r\n                this.canvasContext.fill();\r\n\r\n                if (player.id === this.playerToHighlight) {\r\n                    this.canvasContext.strokeStyle = constants.MINIMAP_HIGHLIGHT_COLOR;\r\n                    this.canvasContext.beginPath();\r\n                    this.canvasContext.arc(pos.x, pos.y, HIGHLIGH_SIZE, 0, 2 * Math.PI);\r\n                    this.canvasContext.stroke();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.context.gameType === GAME_TYPES.CTF) {\r\n\r\n            const redTeam = this.context.state.getCtfTeam(CTF_TEAMS.RED);\r\n            const blueTeam = this.context.state.getCtfTeam(CTF_TEAMS.BLUE);\r\n\r\n            this.renderFlag(redTeam, this.redFlag, this.canvasContext,\r\n                FLAG_DEFAULT_POSITION.red, constants.CTF_RED_TEAM_COLOR);\r\n            this.renderFlag(blueTeam, this.blueFlag, this.canvasContext,\r\n                FLAG_DEFAULT_POSITION.blue, constants.CTF_BLUE_TEAM_COLOR);\r\n        }\r\n    }\r\n\r\n    private renderFlag(\r\n        team: CtfTeam, flag: HTMLImageElement,\r\n        ctx: CanvasRenderingContext2D, basePos: IPos, color: string) {\r\n\r\n        let pos = team.flagPos;\r\n\r\n        if (!pos) {\r\n            return;\r\n        }\r\n\r\n        if (team.flagState === CTF_FLAG_STATE.DYNAMIC) {\r\n            // flag is on the move\r\n            const carrier = this.context.state.getPlayerById(team.flagTakenById);\r\n            if (carrier) {\r\n                pos = carrier.mostReliablePos;\r\n            }\r\n        }\r\n\r\n        const scaleX = this.canvas.width / MAP_SIZE.WIDTH;\r\n        const scaleY = this.canvas.height / MAP_SIZE.HEIGHT;\r\n\r\n        const scaledPos = new Pos(\r\n            (pos.x + HALF_MAP_WIDTH) * scaleX,\r\n            (pos.y + HALF_MAP_HEIGHT) * scaleY);\r\n\r\n        const ctfFlagHeight = (CTF_FLAG_SIZE / flag.width) * flag.height;\r\n\r\n        ctx.drawImage(flag, 0, 0, flag.width, flag.height,\r\n            scaledPos.x - CTF_FLAG_SIZE / 2, scaledPos.y - ctfFlagHeight / 2, CTF_FLAG_SIZE, ctfFlagHeight);\r\n\r\n        if (!pos.equals(basePos)) {\r\n            const scaledBasePos = new Pos(\r\n                (basePos.x + HALF_MAP_WIDTH) * scaleX,\r\n                (basePos.y + HALF_MAP_HEIGHT) * scaleY);\r\n            this.canvasContext.strokeStyle = color;\r\n            this.canvasContext.strokeRect(\r\n                scaledBasePos.x - CTF_BASE_SIZE / 2, scaledBasePos.y - CTF_BASE_SIZE / 2,\r\n                CTF_BASE_SIZE, CTF_BASE_SIZE);\r\n        }\r\n    }\r\n}\r\n","import { PROJECTILES_SPECS } from \"../../ab-assets/missile-constants\";\r\nimport { GAME_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\nconst MISSILE_IMAGE_BASE_SCALE = 1;\r\n\r\ndeclare const constants: any;\r\n\r\nexport class MissilesRenderer {\r\n\r\n    private readonly missileImage: HTMLImageElement;\r\n\r\n    constructor(private context: IContext, private clip: ClippedView) {\r\n        this.missileImage = document.getElementById(\"missile\") as HTMLImageElement;\r\n    }\r\n\r\n    public renderMissiles(context: CanvasRenderingContext2D) {\r\n        context.fillStyle = constants.MISSILE_COLOR;\r\n        for (const missile of this.context.state.getMissiles()) {\r\n            const pos = missile.pos;\r\n            if (!pos) {\r\n                continue;\r\n            }\r\n\r\n            if (!this.clip.isVisible(pos)) {\r\n                continue;\r\n            }\r\n\r\n            const clipPos = this.clip.translate(pos);\r\n            const missileScale = 1 + (PROJECTILES_SPECS[missile.mobType].damage as number - 0.3) / 1.8;\r\n\r\n            if (this.context.settings.useBitmaps) {\r\n                context.translate(clipPos.x, clipPos.y);\r\n                context.rotate(missile.rot);\r\n\r\n                let shouldRestoreAlphs = false;\r\n                if (this.context.gameType === GAME_TYPES.CTF && missile.team) {\r\n                    if (missile.team === this.context.state.team && missile.ownerId !== this.context.state.id) {\r\n                        // show friendly missiles as transparent\r\n                        context.globalAlpha = 0.4;\r\n                        shouldRestoreAlphs = true;\r\n                    }\r\n                }\r\n\r\n                const targetWidth = this.clip.scale(this.missileImage.width *\r\n                    missileScale * MISSILE_IMAGE_BASE_SCALE);\r\n                const targetHeight = this.clip.scale(this.missileImage.height *\r\n                    missileScale * MISSILE_IMAGE_BASE_SCALE);\r\n\r\n                context.drawImage(this.missileImage, 0, 0, this.missileImage.width, this.missileImage.height,\r\n                    -targetWidth / 2, -targetHeight / 2, targetWidth, targetHeight);\r\n\r\n                if (shouldRestoreAlphs) {\r\n                    context.globalAlpha = 1;\r\n                }\r\n\r\n                context.rotate(-missile.rot);\r\n                context.translate(-clipPos.x, -clipPos.y);\r\n            } else {\r\n                context.beginPath();\r\n                context.arc(clipPos.x, clipPos.y, this.clip.scale(4 *  missileScale), 0, 2 * Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\nexport class PathRenderer {\r\n\r\n    constructor(private clip: ClippedView, private context: IContext) {\r\n    }\r\n\r\n    public renderPath(context: CanvasRenderingContext2D) {\r\n        const path = this.context.botstate.path;\r\n        if (path && path.length > 0) {\r\n            let count = 0;\r\n            context.strokeStyle = \"orange\";\r\n            context.lineWidth = 2;\r\n            context.beginPath();\r\n\r\n            for (const pos of path) {\r\n                const clipPos = this.clip.translate(pos);\r\n                if (count === 0) {\r\n                    context.moveTo(clipPos.x, clipPos.y);\r\n                } else {\r\n                    context.lineTo(clipPos.x, clipPos.y);\r\n                }\r\n                context.stroke();\r\n\r\n                if (count === 1) {\r\n                    context.font = \"16px 'Courier New'\"\r\n                    context.fillStyle = \"white\";\r\n                    context.fillText(\"dist: \" + this.context.botstate.distanceToTarget, clipPos.x, clipPos.y);\r\n                }\r\n\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { CTF_TEAMS, FLAGS_CODE_TO_ISO, PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Player } from \"../../models/player\";\r\n\r\nexport class PlayerListRenderer {\r\n\r\n    private listElement: HTMLTableElement;\r\n\r\n    constructor(private context: IContext) {\r\n        this.listElement = document.getElementById(\"player-list\") as HTMLTableElement;\r\n    }\r\n\r\n    public render(): void {\r\n        const players = this.context.state.getPlayers();\r\n\r\n        players.sort((a: Player, b: Player) => {\r\n            const ar = a.ranking || Number.MAX_SAFE_INTEGER;\r\n            const br = b.ranking || Number.MAX_SAFE_INTEGER;\r\n            return ar - br;\r\n        });\r\n\r\n        let rowCount = 0;\r\n        for (const player of players) {\r\n\r\n            if (player.status === PLAYER_STATUS.INACTIVE && player.name === \"Server\") {\r\n                continue;\r\n            }\r\n\r\n            let row = this.listElement.rows[rowCount];\r\n            let cellPos: HTMLTableDataCellElement;\r\n            let cellFlag: HTMLTableDataCellElement;\r\n            let cellName: HTMLTableDataCellElement;\r\n            let cellScore: HTMLTableDataCellElement;\r\n            let flagImage: HTMLImageElement;\r\n\r\n            if (row) {\r\n                cellPos = row.cells[0];\r\n                cellFlag = row.cells[1];\r\n                cellName = row.cells[2];\r\n                cellScore = row.cells[3];\r\n                flagImage = cellFlag.firstElementChild as HTMLImageElement;\r\n            } else {\r\n                row = this.listElement.insertRow();\r\n                cellPos = row.insertCell();\r\n                cellPos.className = \"playerlist-pos\";\r\n                cellFlag = row.insertCell();\r\n                cellFlag.className = \"playerlist-flag\";\r\n                cellName = row.insertCell();\r\n                cellName.className = \"playerlist-name player-name\";\r\n                cellScore = row.insertCell();\r\n                cellScore.className = \"playerlist-score\";\r\n\r\n                flagImage = document.createElement(\"img\") as HTMLImageElement;\r\n                flagImage.width = 24;\r\n                flagImage.height = 24;\r\n                cellFlag.appendChild(flagImage);\r\n            }\r\n\r\n            row.className = player.status === PLAYER_STATUS.INACTIVE ? \"playerlist-player-inactive\" : \"\";\r\n\r\n            if (player.team === CTF_TEAMS.BLUE) {\r\n                row.className += \" playerlist-team-blue\";\r\n            } else if (player.team === CTF_TEAMS.RED) {\r\n                row.className += \" playerlist-team-red\";\r\n            }\r\n\r\n            const ranking = player.ranking || rowCount;\r\n            cellPos.innerText = `${ranking}. `;\r\n\r\n            const flag = FLAGS_CODE_TO_ISO[\"\" + player.flag] || \"JOLLY\";\r\n\r\n            flagImage.src = \"flags/\" + flag + \".png\";\r\n\r\n            if (player.level) {\r\n                cellName.innerText = `${player.name} [${player.level}]`;\r\n            } else {\r\n                cellName.innerText = player.name;\r\n            }\r\n            cellName.dataset.name = encodeURI(player.name);\r\n            cellName.dataset.id = player.id.toString();\r\n            cellScore.innerText = `${player.score}`;\r\n\r\n            rowCount++;\r\n        }\r\n\r\n        while (this.listElement.rows[rowCount]) {\r\n            const row = this.listElement.rows[rowCount];\r\n            row.remove();\r\n        }\r\n    }\r\n}\r\n","import { SHIPS_SPECS, SHIPS_TYPES } from \"../../ab-assets/ships-constants\";\r\nimport { COUNTRY_NAMES, CTF_TEAMS, FLAGS_CODE_TO_ISO, PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { StopWatch } from \"../../helpers/stopwatch\";\r\nimport { Player } from \"../../models/player\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\n// health/energy colors\r\nconst HEALTH_ENERGY_BARS_RADIUS = 75;\r\nconst HEALTH_ENERGY_BARS_WIDTH = 8;\r\nconst SHIELD_INFERNO_BARS_WIDTH = 2 * HEALTH_ENERGY_BARS_WIDTH;\r\n\r\nconst SHIELD_INFERNO_RADIUS = HEALTH_ENERGY_BARS_RADIUS\r\n    - (HEALTH_ENERGY_BARS_WIDTH / 2)\r\n    - (SHIELD_INFERNO_BARS_WIDTH / 2);\r\n\r\nconst FLAG_WIDTH = 24;\r\nconst FLAG_MARGIN_LEFT = 10;\r\nconst FONT_SIZE = 11;\r\nconst FLAG_PADDING_TOP = 4; // diff between length and width / 2\r\n\r\nconst SAY_MARGIN = 20;\r\nconst SAY_HEIGHT = 40;\r\nconst SAY_DURATION_SECONDS = 5;\r\nconst SAY_DISTANCE_FROM_AIRCRAFT = 80;\r\n\r\nconst INVISIBLE_PROWLER_BLUR_WIDTH = 10;\r\nconst PROWLER_RADAR_CIRCLE_RADIUS = 300;\r\n\r\ndeclare const constants: any;\r\n\r\nexport class PlayersRenderer {\r\n\r\n    private images: {\r\n        raptor: HTMLImageElement,\r\n        spirit: HTMLImageElement,\r\n        mohawk: HTMLImageElement,\r\n        tornado: HTMLImageElement,\r\n        prowler: HTMLImageElement,\r\n    };\r\n\r\n    private flagImages: any = {};\r\n\r\n    private saysToSay: { playerId: number, msg: string, sw: StopWatch }[] = [];\r\n\r\n    constructor(private context: IContext, private clip: ClippedView) {\r\n        this.images = {\r\n            mohawk: document.getElementById(\"mohawk\") as HTMLImageElement,\r\n            prowler: document.getElementById(\"prowler\") as HTMLImageElement,\r\n            raptor: document.getElementById(\"raptor\") as HTMLImageElement,\r\n            spirit: document.getElementById(\"spirit\") as HTMLImageElement,\r\n            tornado: document.getElementById(\"tornado\") as HTMLImageElement,\r\n        };\r\n    }\r\n\r\n    public addSay(playerId: number, msg: string) {\r\n        this.saysToSay.push({ playerId, msg, sw: new StopWatch() });\r\n    }\r\n\r\n    public renderPlayers(context: CanvasRenderingContext2D): void {\r\n\r\n        const scaledFontSize = this.clip.scale(FONT_SIZE);\r\n        context.font = scaledFontSize + \"pt 'Tahoma'\";\r\n        const scaledFlagWidth = this.clip.scale(FLAG_WIDTH);\r\n        const scaledFlagPaddingTop = this.clip.scale(FLAG_PADDING_TOP);\r\n        const scaledFlagMarginLeft = this.clip.scale(FLAG_MARGIN_LEFT);\r\n\r\n        if (!this.flagImages.JOLLY) {\r\n            this.initFlagImages();\r\n        }\r\n\r\n        for (const player of this.context.state.getPlayers()) {\r\n\r\n            if (player.status === PLAYER_STATUS.INACTIVE) {\r\n                continue;\r\n            }\r\n\r\n            const pos = player.mostReliablePos;\r\n            const isInViewPort = pos && this.clip.isVisible(pos);\r\n            const isInvisiblyInViewPort = isInViewPort && !player.isVisibleOnScreen;\r\n            const isStealthyInViewPort = isInViewPort && player.stealthed;\r\n            const isFriendlyPlayer = player.team === this.context.state.team;\r\n\r\n            const isProwler = player.type === SHIPS_TYPES.PROWLER;\r\n            const isInvisibleProwler = isProwler && !isFriendlyPlayer && (isInvisiblyInViewPort || isStealthyInViewPort);\r\n\r\n            if (!player.isVisibleOnScreen && !isInvisibleProwler) {\r\n                continue;\r\n            }\r\n\r\n            const clipPos = this.clip.translate(pos);\r\n\r\n            // move & rotate canvas to render the aircraft\r\n            context.translate(clipPos.x, clipPos.y);\r\n\r\n            if (!isInvisibleProwler) {\r\n                context.rotate(player.rot);\r\n            } else {\r\n                // don't rotate invisible prowlers, because we don't know their rotation\r\n                // but do blur them to indicate this is prowler radar\r\n                context.filter = `blur(${INVISIBLE_PROWLER_BLUR_WIDTH}px)`;\r\n            }\r\n\r\n            this.renderAircraft(player, context, isInvisibleProwler);\r\n\r\n            if (!isInvisibleProwler) {\r\n                // rotate back and render bars\r\n                context.rotate(-player.rot);\r\n                this.renderBars(context, player);\r\n            } else {\r\n                context.filter = \"none\";\r\n            }\r\n\r\n            // draw name + flag\r\n            this.renderName(player, context,\r\n                scaledFlagWidth, scaledFlagMarginLeft, scaledFontSize, scaledFlagPaddingTop);\r\n\r\n            // render text bubble\r\n            this.renderTextBubble(player, context);\r\n\r\n            // restore canvas\r\n            context.translate(-clipPos.x, -clipPos.y);\r\n        }\r\n    }\r\n\r\n    private renderTextBubble(player: Player, context: CanvasRenderingContext2D) {\r\n        for (const say of this.saysToSay) {\r\n            if (say.playerId === player.id) {\r\n                context.fillStyle = constants.PLAYER_SAY_BACKGROUND_COLOR;\r\n                const textWidth = context.measureText(say.msg).width;\r\n                const sayLeft = textWidth / 2;\r\n                const sayTop = -this.clip.scale(SAY_DISTANCE_FROM_AIRCRAFT);\r\n                const sayMargin = this.clip.scale(SAY_MARGIN);\r\n                const sayHeight = this.clip.scale(SAY_HEIGHT);\r\n                context.fillRect(-sayLeft - sayMargin, sayTop - sayMargin,\r\n                    textWidth + sayMargin * 2, sayHeight);\r\n                context.fillStyle = constants.PLAYER_SAY_FOREGROUND_COLOR;\r\n                context.fillText(say.msg, -sayLeft, sayTop);\r\n            }\r\n        }\r\n        this.saysToSay = this.saysToSay.filter((x) => x.sw.elapsedSeconds < SAY_DURATION_SECONDS);\r\n    }\r\n\r\n    private renderName(\r\n        player: Player,\r\n        context: CanvasRenderingContext2D,\r\n        scaledFlagWidth: number,\r\n        scaledFlagMarginLeft: number,\r\n        scaledFontSize: number,\r\n        scaledFlagPaddingTop: number) {\r\n\r\n        let nameColor = this.context.settings.useBitmaps ?\r\n            constants.PLAYER_NAME_COLOR : constants.PLAYER_NAME_NOBITMAP_COLOR;\r\n        if (player.team === CTF_TEAMS.BLUE) {\r\n            nameColor = constants.PLAYER_NAME_BLUE_TEAM_COLOR;\r\n        } else if (player.team === CTF_TEAMS.RED) {\r\n            nameColor = constants.PLAYER_NAME_RED_TEAM_COLOR;\r\n        }\r\n        context.fillStyle = nameColor;\r\n\r\n        let levelPostfix = \"\";\r\n        if (player.level) {\r\n            levelPostfix = ` [${player.level}]`;\r\n        }\r\n\r\n        const name = `${player.ranking || \"?\"}. ${player.name}${levelPostfix}`;\r\n        const flagSpace = this.context.settings.useBitmaps ? scaledFlagWidth + scaledFlagMarginLeft : 0;\r\n        const nameWidth = context.measureText(name).width + flagSpace;\r\n        const left = - nameWidth / 2;\r\n        const top = this.clip.scale(70);\r\n\r\n        context.fillText(name, left, top);\r\n\r\n        if (this.context.settings.useBitmaps) {\r\n            const flag = FLAGS_CODE_TO_ISO[\"\" + player.flag] || \"JOLLY\";\r\n            const flagImage = this.flagImages[flag] as HTMLImageElement;\r\n            context.drawImage(flagImage, 0, 0, FLAG_WIDTH, FLAG_WIDTH,\r\n                left + nameWidth - scaledFlagWidth, top - scaledFlagWidth + scaledFontSize - scaledFlagPaddingTop,\r\n                scaledFlagWidth, scaledFlagWidth);\r\n        }\r\n\r\n        // removed for now per issue #29 (https://github.com/spatiebot/ab-client/issues/29)\r\n        // draw stats\r\n        // const lineHeight = this.clip.scale(20);\r\n        // context.fillStyle = constants.PLAYER_STATS_COLOR;\r\n        // const stats2 = `Score: ${player.score}; ping: ${player.ping || \"?\"} ms`;\r\n        // context.fillText(stats2, left, top + lineHeight);\r\n    }\r\n\r\n    private renderBars(context: CanvasRenderingContext2D, player: Player) {\r\n\r\n        context.strokeStyle = constants.PLAYER_HEALTH_OK_COLOR;\r\n        if (player.health < 0.3) {\r\n            context.strokeStyle = constants.PLAYER_HEALTH_DANGER_COLOR;\r\n        } else if (player.health < 0.6) {\r\n            context.strokeStyle = constants.PLAYER_HEALTH_WARN_COLOR;\r\n        }\r\n\r\n        const r = this.clip.scale(HEALTH_ENERGY_BARS_RADIUS);\r\n\r\n        context.lineWidth = this.clip.scale(HEALTH_ENERGY_BARS_WIDTH);\r\n        context.globalAlpha = player.id === this.context.state.id ? 0.8 : 0.5;\r\n\r\n        context.beginPath();\r\n        context.arc(0, 0, r, Math.PI, Math.PI + (Math.PI * player.health / 2));\r\n        context.stroke();\r\n\r\n        context.strokeStyle = constants.PLAYER_ENERGY_COLOR;\r\n        context.beginPath();\r\n        const energy = Math.max(0.01, player.energy);\r\n        context.arc(0, 0, r, 0, Math.PI * 2 - Math.PI * energy / 2, true);\r\n        context.stroke();\r\n\r\n        if (player.powerUps.inferno || player.powerUps.shield) {\r\n            context.strokeStyle = player.powerUps.shield ?\r\n                constants.PLAYER_SHIELD_COLOR : constants.PLAYER_INFERNO_COLOR;\r\n            context.beginPath();\r\n            const duration = !player.shieldOrInfernoTimer ? 1 :\r\n                Math.max(0.01, 1 - player.shieldOrInfernoTimer.timeoutFraction);\r\n\r\n            context.lineWidth = this.clip.scale(SHIELD_INFERNO_BARS_WIDTH);\r\n            const shieldR = this.clip.scale(SHIELD_INFERNO_RADIUS);\r\n            context.arc(0, 0, shieldR, Math.PI, Math.PI + (Math.PI * duration));\r\n            context.stroke();\r\n        }\r\n\r\n        context.globalAlpha = 1;\r\n    }\r\n\r\n    private renderAircraft(player: Player, context: CanvasRenderingContext2D, isInvisibleProwler: boolean) {\r\n\r\n        const aircraftSpecs = SHIPS_SPECS[player.type];\r\n\r\n        if (isInvisibleProwler) {\r\n            context.fillStyle =\r\n                player.team === CTF_TEAMS.BLUE ? constants.PLAYER_NOBITMAP_BLUE_TEAM_PROWLER_COLOR :\r\n                    player.team === CTF_TEAMS.RED ? constants.PLAYER_NOBITMAP_RED_TEAM_PROWLER_COLOR :\r\n                        constants.PLAYER_NOBITMAP_PROWLER_COLOR;\r\n            const r = this.clip.scale(PROWLER_RADAR_CIRCLE_RADIUS);\r\n            context.beginPath();\r\n            context.arc(0, 0, r, 0, 2 * Math.PI);\r\n            context.fill();\r\n        } else if (this.context.settings.useBitmaps) {\r\n            const image: HTMLImageElement = this.images[aircraftSpecs.name];\r\n            const imageScale = 1; // used to have larger images before\r\n            const targetWidth = this.clip.scale(image.width * imageScale);\r\n            const targetHeight = this.clip.scale(image.height * imageScale);\r\n            const actionX = targetWidth / 2;\r\n            const actionY = targetHeight / 2;\r\n\r\n            if (player.stealthed) {\r\n                // make prowler a ghost if stealthed\r\n                context.globalAlpha = 0.4;\r\n            }\r\n            context.drawImage(image, 0, 0, image.width, image.height, -actionX, -actionY, targetWidth, targetHeight);\r\n\r\n            context.globalAlpha = 1;\r\n\r\n        } else {\r\n            if (player.team === CTF_TEAMS.BLUE) {\r\n                context.fillStyle = player.stealthed ?\r\n                    constants.PLAYER_NOBITMAP_BLUE_TEAM_PROWLER_COLOR : constants.PLAYER_NOBITMAP_BLUE_TEAM_COLOR;\r\n            } else if (player.team === CTF_TEAMS.RED) {\r\n                context.fillStyle = player.stealthed ?\r\n                    constants.PLAYER_NOBITMAP_RED_TEAM_PROWLER_COLOR : constants.PLAYER_NOBITMAP_RED_TEAM_COLOR;\r\n            } else {\r\n                context.fillStyle = player.stealthed ?\r\n                    constants.PLAYER_NOBITMAP_PROWLER_COLOR : constants.PLAYER_NOBITMAP_COLOR;\r\n            }\r\n            const hitCircles = aircraftSpecs.collisions;\r\n            for (const hitCircle of hitCircles) {\r\n                const hitCirclePos = new Pos(this.clip.scale(hitCircle[0]), this.clip.scale(hitCircle[1]));\r\n                const r = this.clip.scale(hitCircle[2]);\r\n                context.beginPath();\r\n                context.arc(hitCirclePos.x, hitCirclePos.y, r, 0, 2 * Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n    }\r\n\r\n    private initFlagImages() {\r\n        for (const flag of Object.keys(COUNTRY_NAMES)) {\r\n            this.flagImages[flag] = document.getElementById(`flag-${flag}`);\r\n        }\r\n    }\r\n}\r\n","import { FLAG_DEFAULT_POSITION } from \"../../ab-assets/ctf-constants\";\r\nimport { CTF_FLAG_STATE, CTF_TEAMS, GAME_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Upgrades } from \"../../models/upgrades\";\r\n\r\nexport class StatsRenderer {\r\n\r\n    private scoreElement: HTMLSpanElement;\r\n    private upgradesElement: HTMLSpanElement;\r\n    private killsElement: HTMLSpanElement;\r\n    private deathsElement: HTMLSpanElement;\r\n    private upgrSpeedElement: HTMLSpanElement;\r\n    private upgrDefenseElement: HTMLSpanElement;\r\n    private upgrEnergyElement: HTMLSpanElement;\r\n    private upgrMissileElement: HTMLSpanElement;\r\n\r\n    private ctfInfo: HTMLElement;\r\n    private blueScore: HTMLSpanElement;\r\n    private blueFlagLocation: HTMLSpanElement;\r\n    private redScore: HTMLSpanElement;\r\n    private redFlagLocation: HTMLSpanElement;\r\n\r\n    constructor(private context: IContext) {\r\n        this.scoreElement = document.getElementById(\"stats-score\") as HTMLSpanElement;\r\n        this.upgradesElement = document.getElementById(\"stats-upgrades\") as HTMLSpanElement;\r\n        this.killsElement = document.getElementById(\"stats-kills\") as HTMLSpanElement;\r\n        this.deathsElement = document.getElementById(\"stats-deaths\") as HTMLSpanElement;\r\n        this.upgrSpeedElement = document.getElementById(\"stats-speed\") as HTMLSpanElement;\r\n        this.upgrDefenseElement = document.getElementById(\"stats-defense\") as HTMLSpanElement;\r\n        this.upgrEnergyElement = document.getElementById(\"stats-energy\") as HTMLSpanElement;\r\n        this.upgrMissileElement = document.getElementById(\"stats-missile\") as HTMLSpanElement;\r\n\r\n        this.ctfInfo = document.getElementById(\"ctf-info\");\r\n        this.blueScore = document.getElementById(\"blue-score\") as HTMLSpanElement;\r\n        this.redScore = document.getElementById(\"red-score\") as HTMLSpanElement;\r\n        this.blueFlagLocation = document.getElementById(\"blue-flag-location\") as HTMLSpanElement;\r\n        this.redFlagLocation = document.getElementById(\"red-flag-location\") as HTMLSpanElement;\r\n    }\r\n\r\n    private toString(n: number) {\r\n        if (n !== 0 && !n) {\r\n            return \"\";\r\n        }\r\n\r\n        return \"\" + n;\r\n    }\r\n\r\n    public render(): void {\r\n        const me = this.context.state.getFocusedPlayer();\r\n        if (!me) {\r\n            return;\r\n        }\r\n\r\n        this.scoreElement.innerText = this.toString(me.score);\r\n        this.killsElement.innerText = this.toString(me.kills);\r\n        this.deathsElement.innerText = this.toString(me.deaths);\r\n\r\n        const upgrades = me.upgrades || new Upgrades();\r\n\r\n        this.upgradesElement.innerText = this.toString(upgrades.available);\r\n        this.upgrDefenseElement.innerText = this.toString(upgrades.defense);\r\n        this.upgrEnergyElement.innerText = this.toString(upgrades.energy);\r\n        this.upgrMissileElement.innerText = this.toString(upgrades.missile);\r\n        this.upgrSpeedElement.innerText = this.toString(upgrades.speed);\r\n\r\n        // CTF stats\r\n        if (this.context.gameType === GAME_TYPES.CTF) {\r\n            if (this.ctfInfo.style.display !== \"block\") {\r\n                this.ctfInfo.style.display = \"block\";\r\n            }\r\n            const blueInfo = this.context.state.getCtfTeam(CTF_TEAMS.BLUE);\r\n            const redInfo = this.context.state.getCtfTeam(CTF_TEAMS.RED);\r\n\r\n            const blueScore = blueInfo.score ? blueInfo.score : 0;\r\n            const redScore = redInfo.score ? redInfo.score : 0;\r\n\r\n            this.blueScore.innerText = this.toString(blueScore);\r\n            this.redScore.innerText = this.toString(redScore);\r\n\r\n            let blueFlagLocation = \"?\";\r\n            if (blueInfo.flagState === CTF_FLAG_STATE.DYNAMIC) {\r\n                const carrierName = this.context.state.getPlayerName(blueInfo.flagTakenById);\r\n                blueFlagLocation = `taken by ${carrierName}`;\r\n            } else if (blueInfo.flagPos.equals(FLAG_DEFAULT_POSITION.blue)) {\r\n                blueFlagLocation = \"home\";\r\n            } else {\r\n                blueFlagLocation = \"abandoned\";\r\n            }\r\n            this.blueFlagLocation.innerText = blueFlagLocation;\r\n\r\n            let redFlagLocation = \"?\";\r\n            if (redInfo.flagState === CTF_FLAG_STATE.DYNAMIC) {\r\n                const carrierName = this.context.state.getPlayerName(redInfo.flagTakenById);\r\n                redFlagLocation = `taken by ${carrierName}`;\r\n            } else if (redInfo.flagPos.equals(FLAG_DEFAULT_POSITION.red)) {\r\n                redFlagLocation = \"home\";\r\n            } else {\r\n                redFlagLocation = \"abandoned\";\r\n            }\r\n            this.redFlagLocation.innerText = redFlagLocation;\r\n        }\r\n    }\r\n}\r\n","import { MOB_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { PeriodicLogger } from \"../../helpers/periodic-logger\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\nconst CRATE_HALF_SIZE = 12;\r\nconst CRATE_SIZE = CRATE_HALF_SIZE * 2;\r\nconst CRATE_ROTATION = Math.PI / 4;\r\n\r\ndeclare const constants: any;\r\n\r\nexport class UpcratesRenderer {\r\n\r\n    private logger: PeriodicLogger;\r\n\r\n    constructor(private context: IContext, private clip: ClippedView) {\r\n        this.logger = new PeriodicLogger(context);\r\n    }\r\n\r\n    public renderUpcrates(context: CanvasRenderingContext2D) {\r\n        for (const crate of this.context.state.getUpcrates()) {\r\n            const pos = crate.pos;\r\n\r\n            if (!pos || !this.clip.isVisible(pos)) {\r\n                // this.logger.log(\"not visible\", pos, this.clip.getClipRectangle());\r\n                continue;\r\n            }\r\n\r\n            let fillColor = constants.UPCRATES_UPGRADE_CRATE_COLOR;\r\n            switch (crate.mobType) {\r\n                case MOB_TYPES.INFERNO:\r\n                    fillColor = constants.UPCRATES_RAMPAGE_CRATE_COLOR;\r\n                    break;\r\n                case MOB_TYPES.SHIELD:\r\n                    fillColor = constants.UPCRATES_SHIELD_CRATE_COLOR;\r\n                    break;\r\n            }\r\n\r\n            const clipPos = this.clip.translate(pos);\r\n\r\n            context.translate(clipPos.x, clipPos.y);\r\n            context.rotate(CRATE_ROTATION);\r\n\r\n            context.beginPath();\r\n            context.fillStyle = fillColor;\r\n            const halfSize = this.clip.scale(CRATE_HALF_SIZE);\r\n            const size = this.clip.scale(CRATE_SIZE);\r\n            context.rect(-halfSize, -halfSize, size, size);\r\n            context.fill();\r\n            context.strokeStyle = constants.UPCRATES_BORDER_COLOR;\r\n            context.stroke();\r\n\r\n            context.rotate(-CRATE_ROTATION);\r\n            context.translate(-clipPos.x, -clipPos.y);\r\n        }\r\n    }\r\n}\r\n","/* tslint:disable */\r\n\r\n/** some stats: the walls have 12 different radii,\r\n * distributed in steps of 12 like this:\r\n * \r\n * radius : number of walls\r\n  '36': 4,\r\n  '48': 24,\r\n  '60': 52,\r\n  '72': 53,\r\n  '84': 62,\r\n  '96': 50,\r\n  '108': 142,\r\n  '120': 77,\r\n  '132': 43,\r\n  '144': 9,\r\n  '156': 2,\r\n  '168': 2\r\n */\r\n\r\nconst abWalls = [[1009, -2308, 108], [1241, -2490, 60], [1157, -2379, 84], [622, -2126, 48], [669, -2187, 72], [-392, -1669, 132],\r\n[-273, -1746, 60], [-252, -1504, 120], [1553, -2016, 48], [1637, -1972, 60], [1736, -1922, 60], [2150, -2406, 72], [2238, -2318, 108],\r\n[2364, -2391, 72], [2491, -2682, 72], [2596, -2671, 108], [-150, -3147, 48], [-155, -3044, 84], [-427, -3600, 48], [-259, -2982, 60],\r\n[-379, -3529, 72], [-665, -3052, 60], [20, -1816, 60], [127, -1799, 60], [263, -2572, 48], [405, -2570, 108], [851, -4183, 120], [754, -3971, 108],\r\n[1757, -5065, 132], [1169, -4453, 108], [2054, -5244, 108], [1631, -4901, 108], [2305, -5281, 108], [1007, -4281, 96], [2766, -5202, 96],\r\n[2927, -5204, 84], [3206, -5218, 36], [3099, -5193, 72], [1417, -4726, 120], [2844, -1513, 60], [3206, -1464, 120], [2881, -1403, 108],\r\n[3804, -2025, 84], [4116, -1778, 108], [3715, -1508, 72], [4247, -1126, 72], [3860, 268, 60], [4334, -1011, 132], [3849, 349, 72],\r\n[3956, 490, 96], [4073, 667, 108], [3583, -864, 96], [4135, 836, 120], [4785, -743, 120], [4993, -839, 108], [5224, -482, 84], [5235, -1238, 132],\r\n[5419, -1346, 72], [6075, -5099, 96], [5767, -4953, 108], [5896, -4967, 108], [5384, -4642, 108], [5704, -4857, 108], [5563, -4697, 108],\r\n[5406, -4470, 132], [5352, -3964, 108], [5309, -3665, 132], [5247, -3464, 108], [5300, -3121, 108], [3524, -3340, 132], [3661, -3589, 108],\r\n[7236, -1376, 72], [7624, -1610, 96], [7403, -1555, 84], [7514, -1568, 108], [3660, -2705, 108], [3374, -2813, 96], [7347, -1447, 108],\r\n[7236, -775, 60], [7207, -631, 108], [7303, -468, 108], [7262, -1263, 108], [7404, -350, 120], [7589, -305, 108], [7741, -1589, 120],\r\n[7949, -1594, 120], [8152, -1599, 132], [8378, -1602, 144], [7873, -321, 72], [8543, -1661, 84], [7790, -259, 120], [8675, -1573, 120],\r\n[8163, -245, 84], [8329, -311, 84], [8275, -229, 120], [8447, -277, 120], [8824, -1447, 108], [7221, -1140, 60], [8924, -1273, 108],\r\n[6844, -950, 120], [8949, -1060, 132], [8904, -920, 96], [8582, -338, 84], [8963, -803, 120], [8680, -322, 108], [8811, -449, 108],\r\n[8910, -610, 108], [6855, 114, 96], [6971, 241, 120], [6852, 656, 60], [6980, 706, 108], [6946, 939, 120], [6027, -560, 72],\r\n[7521, 425, 48], [7599, 389, 60], [5863, -431, 108], [9392, 262, 108], [7521, 512, 72], [9807, 1027, 60], [9554, 237, 120],\r\n[9346, 392, 144], [9789, 1142, 84], [9747, -532, 96], [8591, 347, 72], [9951, -509, 120], [9308, 2417, 60], [10185, -522, 108],\r\n[10330, 2147, 72], [9350, 2480, 84], [10503, 2124, 108], [12500, 2628, 60], [13188, 2864, 60], [12637, 2659, 84], [13262, 2899, 60],\r\n[13777, 5168, 60], [15709, 6399, 48], [13539, 5664, 60], [15660, 6474, 48], [13743, 5248, 84], [15482, 6600, 48], [15591, 6525, 36],\r\n[13487, 5738, 84], [15407, 6702, 72], [8171, -2568, 60], [16001, 6015, 72], [16017, 6110, 48], [6496, -1491, 60], [6626, -1480, 84],\r\n[6190, -1022, 96], [8325, -2615, 120], [8222, -2412, 120], [9204, -2288, 108], [9279, -2216, 120], [10375, -1558, 96], [10309, -1421, 108],\r\n[10247, -1216, 144], [10079, -2310, 108], [10320, -2330, 120], [10942, -2963, 108], [10807, -2778, 132], [12989, -1929, 72],\r\n[12613, -1181, 48], [12559, -1120, 60], [11642, -1900, 84], [11558, -1692, 108], [11509, -1479, 60], [12559, -2673, 96], [12446, -2487, 120],\r\n[12375, -2303, 108], [10363, -3514, 84], [10290, -3340, 108], [10162, -3207, 84], [9003, -3048, 108], [9161, -3119, 72], [14550, -3462, 108],\r\n[14407, -3335, 108], [14366, -4493, 108], [14477, -4437, 120], [15305, -4230, 108], [15481, -4283, 108], [15349, -5009, 48],\r\n[11874, -4879, 72], [15453, -4984, 84], [11907, -4742, 96], [12440, -4278, 60], [11980, -4582, 108], [12131, -4387, 132],\r\n[15681, -4973, 120], [12591, -4252, 96], [12777, -4244, 108], [12969, -4227, 108], [15897, -5071, 108], [13204, -4228, 120], [11592, -5261, 84],\r\n[12743, -4826, 48], [10102, -5078, 84], [12854, -4782, 108], [10191, -5033, 84], [10523, -5133, 120], [10336, -4977, 132], [10667, -5250, 96],\r\n[9665, -6403, 84], [10798, -5379, 60], [9670, -5547, 108], [9834, -6369, 120], [9864, -5572, 132], [11362, -3957, 108], [11162, -3830, 120],\r\n[8922, -6173, 120], [9003, -5368, 60], [8453, -6153, 72], [8954, -5229, 108], [8905, -5072, 96], [8704, -3873, 108], [8578, -6105, 96],\r\n[8508, -3710, 84], [8614, -5400, 60], [8788, -4922, 132], [8936, -3905, 72], [9701, -4613, 108], [6973, -4776, 72], [7016, -4674, 108],\r\n[9124, -3853, 108], [7253, -4648, 96], [6602, -4591, 72], [8510, -5322, 108], [6687, -3810, 84], [9525, -4492, 132], [7461, -4705, 108],\r\n[9280, -3812, 96], [6467, -2811, 36], [6842, -3820, 96], [6483, -2725, 72], [7675, -4864, 132], [6991, -2885, 108], [6610, -2664, 108],\r\n[6822, -2736, 108], [6763, -4582, 108], [6509, -2490, 108], [7216, -3865, 132], [7018, -3708, 120], [2254, -3301, 96], [6378, -2310, 96],\r\n[7197, -2857, 108], [2609, -3483, 60], [2449, -3385, 108], [4585, -2889, 84], [4470, -2768, 96], [4083, -4033, 108], [1568, -2869, 48],\r\n[4336, -4105, 144], [1977, -1678, 60], [1412, -3642, 60], [1570, -2792, 72], [1932, -1586, 72], [1310, -3547, 72], [3611, 1391, 120],\r\n[3558, 2174, 108], [3431, 1563, 108], [3142, 2813, 84], [3330, 2296, 132], [3001, 2818, 72], [3703, 2044, 48], [2872, 3863, 108],\r\n[3125, 2942, 132], [2841, 4018, 132], [2402, 5140, 72], [2511, 5167, 96], [-14607, -5112, 108], [-14430, -5180, 108], [-14197, -5222, 144],\r\n[-14895, -4703, 60], [-14797, -4728, 48], [-14697, -4739, 48], [-13919, -5281, 132], [-13646, -5170, 84], [-13400, -5068, 144],\r\n[-13099, -5108, 132], [-12824, -5092, 108], [-12631, -5044, 108], [-12427, -4914, 108], [-12270, -4816, 84], [-11772, -4983, 84], [-11940, -4867, 108], [-12091, -4699, 108], [-12270, -4529, 84], [-12460, -4396, 108], [-13058, -4252, 108], [-12894, -4096, 84], [-12738, -4077, 84], [-13546, -4341, 48], [-13428, -4299, 108], [-14679, -4192, 84], [-14368, -4308, 84], [-14495, -4133, 132], [-12072, -3824, 96], [-11904, -3648, 120], [-11654, -3569, 84], [-11648, -3357, 108], [-11420, -3359, 108], [-11296, -3135, 84], [-10782, -2838, 96], [-11410, -3039, 36], [-10581, -2773, 132], [-11118, -5114, 96], [-10675, -5079, 108], [-10205, -4890, 96], [-11543, -4164, 96], [-11287, -4244, 60], [-10018, -4747, 120], [-9278, 419, 60], [-9341, 470, 60], [-9180, 496, 96], [-11365, -4131, 120], [-9353, 0, 72], [-8975, 528, 120], [-9413, 89, 108], [-8230, 770, 48], [-9231, 17, 84], [-6808, 1667, 60], [-6694, 1622, 96], [-8285, 855, 72], [-6793, 1796, 96], [-6865, 1935, 60], [-7043, 2222, 72], [-7083, 2368, 72], [-7103, 2533, 84], [-7099, 2721, 96], [-7178, 2874, 48], [-6964, 3110, 84], [-6246, 4191, 72], [-6735, 3446, 48], [-6722, 3537, 84], [-6396, 3388, 108], [-6787, 3140, 108], [-6227, 4488, 84], [-6281, 3953, 72], [-6530, 3576, 132], [-6147, 3994, 132], [-6141, 4292, 144], [-6377, 5578, 84], [-6152, 4569, 108], [-6222, 4769, 84], [-6266, 4956, 72], [-6233, 5414, 108], [-6347, 5646, 84], [-6400, 6066, 84], [-6411, 6261, 96], [-6565, 7043, 72], [-6377, 6415, 108], [-6440, 6614, 84], [-5944, 1954, 60], [-6001, 2039, 96], [-6467, 7070, 108], [-4963, 3608, 72], [-4776, 3510, 48], [-5785, 1998, 132], [-3708, 3449, 72], [-3790, 3582, 108], [-4031, 3697, 84], [-4859, 3634, 120], [-3850, 3730, 120], [-4689, 4605, 108], [-3492, 2892, 72], [-4507, 4483, 72], [-4829, 2745, 108], [-4435, 4273, 108], [-3383, 2930, 108], [-4888, 2821, 108], [-5372, 5172, 60], [-5036, 2981, 108], [-9895, -1942, 120], [-9371, -2159, 72], [-9995, -1773, 108], [-5280, 5218, 108], [-5079, 5183, 108], [-5149, 3079, 72], [-9695, -2048, 120], [-5063, 5374, 108], [-9504, -2059, 120], [-8948, -2140, 84], [-9262, -2081, 132], [-9068, -2071, 120], [-8861, -2045, 132], [-8654, -2083, 120], [-8473, -2048, 120], [-8283, -1965, 120], [-8182, -1863, 108], [-10037, -1579, 108], [-10063, -1365, 108], [-10074, -1190, 108], [-8167, -1225, 60], [-8188, -1087, 96], [-9975, -1022, 108], [-9835, -910, 120], [-9709, -848, 120], [-9532, -792, 120], [-9348, -779, 120], [-9131, -784, 132], [-8754, -795, 84], [-8587, -797, 120], [-8424, -856, 108], [-8246, -921, 108], [-8153, -1701, 84], [-6447, -2137, 72], [-8153, -1591, 60], [-7694, -1393, 120], [-6541, -2030, 84], [-7135, -1547, 84], [-5885, -2958, 72], [-7171, -1440, 96], [-5620, -3123, 72], [-6631, -1866, 96], [-5882, -3696, 96], [-5716, -2944, 108], [-5949, -3528, 60], [-6869, -4052, 96], [-7081, -2673, 60], [-6725, -4069, 72], [-10487, -2295, 60], [-7032, -2749, 72], [-10769, -3817, 72], [-6607, -4081, 60], [-10849, -1824, 84], [-10479, -2146, 108], [-7003, -2611, 108], [-10749, -1511, 72], [-10697, -1953, 120], [-10848, -1330, 108], [-10912, -1220, 60], [-9843, -2685, 84], [-10823, -3717, 84], [-9697, -2713, 72], [-10080, -3431, 48], [-10648, -3844, 108], [-9530, -2695, 120], [-2387, -6791, 108], [-8465, -5037, 84], [-2550, -6627, 108], [-9325, -2822, 84], [-10140, -3346, 96], [-8461, -4908, 108], [8116, -1076, 96], [8115, -940, 96], [-2503, -6359, 168], [-9062, -1580, 96], [8120, -790, 96], [-9065, -1444, 96], [-2615, -6159, 120], [-2744, -5943, 132], [-3713, -4955, 108], [-9061, -1292, 96], [-1551, -4718, 60], [5251, -6249, 60], [5192, -6181, 48], [-2898, -5732, 108], [-1705, -4629, 96], [1618, -7035, 60], [-3829, -4776, 108], [-2851, -5589, 132], [-2974, -5399, 132], [-3952, -4568, 108], [-4135, -4368, 132], [-3428, -5104, 132], [-3167, -5254, 108], [-3049, -6916, 120], [-3097, -6722, 108], [-3190, -6493, 120], [-3318, -6284, 132], [-4672, -5861, 132], [-4480, -5668, 120], [-4294, -5548, 108], [-3433, -6072, 120], [-3568, -5881, 120], [-3736, -5698, 144], [-3978, -7517, 108], [-3956, -5572, 120], [-4103, -5400, 120], [-4281, -5240, 120], [-4409, -5034, 120], [-4475, -4808, 108], [-2777, -7546, 120], [-2542, -7502, 108], [-2398, -7364, 108], [-2350, -7151, 108], [-2315, -6976, 96], [-3749, -7488, 120], [-2995, -7596, 144], [-3253, -7558, 132], [-3468, -7472, 120], [-5028, -6473, 120], [-3604, -7301, 132], [-3678, -7078, 132], [-3835, -6826, 132], [-3935, -6595, 120], [-5214, -7381, 120], [-4065, -6416, 132], [-4174, -6231, 84], [-4556, -6940, 120], [-4663, -6781, 120], [-4748, -6548, 156], [-4847, -6257, 132], [-4806, -6016, 108], [-4950, -7410, 168], [-5470, -7251, 156], [-5637, -7038, 120], [-5593, -6819, 120], [-5406, -6727, 120], [-5263, -6580, 120], [-4636, -7476, 120], [-4399, -7496, 108], [-6769, -7571, 108], [-6853, -7377, 108], [-8273, -7231, 60], [-4182, -7512, 108], [-7525, -5855, 108], [-7495, -6329, 60], [-7297, -6946, 108], [-8148, -7137, 84], [-7030, -7301, 84]];\r\nexport { abWalls };","import { abWalls } from \"../../ab-assets/walls\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Pos } from \"../../models/pos\";\r\nimport { ClippedView } from \"../clipped-view\";\r\n\r\nconst MOUNTAIN_BITMAP_SCALE = 1.4;\r\n\r\nconst MIN_RADIUS_FOR_LARGE = 132;\r\nconst MIN_RADIUS_FOR_MEDIUM = 120;\r\nconst MIN_RADIUS_FOR_REGULAR = 108;\r\nconst MIN_RADIUS_FOR_SMALL = 84;\r\nconst MIN_RADIUS_FOR_SMALLER = 60;\r\n\r\ndeclare const constants: any;\r\n\r\nexport class WallsRenderer {\r\n\r\n    private wallImages: {\r\n        [wallNum: number]: HTMLImageElement,\r\n    };\r\n\r\n    constructor(private clip: ClippedView, private context: IContext) {\r\n        const medium = document.getElementById(\"mountain-medium\") as HTMLImageElement;\r\n        const large = document.getElementById(\"mountain-large\") as HTMLImageElement;\r\n\r\n        const regular = [];\r\n        regular.push(document.getElementById(\"mountain-regular-a\") as HTMLImageElement);\r\n        regular.push(document.getElementById(\"mountain-regular-b\") as HTMLImageElement);\r\n        regular.push(document.getElementById(\"mountain-regular-c\") as HTMLImageElement);\r\n\r\n        const small = document.getElementById(\"mountain-small\") as HTMLImageElement;\r\n        const smaller = document.getElementById(\"mountain-smaller\") as HTMLImageElement;\r\n        const mini = document.getElementById(\"mountain-mini\") as HTMLImageElement;\r\n\r\n        // assign images to each wall\r\n        let wallNum = 0;\r\n        this.wallImages = {};\r\n        for (const wall of abWalls) {\r\n            const radius = wall[2];\r\n            let img: HTMLImageElement;\r\n            if (radius >= MIN_RADIUS_FOR_LARGE) {\r\n                img = large;\r\n            } else if (radius >= MIN_RADIUS_FOR_MEDIUM) {\r\n                img = medium;\r\n            } else if (radius >= MIN_RADIUS_FOR_REGULAR) {\r\n                img = regular[wallNum % regular.length];\r\n            } else if (radius >= MIN_RADIUS_FOR_SMALL) {\r\n                img = small;\r\n            } else if (radius >= MIN_RADIUS_FOR_SMALLER) {\r\n                img = smaller;\r\n            } else {\r\n                img = mini;\r\n            }\r\n\r\n            wall[3] = wallNum;\r\n            this.wallImages[wallNum] = img;\r\n\r\n            wallNum++;\r\n        }\r\n\r\n    }\r\n\r\n    public renderWalls(context: CanvasRenderingContext2D) {\r\n        for (const wall of abWalls) {\r\n            const pos = new Pos(wall[0], wall[1]);\r\n            const radius = wall[2];\r\n\r\n            const topLeft = new Pos(pos.x - radius, pos.y - radius);\r\n            const bottRight = new Pos(pos.x + radius, pos.y + radius);\r\n\r\n            if (this.clip.isVisible(topLeft) || this.clip.isVisible(bottRight)) {\r\n\r\n                const clipPos = this.clip.translate(pos);\r\n\r\n                if (this.context.settings.useBitmaps) {\r\n                    const scaledRadius = this.clip.scale(radius) * MOUNTAIN_BITMAP_SCALE;\r\n                    const wallNum = wall[3];\r\n\r\n                    const img = this.wallImages[wallNum];\r\n                    context.drawImage(img, 0, 0, img.width, img.height,\r\n                        clipPos.x - scaledRadius, clipPos.y - scaledRadius, scaledRadius * 2, scaledRadius * 2);\r\n\r\n                } else {\r\n                    const scaledradius = this.clip.scale(radius);\r\n                    context.fillStyle = constants.WALLS_NOBITMAP_COLOR;\r\n                    context.beginPath();\r\n\r\n                    context.arc(clipPos.x, clipPos.y, scaledradius, 0, 2 * Math.PI);\r\n                    context.fill();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { CHAT_TYPE } from \"../../ab-assets/chat-constants\";\r\nimport { GAME_TYPES, SERVER_MESSAGE_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { PeriodicLogger } from \"../../helpers/periodic-logger\";\r\nimport { StopWatch } from \"../../helpers/stopwatch\";\r\nimport { ClippedView } from \"../clipped-view\";\r\nimport { BackgroundRenderer } from \"./background-renderer\";\r\nimport { DebugInfoRenderer } from \"./debug-info-renderer\";\r\nimport { EffectsRenderer } from \"./effects-renderer\";\r\nimport { FlagRenderer } from \"./flag-renderer\";\r\nimport { MinimapRenderer } from \"./minimap-renderer\";\r\nimport { MissilesRenderer } from \"./missiles-renderer\";\r\nimport { PathRenderer } from \"./path-renderer\";\r\nimport { PlayerListRenderer } from \"./playerlist-renderer\";\r\nimport { PlayersRenderer } from \"./players-renderer\";\r\nimport { StatsRenderer } from \"./stats-renderer\";\r\nimport { UpcratesRenderer } from \"./upcrates-renderer\";\r\nimport { WallsRenderer } from \"./walls-renderer\";\r\n\r\nexport class Renderer {\r\n    private canvas: HTMLCanvasElement;\r\n    private canvasContext: CanvasRenderingContext2D;\r\n\r\n    private chatBox: HTMLDivElement;\r\n    private serverMessage: HTMLDivElement;\r\n    private serverMessageStopwatch: StopWatch;\r\n\r\n    private pingElement: HTMLSpanElement;\r\n\r\n    private clip: ClippedView;\r\n    private playersRenderer: PlayersRenderer;\r\n    private wallsRenderer: WallsRenderer;\r\n    private missilesRenderer: MissilesRenderer;\r\n    private explosionsRenderer: EffectsRenderer;\r\n    private upcratesRenderer: UpcratesRenderer;\r\n    private backgroundRenderer: BackgroundRenderer;\r\n    private minimapRenderer: MinimapRenderer;\r\n    private playerListRenderer: PlayerListRenderer;\r\n    private flagRenderer: FlagRenderer;\r\n    private statsRenderer: StatsRenderer;\r\n    private debugInfoRenderer: DebugInfoRenderer;\r\n    private pathRenderer: PathRenderer;\r\n\r\n    private shakeTimeout: any;\r\n\r\n    private ignoredPlayers: number[] = [];\r\n    private periodicLogger: PeriodicLogger;\r\n\r\n    constructor(private context: IContext) {\r\n\r\n        this.getUiElements();\r\n\r\n        this.periodicLogger = new PeriodicLogger(context);\r\n        this.clip = new ClippedView(context);\r\n\r\n        this.backgroundRenderer = new BackgroundRenderer(this.clip, context);\r\n        this.wallsRenderer = new WallsRenderer(this.clip, context);\r\n        this.flagRenderer = new FlagRenderer(context, this.clip);\r\n        this.upcratesRenderer = new UpcratesRenderer(context, this.clip);\r\n        this.playersRenderer = new PlayersRenderer(context, this.clip);\r\n        this.missilesRenderer = new MissilesRenderer(context, this.clip);\r\n        this.explosionsRenderer = new EffectsRenderer(context, this.clip);\r\n\r\n        this.minimapRenderer = new MinimapRenderer(context);\r\n        this.playerListRenderer = new PlayerListRenderer(context);\r\n        this.statsRenderer = new StatsRenderer(context);\r\n\r\n        this.debugInfoRenderer = new DebugInfoRenderer(context);\r\n        this.pathRenderer = new PathRenderer(this.clip, context);\r\n    }\r\n\r\n    public addMessageToPlayer(msg: string) {\r\n        this.chatBox.innerHTML += `<div class=\"chat chat-warning\">${msg}</div>`;\r\n        this.chatBox.scrollTop = this.chatBox.scrollHeight;\r\n    }\r\n\r\n    public addChat(playerId: number, playerName: string, chatType: CHAT_TYPE, msg: string, to: number) {\r\n        if (this.ignoredPlayers.indexOf(playerId) !== -1) {\r\n            return;\r\n        }\r\n\r\n        playerName = playerName.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n        msg = msg.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n        if (chatType === CHAT_TYPE.SAY) {\r\n            this.playersRenderer.addSay(playerId, msg);\r\n        } else {\r\n            let type = \"\";\r\n            let typeLabel = \"\";\r\n            if (chatType === CHAT_TYPE.TEAM) {\r\n                type = \"chat-team\";\r\n                typeLabel = \" =&gt; team\";\r\n            } else if (chatType === CHAT_TYPE.WHISPER) {\r\n                type = \"chat-whisper\";\r\n                if (playerId === this.context.state.myPlayerId) { // state.id can be the spectatered player\r\n                    const other = this.context.state.getPlayerName(to);\r\n                    typeLabel = \" =&gt; \" + other;\r\n                } else {\r\n                    typeLabel = \" =&gt; me\";\r\n                }\r\n            }\r\n\r\n            const safePlayerName = encodeURI(playerName);\r\n\r\n            this.chatBox.innerHTML += `<div class=\"chat ${type}\"><strong class=\"player-name\" ` +\r\n                `data-name=\"${safePlayerName}\" data-id=\"${playerId}\">` +\r\n                `${playerName}${typeLabel}</strong>: ${msg}</div>`;\r\n            this.chatBox.scrollTop = this.chatBox.scrollHeight;\r\n        }\r\n\r\n    }\r\n\r\n    public showServerMessage(type: SERVER_MESSAGE_TYPES, durationMs: number, text: string) {\r\n        this.serverMessageStopwatch = new StopWatch(durationMs);\r\n        this.serverMessage.innerHTML = text;\r\n    }\r\n\r\n    public hideServerMessageAfterTimeout() {\r\n        if (!this.serverMessageStopwatch) {\r\n            return;\r\n        }\r\n\r\n        if (this.serverMessageStopwatch.hasTimedOut) {\r\n            this.serverMessage.innerHTML = \"\";\r\n            this.serverMessageStopwatch = null;\r\n        }\r\n    }\r\n\r\n    public showStats() {\r\n        this.statsRenderer.render();\r\n    }\r\n\r\n    public showPing() {\r\n        this.pingElement.innerText = \"\" + this.context.state.ping + \" ms\";\r\n    }\r\n\r\n    public highlightPlayerOnMinimap(playerId: number) {\r\n        this.minimapRenderer.highlight(playerId);\r\n    }\r\n\r\n    public ignorePlayer(playerId: number) {\r\n        if (this.ignoredPlayers.indexOf(playerId) === -1 && playerId !== this.context.state.id) {\r\n            this.ignoredPlayers.push(playerId);\r\n        }\r\n    }\r\n\r\n    public unignorePlayer(playerId: number) {\r\n        this.ignoredPlayers = this.ignoredPlayers.filter((x) => x !== playerId);\r\n    }\r\n\r\n    public renderMinimap() {\r\n        this.minimapRenderer.render();\r\n    }\r\n\r\n    public renderPlayerList() {\r\n        this.playerListRenderer.render();\r\n    }\r\n\r\n    public renderHit() {\r\n        this.canvas.className = \"shake-hit\";\r\n        this.stopShaking();\r\n    }\r\n\r\n    public renderKill() {\r\n        this.canvas.className = \"shake-kill\";\r\n        this.stopShaking();\r\n    }\r\n\r\n    public renderGame(isFirstTick: boolean): void {\r\n        if (isFirstTick) {\r\n            // this may be the first tick after a panic,\r\n            // purge any unnecessary stuff to keep up.\r\n            this.context.state.purgeAfterPanic();\r\n        }\r\n\r\n        if (!this.context.state.getFocusedPlayer()) {\r\n            return;\r\n        }\r\n\r\n        const canvasCtx = this.canvasContext;\r\n        this.clip.setClip(this.canvas);\r\n\r\n        // background\r\n        this.backgroundRenderer.renderBackground(canvasCtx);\r\n        // draw walls\r\n        this.wallsRenderer.renderWalls(canvasCtx);\r\n        this.pathRenderer.renderPath(canvasCtx); // bot path\r\n        // upgrade and powerup crates\r\n        this.upcratesRenderer.renderUpcrates(canvasCtx);\r\n        // draw players\r\n        this.playersRenderer.renderPlayers(canvasCtx);\r\n        // draw missiles\r\n        this.missilesRenderer.renderMissiles(canvasCtx);\r\n        // explosions and kills\r\n        this.explosionsRenderer.renderExplosions(canvasCtx);\r\n\r\n        if (this.context.gameType === GAME_TYPES.CTF) {\r\n            this.flagRenderer.render(canvasCtx);\r\n        }\r\n\r\n        this.debugInfoRenderer.render();\r\n    }\r\n\r\n    private getUiElements() {\r\n        this.canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        this.canvasContext = this.canvas.getContext(\"2d\");\r\n\r\n        this.chatBox = document.getElementById(\"chat\") as HTMLDivElement;\r\n        this.serverMessage = document.getElementById(\"server-message\") as HTMLDivElement;\r\n        this.pingElement = document.getElementById(\"stats-ping\") as HTMLSpanElement;\r\n    }\r\n\r\n    private stopShaking() {\r\n        if (this.shakeTimeout) {\r\n            this.context.tm.clearTimeout(this.shakeTimeout);\r\n        }\r\n        this.shakeTimeout = this.context.tm.setTimeout(() => this.canvas.className = \"\", 1000);\r\n    }\r\n\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\n\r\nexport class AircraftSelection {\r\n\r\n    constructor(private context: IContext) {\r\n        const raptor = document.getElementById(\"select-raptor\");\r\n        raptor.onclick = () => this.selectAircraft(\"1\");\r\n        const spirit = document.getElementById(\"select-spirit\");\r\n        spirit.onclick = () => this.selectAircraft(\"2\");\r\n        const mohawk = document.getElementById(\"select-mohawk\");\r\n        mohawk.onclick = () => this.selectAircraft(\"3\");\r\n        const tornado = document.getElementById(\"select-tornado\");\r\n        tornado.onclick = () => this.selectAircraft(\"4\");\r\n        const prowler = document.getElementById(\"select-prowler\");\r\n        prowler.onclick = () => this.selectAircraft(\"5\");\r\n    }\r\n\r\n    public selectAircraft(selection: string) {\r\n        this.context.connection.sendCommand(\"respawn\", selection);\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\n\r\nexport class ApplyUpgrades {\r\n\r\n    constructor(private context: IContext) {\r\n        const speed = document.getElementById(\"select-speed\");\r\n        speed.onclick = () => this.applyUpgrade(\"1\");\r\n        const defense = document.getElementById(\"select-defense\");\r\n        defense.onclick = () => this.applyUpgrade(\"2\");\r\n        const energy = document.getElementById(\"select-energy\");\r\n        energy.onclick = () => this.applyUpgrade(\"3\");\r\n        const missile = document.getElementById(\"select-missile\");\r\n        missile.onclick = () => this.applyUpgrade(\"4\");\r\n\r\n        const drop = document.getElementById(\"drop-upgrade\");\r\n        drop.onclick = () => this.dropUpgrade();\r\n    }\r\n\r\n    public applyUpgrade(selection: string) {\r\n        this.context.connection.sendCommand(\"upgrade\", selection);\r\n    }\r\n\r\n    public dropUpgrade() {\r\n        this.context.connection.sendCommand(\"upgrades\", \"drop\");\r\n    }\r\n}\r\n","import { CHAT_TYPE } from \"../../ab-assets/chat-constants\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IChatSendArgs } from \"../../events/event-args/ichat-send-args\";\r\nimport { IMessageToPlayerArgs } from \"../../events/event-args/message-to-player-args\";\r\nimport { Player } from \"../../models/player\";\r\n\r\nexport class ChatInput {\r\n\r\n    private input: HTMLInputElement;\r\n    private commandRegex = /^\\/(\\w+)(?:\\s(.+))?$/;\r\n\r\n    constructor(private context: IContext) {\r\n        this.input = document.getElementById(\"chat-input-textbox\") as HTMLInputElement;\r\n        this.input.addEventListener(\"blur\", () => this.hide());\r\n        this.hide();\r\n\r\n        const instructionSpan = document.getElementById(\"input-instruction\");\r\n        instructionSpan.addEventListener(\"click\", () => this.showAndFocus());\r\n    }\r\n\r\n    public showAndFocus() {\r\n        this.input.style.display = \"block\";\r\n        this.input.focus();\r\n    }\r\n\r\n    public hide() {\r\n        this.input.style.display = \"none\";\r\n    }\r\n\r\n    public startChat(suggestedText: string) {\r\n        this.showAndFocus();\r\n        this.input.value = suggestedText;\r\n    }\r\n\r\n    public isChatInputFocused() {\r\n        return this.input.style.display.toLowerCase() === \"block\";\r\n    }\r\n\r\n    public submit() {\r\n        const text = this.input.value;\r\n\r\n        if (text) {\r\n            this.input.value = \"\";\r\n\r\n            const commandMatch = this.commandRegex.exec(text);\r\n            if (!commandMatch) {\r\n                this.context.eventQueue.pub(Events.CHAT_SEND, { text, type: CHAT_TYPE.CHAT } as IChatSendArgs);\r\n            } else {\r\n                const command = commandMatch[1];\r\n                const args = commandMatch[2];\r\n\r\n                if (command === \"t\") {\r\n                    this.context.eventQueue.pub(Events.CHAT_SEND,\r\n                        { text: args, type: CHAT_TYPE.TEAM } as IChatSendArgs);\r\n                } else if (command === \"s\") {\r\n                    this.context.eventQueue.pub(Events.CHAT_SEND, { text: args, type: CHAT_TYPE.SAY } as IChatSendArgs);\r\n                } else if (command === \"w\") {\r\n                    const allPlayers = this.context.state.getPlayers();\r\n                    allPlayers.sort((a, b) => b.name.length - a.name.length);\r\n\r\n                    let player: Player;\r\n                    for (const targetPlayer of allPlayers) {\r\n                        if (args.startsWith(targetPlayer.name)) {\r\n                            player = targetPlayer;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (player) {\r\n                        const whisperText = args.substr(player.name.length + 1);\r\n                        this.context.eventQueue.pub(Events.CHAT_SEND,\r\n                            {\r\n                                playerId: player.id,\r\n                                text: whisperText,\r\n                                type: CHAT_TYPE.WHISPER,\r\n                            } as IChatSendArgs);\r\n                    } else {\r\n                        this.context.eventQueue.pub(Events.MESSAGE_TO_PLAYER, {\r\n                            message: \"Unknown player, message not sent.\",\r\n                        } as IMessageToPlayerArgs);\r\n                    }\r\n\r\n                } else {\r\n                    this.context.connection.sendCommand(command, args || \"\");\r\n                }\r\n            }\r\n            this.hide();\r\n        }\r\n    }\r\n}\r\n","import { KEY_CODES } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { IKeyboardArgs } from \"../../events/event-args/ikeyboard-args\";\r\nimport { AircraftSelection } from \"./aircraft-selection\";\r\nimport { ApplyUpgrades } from \"./apply-upgrades\";\r\nimport { ChatInput } from \"./chat-input\";\r\nimport { PlayerDropDownMenu } from \"./player-dropdownmenu\";\r\nimport { DropFlag } from \"./drop-flag\";\r\nimport { AutoFire } from \"./auto-fire\";\r\nimport { Spectate } from \"./spectate\";\r\n\r\nexport class KeyboardAndMouseInput {\r\n\r\n    constructor(\r\n        private context: IContext,\r\n        private chatInput: ChatInput,\r\n        private applyUpgrades: ApplyUpgrades,\r\n        private dropFlag: DropFlag,\r\n        private autoFire: AutoFire,\r\n        private spectate: Spectate,\r\n        private aircraftSelection: AircraftSelection,\r\n        private playerDropdownMenu: PlayerDropDownMenu) {\r\n\r\n        document.addEventListener(\"keydown\", (e) => this.onKey(e, true));\r\n        document.addEventListener(\"keyup\", (e) => this.onKey(e, false));\r\n\r\n        const canvas = document.getElementById(\"canvas\");\r\n        canvas.addEventListener(\"mousedown\", (e) => this.onMouseFire(e, true));\r\n        canvas.addEventListener(\"mouseup\", (e) => this.onMouseFire(e, false));\r\n\r\n        // listen for clicks on usernames in chat and player list\r\n        const chat = document.getElementById(\"chat\");\r\n        const playerList = document.getElementById(\"player-list\");\r\n        chat.addEventListener(\"mouseup\", (e) => this.onMouseUpInChatOrPlayerList(e, false));\r\n        chat.addEventListener(\"contextmenu\", (e) => this.onMouseUpInChatOrPlayerList(e, true));\r\n        playerList.addEventListener(\"mouseup\", (e) => this.onMouseUpInChatOrPlayerList(e, false));\r\n        playerList.addEventListener(\"contextmenu\", (e) => this.onMouseUpInChatOrPlayerList(e, true));\r\n    }\r\n\r\n    private onMouseUpInChatOrPlayerList(e: MouseEvent, isContextMenu: boolean) {\r\n        // if the landing page is still shown, do nothing here\r\n        if (!this.context.isActive) {\r\n            return;\r\n        }\r\n\r\n        const element = e.target as HTMLElement;\r\n        if (!element.className || element.className.indexOf(\"player-name\") === -1) {\r\n            this.playerDropdownMenu.hide();\r\n            return;\r\n        }\r\n\r\n        if (!isContextMenu && e.button === 2) {\r\n            // regular right-click will be handled by contextmenu event.\r\n            return;\r\n        }\r\n\r\n        const playerName = element.dataset.name;\r\n        const playerId = element.dataset.id;\r\n\r\n        this.playerDropdownMenu.show(e.x, e.y, playerId, playerName);\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private onMouseFire(e: MouseEvent, isButtonDown: boolean) {\r\n        // if the landing page is still shown, do nothing here\r\n        if (!this.context.isActive) {\r\n            return;\r\n        }\r\n\r\n        this.context.eventQueue.pub(Events.KEYBOARD, { key: KEY_CODES.FIRE, state: isButtonDown } as IKeyboardArgs);\r\n\r\n        this.playerDropdownMenu.hide();\r\n    }\r\n\r\n    private onKey(e: KeyboardEvent, isKeyDown: boolean) {\r\n\r\n        // if the landing page is still shown, do nothing here\r\n        if (!this.context.isActive) {\r\n            return;\r\n        }\r\n\r\n        const isChatInputFocused = this.chatInput.isChatInputFocused();\r\n\r\n        // do limited key detection when typing in the chat box\r\n        if (isChatInputFocused) {\r\n            if (isKeyDown) {\r\n                if (e.keyCode === 27) {\r\n                    this.chatInput.hide();\r\n                }\r\n\r\n                if (e.keyCode === 13) {\r\n                    this.chatInput.submit();\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        let preventDefault = false;\r\n        let keyToSend: KEY_CODES;\r\n        switch (e.keyCode) {\r\n            case 16: // Shift\r\n            case 17: // Control\r\n                keyToSend = KEY_CODES.SPECIAL;\r\n                break;\r\n\r\n            case 32: // Space\r\n                keyToSend = KEY_CODES.FIRE;\r\n                break;\r\n\r\n            case 65: // A\r\n            case 37: // Left\r\n                preventDefault = true;\r\n                keyToSend = KEY_CODES.LEFT;\r\n                break;\r\n\r\n            case 87: // W\r\n            case 38: // Up\r\n                preventDefault = true;\r\n                keyToSend = KEY_CODES.UP;\r\n                break;\r\n\r\n            case 68: // D\r\n            case 39: // Right\r\n                preventDefault = true;\r\n                keyToSend = KEY_CODES.RIGHT;\r\n                break;\r\n\r\n            case 83: // S\r\n            case 40: // Down\r\n                preventDefault = true;\r\n                keyToSend = KEY_CODES.DOWN;\r\n                break;\r\n\r\n            case 13: // Enter\r\n                if (isKeyDown) {\r\n                    this.chatInput.showAndFocus();\r\n                }\r\n                break;\r\n\r\n            case 86: // v\r\n                if (isKeyDown) {\r\n                    this.spectate.spectate();\r\n                }\r\n                break;\r\n\r\n            case 88: // x\r\n                if (isKeyDown) {\r\n                    this.applyUpgrades.dropUpgrade();\r\n                }\r\n                break;\r\n\r\n            case 89: // y\r\n                if (isKeyDown) {\r\n                    this.dropFlag.dropFlag();\r\n                }\r\n                break;\r\n\r\n            case 90: // z\r\n                if (isKeyDown) {\r\n                    this.autoFire.toggleAutoFire();\r\n                }\r\n                break;\r\n\r\n            case 49: // 1\r\n            case 50: // 2\r\n            case 51: // 3\r\n            case 52: // 4\r\n                if (isKeyDown) {\r\n                    this.applyUpgrades.applyUpgrade(\"\" + (e.keyCode - 48));\r\n                }\r\n                break;\r\n\r\n            case 112: // F1\r\n            case 113: // F2\r\n            case 114: // F3\r\n            case 115: // F4\r\n            case 116: // F5\r\n                preventDefault = true;\r\n                if (isKeyDown) {\r\n                    this.aircraftSelection.selectAircraft(\"\" + (e.keyCode - 111));\r\n                }\r\n\r\n        }\r\n\r\n        if (keyToSend && !e.repeat) {\r\n            // if bot is active: stop it.\r\n            this.context.botstate.stop();\r\n\r\n            this.context.eventQueue.pub(Events.KEYBOARD, { key: keyToSend, state: isKeyDown } as IKeyboardArgs);\r\n        }\r\n\r\n        if (preventDefault) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import { FLAGS_CODE_TO_ISO, GAME_TYPES } from \"../../ab-protocol/src/lib\";\r\nimport { BrowserContext } from \"../browser-context\";\r\nimport { Renderer } from \"../renderers/renderer\";\r\nimport { ChatInput } from \"./chat-input\";\r\n\r\nexport class PlayerDropDownMenu {\r\n    private readonly menu: HTMLDivElement;\r\n    private readonly menuTitle: HTMLDivElement;\r\n    private readonly menuStats: HTMLDivElement;\r\n\r\n    private currentId: number;\r\n    private currentName: string;\r\n\r\n    constructor(private context: BrowserContext, private chatInput: ChatInput, private renderer: Renderer) {\r\n        this.menu = document.getElementById(\"player-context-menu\") as HTMLDivElement;\r\n        this.menuTitle = document.getElementById(\"menu-title\") as HTMLDivElement;\r\n        this.menuStats = document.getElementById(\"menu-stats\") as HTMLDivElement;\r\n\r\n        // add handlers\r\n        const items = this.menu.getElementsByClassName(\"menu-item\");\r\n        for (const item of items) {\r\n            item.addEventListener(\"click\", () => this.onMenuItemClicked(item));\r\n        }\r\n    }\r\n\r\n    public show(x: number, y: number, id: string, name: string) {\r\n        this.menu.style.left = x + \"px\";\r\n        this.menu.style.top = y + \"px\";\r\n        this.menu.style.display = \"block\";\r\n\r\n        this.currentId = Number(id);\r\n        this.currentName = decodeURI(name);\r\n\r\n        const player = this.context.state.getPlayerById(Number(id));\r\n\r\n        this.menuTitle.innerText = this.currentName;\r\n        this.menuStats.innerText =\r\n            \"Kills: \" + player.kills + \"; Deaths: \" + player.deaths + \"\\n\" +\r\n            \"Damage: \" + player.damage + \"; Ping: \" + player.ping +\r\n            (this.context.gameType === GAME_TYPES.CTF ? \"\\nCaptures: \" + (player.captures ?? 0) : \"\");\r\n    }\r\n\r\n    public hide() {\r\n        this.menu.style.display = \"none\";\r\n    }\r\n\r\n    private onMenuItemClicked(item: Element) {\r\n        this.hide();\r\n\r\n        const player = this.context.state.getPlayerById(this.currentId);\r\n\r\n        if (!player || player.name === \"Server\") {\r\n            return;\r\n        }\r\n\r\n        switch (item.id) {\r\n            case \"menu-flag\":\r\n                this.context.connection.sendCommand(\"flag\", FLAGS_CODE_TO_ISO[\"\" + player.flag]);\r\n                break;\r\n\r\n            case \"menu-whisper\":\r\n                this.chatInput.startChat(`/w ${this.currentName} `);\r\n                break;\r\n\r\n            case \"menu-ignore\":\r\n                this.renderer.ignorePlayer(player.id);\r\n                this.renderer.addMessageToPlayer(\"Player chats will be ignored for player \" + player.name);\r\n                break;\r\n\r\n            case \"menu-unignore\":\r\n                this.renderer.unignorePlayer(player.id);\r\n                this.renderer.addMessageToPlayer(\"Removed player from the ignore list.\");\r\n                break;\r\n\r\n            case \"menu-votemute\":\r\n                this.context.connection.voteMute(player.id);\r\n                this.renderer.addMessageToPlayer(\"You have voted to mute player \" + player.name);\r\n                break;\r\n\r\n            case \"menu-locate\":\r\n                this.renderer.highlightPlayerOnMinimap(player.id);\r\n                break;\r\n\r\n            case \"menu-spectate\":\r\n                // start spectating\r\n                if (!this.context.state.spectatingId) {\r\n                    this.context.connection.sendCommand(\"spectate\", \"-3\");\r\n                }\r\n                // spectate player\r\n                this.context.connection.sendCommand(\"spectate\", player.id + \"\");\r\n                break;\r\n\r\n            case \"menu-kill\":\r\n                this.context.botstate.playerToKill = player.id;\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\nimport { KEY_CODES } from \"../ab-protocol/src/lib\";\r\n\r\nexport class StayActiveHandler implements IMessageHandler {\r\n    public handles = [Events.EACH_SECOND];\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n\r\n        // only do this when spectating\r\n        if (!this.context.state.spectatingId) {\r\n            return;\r\n        }\r\n\r\n        this.context.connection.sendKey(KEY_CODES.SPECIAL, true);\r\n    }\r\n\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\nimport { GAME_TYPES } from \"../../ab-protocol/src/lib\";\r\n\r\nexport class DropFlag {\r\n    constructor(private context: IContext) {\r\n\r\n        const drop = document.getElementById(\"drop-flag\");\r\n        drop.onclick = () => this.dropFlag();\r\n    }\r\n\r\n    public dropFlag() {\r\n        this.context.connection.sendCommand(\"drop\", \"\");\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\nimport { KEY_CODES } from \"../../ab-protocol/src/lib\";\r\n\r\nexport class AutoFire {\r\n    constructor(private context: IContext) {\r\n        const autofireButton = document.getElementById(\"auto-fire\");\r\n        autofireButton.onclick = () => this.toggleAutoFire();\r\n    }\r\n\r\n    public toggleAutoFire() {\r\n        this.context.botstate.autoFire = !this.context.botstate.autoFire;\r\n        this.context.botstate.autoFireToggledManually = this.context.botstate.autoFire;\r\n    }\r\n}\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { KEY_CODES } from \"../ab-protocol/src/lib\";\r\n\r\nconst AUTOFIRE_THRESHOLD_MS = 250;\r\nexport class AutoFireHandler implements IMessageHandler {\r\n    public handles = [Events.TICK];\r\n\r\n    private timer = new StopWatch();\r\n    private wasAutoFiring = false;\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n\r\n        if (!this.wasAutoFiring && !this.context.botstate.autoFire) {\r\n            return;\r\n        }\r\n\r\n        if (this.timer.elapsedMs < AUTOFIRE_THRESHOLD_MS) {\r\n            return;\r\n        }\r\n\r\n        this.timer.start();\r\n\r\n        this.context.connection.sendKey(KEY_CODES.FIRE, this.context.botstate.autoFire);\r\n        this.wasAutoFiring = this.context.botstate.autoFire;\r\n    }\r\n\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\n\r\nexport class Spectate {\r\n    constructor(private context: IContext) {\r\n\r\n        const drop = document.getElementById(\"spectate\");\r\n        drop.onclick = () => this.spectate();\r\n    }\r\n\r\n    public spectate() {\r\n        this.context.connection.sendCommand(\"spectate\", \"-3\");\r\n    }\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\nimport { ServerMessage } from \"../../ab-protocol/src/types/packets-server\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { StopWatch } from \"../../helpers/stopwatch\";\r\n\r\nexport class SwitchSides {\r\n\r\n    private timer: StopWatch;\r\n\r\n    constructor(private context: IContext) {\r\n\r\n        const switchSides = document.getElementById(\"switch-sides\");\r\n        switchSides.onclick = () => this.switch();\r\n    }\r\n\r\n    public switch() {\r\n        // prevent an endless loop if spectating fails\r\n        if (this.timer && this.timer.elapsedSeconds > 5) {\r\n            this.showMessage(\"Switch failed, giving up.\")\r\n            this.timer = null;\r\n            return;\r\n        }\r\n\r\n        if (!this.timer) {\r\n            this.timer = new StopWatch();\r\n        }\r\n\r\n        const c = this.context;\r\n\r\n        if (c.botstate.isOn()) {\r\n            this.showMessage(\"Switching, stopping automatic activity...\");\r\n            c.botstate.stop(true);\r\n            c.tm.setTimeout(() => this.switch(), 2000);\r\n            return;\r\n        }\r\n\r\n        if (!c.state.spectatingId) {\r\n            this.showMessage(\"Switching, entering spec mode...\")\r\n            c.connection.sendCommand(\"spectate\", \"-3\");\r\n            c.tm.setTimeout(() => this.switch(), 500 + this.timer.elapsedMs / 4);\r\n            return;\r\n        }\r\n\r\n        this.timer = null;\r\n        this.showMessage(\"Switching...\")\r\n        c.connection.sendCommand(\"switch\", \"\");\r\n        c.tm.setTimeout(() => {\r\n            this.showMessage(\"Switching, respawning...\")\r\n            const myAircraft = c.state.getPlayerById(c.state.myPlayerId);\r\n            c.connection.sendCommand(\"respawn\", myAircraft.type.toString());\r\n        }, 500);\r\n    }\r\n\r\n    private showMessage(msg: string) {\r\n        const servermessage = {\r\n            text: msg,\r\n            duration: 1000\r\n        } as ServerMessage;\r\n\r\n        this.context.eventQueue.pub(Events.SERVER_ANNOUNCEMENT, servermessage);\r\n    }\r\n}\r\n","import { IPos } from \"../models/ipos\";\r\n\r\nexport class Rotation {\r\n    static getAngleDiff(current: number, target: number): number {\r\n        return Math.atan2(Math.sin(target - current), Math.cos(target - current));\r\n    }\r\n\r\n    static getTargetRotation(pos1: IPos, pos2: IPos): number {\r\n        let theta = Math.atan2(pos2.x - pos1.x, pos1.y - pos2.y);\r\n        if (theta < 0) {\r\n            theta += Math.PI * 2;\r\n        }\r\n\r\n        return theta;\r\n    }\r\n}","import { SHIPS_SPECS } from \"../ab-assets/ships-constants\";\r\nimport { KEY_CODES } from \"../ab-protocol/src/lib\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { Rotation } from \"../helpers/rotation\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { Player } from \"../models/player\";\r\n\r\nconst MS_PER_SEC = 1000;\r\nconst FPS = 60;\r\nconst MS_PER_FRAME = MS_PER_SEC / FPS;\r\n\r\nexport class FaceLocationExecutor {\r\n\r\n    constructor(private context: IContext, private me: Player, private locationToFace: IPos) {\r\n\r\n    }\r\n\r\n    public execute() {\r\n\r\n        if (this.context.botstate.turningTimeout) {\r\n            return;\r\n        }\r\n\r\n        const pos = this.locationToFace;\r\n\r\n        const targetRotation = Rotation.getTargetRotation(this.me.pos, pos);\r\n        const rotDiff = Rotation.getAngleDiff(this.me.rot, targetRotation);\r\n        const absDiff = Math.abs(rotDiff);\r\n\r\n        let key: KEY_CODES;\r\n        let otherKey: KEY_CODES;\r\n        if (rotDiff > 0) {\r\n            key = KEY_CODES.RIGHT;\r\n            otherKey = KEY_CODES.LEFT;\r\n        } else {\r\n            key = KEY_CODES.LEFT;\r\n            otherKey = KEY_CODES.RIGHT;\r\n        }\r\n\r\n        // turnfactor = turning distance per frame\r\n        const turnFactor = SHIPS_SPECS[this.me.type].turnFactor;\r\n        const framesNeededToTurn = absDiff / turnFactor\r\n        const duration = framesNeededToTurn * MS_PER_FRAME;\r\n        this.context.botstate.enqueueKey(key, true, duration);\r\n        this.context.botstate.enqueueKey(otherKey, false);\r\n    }\r\n}","import { IPos } from \"../models/ipos\";\r\n\r\nexport class Delta {\r\n    public diffX: number;\r\n    public diffY: number;\r\n    public distance: number;\r\n\r\n    public static getDelta(first: IPos, second: IPos): Delta {\r\n        if (!first || !second) {\r\n            return null;\r\n        }\r\n\r\n        const diffX = second.x - first.x;\r\n        const diffY = second.y - first.y;\r\n        const distance = Math.sqrt(diffX * diffX + diffY * diffY);\r\n        return {\r\n            diffX,\r\n            diffY,\r\n            distance\r\n        };\r\n    }\r\n}","import { IPos } from \"../models/ipos\";\r\n\r\nconst MS_PER_SEC = 1000;\r\nconst FPS = 60;\r\nconst MS_PER_FRAME = MS_PER_SEC / FPS;\r\n\r\nexport class Prediction {\r\n    static predictPosition(pos: IPos, speed: IPos, lookaheadMs: number): IPos {\r\n        if (!speed || !pos) {\r\n            return pos;\r\n        }\r\n\r\n        const framesAhead = lookaheadMs / MS_PER_FRAME;\r\n\r\n        const pred: IPos = {\r\n            x: pos.x + speed.x * framesAhead,\r\n            y: pos.y + speed.y * framesAhead\r\n        };\r\n\r\n        return pred;\r\n    }\r\n\r\n}","import { SHIPS_TYPES } from \"../ab-assets/ships-constants\";\r\nimport { KEY_CODES } from \"../ab-protocol/src/lib\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { Delta } from \"../helpers/delta\";\r\nimport { Prediction } from \"../helpers/prediction\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { Player } from \"../models/player\";\r\nimport { FaceLocationExecutor } from \"./face-location-executor\";\r\n\r\nconst DISTANCE_CLOSE = 300;\r\nconst DISTANCE_TOO_CLOSE = 50;\r\nconst DISTANCE_FAR = DISTANCE_CLOSE * 2;\r\n\r\nconst MS_PER_SEC = 1000;\r\nconst FPS = 60;\r\nconst MS_PER_FRAME = MS_PER_SEC / FPS;\r\n\r\ninterface IGotoResult {\r\n    isClose: boolean;\r\n    distance: number;\r\n}\r\n\r\nexport class GotoLocationExecutor {\r\n\r\n    constructor(private context: IContext, private me: Player, private posToGoTo: IPos, private closeness = DISTANCE_CLOSE, private backupIfTooClose: boolean = true) {\r\n    }\r\n\r\n    private finish(isClose: boolean, distance: number): IGotoResult {\r\n        this.context.botstate.path = null;\r\n        this.context.botstate.enqueueKey(KEY_CODES.UP, false);\r\n        if (this.backupIfTooClose) {\r\n            this.context.botstate.enqueueKey(KEY_CODES.DOWN, true);\r\n        }\r\n        return { isClose, distance };\r\n    }\r\n\r\n    public execute(tickDuration: number, allowBoostRange: number = DISTANCE_FAR): IGotoResult {\r\n        const { distance } = Delta.getDelta(this.me.pos, this.posToGoTo);\r\n\r\n        this.context.botstate.distanceToTarget = Math.round(distance);\r\n\r\n        if (distance < DISTANCE_TOO_CLOSE) {\r\n            return this.finish(true, distance);\r\n        }\r\n\r\n        this.context.botstate.initPathFindingWorker();\r\n\r\n        if (this.context.botstate.needsNewPath) {\r\n            // avoid players and missiles\r\n            const avoid: IPos[] = [];\r\n            for (const p of this.context.state.getPlayers()) {\r\n                if (p.id === this.me.id || p.id === this.context.botstate.playerToKill) {\r\n                    continue;\r\n                }\r\n                avoid.push(Prediction.predictPosition(p.mostReliablePos, p.speed, tickDuration));\r\n            }\r\n            for (const m of this.context.state.getMissiles()) {\r\n                if (m.team === this.me.team) {\r\n                    continue;\r\n                }\r\n                avoid.push(Prediction.predictPosition(m.pos, m.speed, tickDuration));\r\n            }\r\n\r\n            this.context.botstate.calcPath({\r\n                pos1: this.me.pos,\r\n                pos2: this.posToGoTo,\r\n                aircraftType: this.me.type,\r\n                pointsToAvoid: avoid\r\n            });\r\n        }\r\n\r\n        if (!this.context.botstate.path) {\r\n            // still calculating\r\n            return { isClose: false, distance };\r\n        }\r\n\r\n        const path = this.context.botstate.path;\r\n        const nextStep = this.nextStep(path, tickDuration);\r\n        if (!nextStep) {\r\n            return this.finish(true, distance);\r\n        }\r\n\r\n        const faceLocation = new FaceLocationExecutor(this.context, this.me, nextStep);\r\n        faceLocation.execute();\r\n\r\n        const isClose = distance < this.closeness;\r\n        if (isClose) {\r\n            return this.finish(true, distance);\r\n        } else {\r\n            this.context.botstate.enqueueKey(KEY_CODES.UP, true);\r\n\r\n            if (this.me.type === SHIPS_TYPES.PREDATOR) {\r\n                this.context.botstate.autoBoost = distance > allowBoostRange;\r\n            }\r\n        }\r\n        return { isClose, distance };\r\n    }\r\n\r\n    nextStep(path: IPos[], tickDurationMs: number) {\r\n        const firstStep = path[0];\r\n        if (!firstStep) {\r\n            return null;\r\n        }\r\n        const { distance } = Delta.getDelta(this.me.mostReliablePos, firstStep);\r\n\r\n        const numFramesInPrevTick = tickDurationMs / MS_PER_FRAME;\r\n        const distancePrevTick = Math.sqrt(Math.pow(this.me.speed.y, 2) + Math.pow(this.me.speed.x, 2)) * numFramesInPrevTick;\r\n        if (distance > distancePrevTick * 3) {\r\n            this.context.botstate.path = path.slice(1);\r\n\r\n            return firstStep;\r\n        }\r\n\r\n        return this.nextStep(path.slice(1), tickDurationMs);\r\n    }\r\n}","import { FLAG_DEFAULT_POSITION } from \"../../ab-assets/ctf-constants\";\r\nimport { CTF_FLAG_STATE, CTF_TEAMS, KEY_CODES, PLAYER_STATUS } from \"../../ab-protocol/src/lib\";\r\nimport { IContext } from \"../../app-context/icontext\";\r\nimport { FaceLocationExecutor } from \"../../botting/face-location-executor\";\r\nimport { GotoLocationExecutor } from \"../../botting/goto-location-executor\";\r\nimport { Events } from \"../../events/constants\";\r\nimport { EventMessage } from \"../../events/event-message\";\r\nimport { StopWatch } from \"../../helpers/stopwatch\";\r\nimport { IPos } from \"../../models/ipos\";\r\nimport { IMessageHandler } from \"../imessage-handler\";\r\n\r\nconst BOT_TICK_MS = 250;\r\nconst SHOOTING_RANGE = 1000;\r\n\r\nexport class BotHeartbeatHandler implements IMessageHandler {\r\n\r\n    public handles = [Events.TICK];\r\n\r\n    private timer = new StopWatch(BOT_TICK_MS);\r\n\r\n    constructor(private context: IContext) {\r\n        this.timer.start();\r\n    }\r\n\r\n    public exec(ev: EventMessage): void {\r\n        if (!this.timer.hasTimedOut) {\r\n            return;\r\n        }\r\n\r\n        if (this.context.botstate.autoPilotToFlag) {\r\n            this.autoPilot();\r\n        } else if (this.context.botstate.playerToKill) {\r\n            this.followPlayer();\r\n        }\r\n\r\n        this.doSteering();\r\n\r\n        this.timer.start();\r\n    }\r\n\r\n    private autoPilot() {\r\n\r\n        const otherTeam = this.context.state.getOtherCtfTeam(this.context.state.team);\r\n        if (!otherTeam) {\r\n            return;\r\n        }\r\n        const me = this.context.state.getFocusedPlayer();\r\n\r\n        let posToGoTo: IPos = otherTeam.flagPos;\r\n        if (otherTeam.flagState === CTF_FLAG_STATE.DYNAMIC) {\r\n            // flag is on the move\r\n            if (otherTeam.flagTakenById === this.context.state.myPlayerId) {\r\n                // I'm carrying the flag\r\n                // fly back to our own flag\r\n                if (this.context.state.team === CTF_TEAMS.BLUE) {\r\n                    posToGoTo = FLAG_DEFAULT_POSITION.blue;\r\n                } else {\r\n                    posToGoTo = FLAG_DEFAULT_POSITION.red;\r\n                }\r\n            } else {\r\n                const carrier = this.context.state.getPlayerById(otherTeam.flagTakenById);\r\n                if (carrier) {\r\n                    posToGoTo = carrier.mostReliablePos;\r\n                }\r\n            }\r\n        }\r\n\r\n        const goto = new GotoLocationExecutor(this.context, me, posToGoTo, 10, false);\r\n        goto.execute(this.timer.elapsedMs);\r\n\r\n    }\r\n\r\n    private followPlayer() {\r\n        const killPlayer = this.context.state.getPlayerById(this.context.botstate.playerToKill);\r\n\r\n        if (!killPlayer) {\r\n            this.context.botstate.playerToKill = null;\r\n            return;\r\n        }\r\n\r\n        if (killPlayer.status !== PLAYER_STATUS.ALIVE) {\r\n            return;\r\n        }\r\n\r\n        const me = this.context.state.getFocusedPlayer();\r\n        const posToGoTo = killPlayer.mostReliablePos;\r\n\r\n        const goto = new GotoLocationExecutor(this.context, me, posToGoTo);\r\n        const { isClose, distance } = goto.execute(this.timer.elapsedMs, SHOOTING_RANGE);\r\n\r\n        if (isClose) {\r\n            const faceLocation = new FaceLocationExecutor(this.context, me, posToGoTo);\r\n            faceLocation.execute();\r\n        }\r\n\r\n        if (distance < SHOOTING_RANGE) {\r\n            this.context.botstate.autoFire = true;\r\n        } else {\r\n            this.context.botstate.autoFire = false;\r\n        }\r\n    }\r\n\r\n    private doSteering() {\r\n        const keyInstructions = this.context.botstate.eatKeyQueue();\r\n\r\n        const allKeys = [KEY_CODES.UP, KEY_CODES.DOWN, KEY_CODES.LEFT, KEY_CODES.RIGHT, KEY_CODES.FIRE, KEY_CODES.SPECIAL];\r\n\r\n        // only send the last state per key of all instructions\r\n        for (const keyCode of allKeys) {\r\n            for (let i = keyInstructions.length - 1; i >= 0; i--) {\r\n                const instr = keyInstructions[i];\r\n                if (instr.key === keyCode) {\r\n                    // in case of duration (= turning during a certain time, or boosting), only send the key if we aren't doing it already.\r\n                    if (instr.duration > 0) {\r\n                        // check if we can reserve a timeout slot\r\n                        const timeoutAcquired = this.context.botstate.requestTimeoutFor(instr);\r\n\r\n                        if (timeoutAcquired) {\r\n                            this.context.connection.sendKey(instr.key, instr.state);\r\n                        }\r\n                    } else {\r\n                        this.context.connection.sendKey(instr.key, instr.state);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { IContext } from \"../../app-context/icontext\";\r\n\r\nexport class AutoPilotToFlag {\r\n    constructor(private context: IContext) {\r\n\r\n        const button = document.getElementById(\"fly-to-flag\");\r\n        button.onclick = () => this.autoPilotToFlag();\r\n    }\r\n\r\n    public autoPilotToFlag() {\r\n\r\n        this.context.botstate.autoPilotToFlag = !this.context.botstate.autoPilotToFlag;\r\n    }\r\n}\r\n","import { IContext } from \"../app-context/icontext\";\r\nimport { Events } from \"../events/constants\";\r\nimport { EventMessage } from \"../events/event-message\";\r\nimport { IMessageHandler } from \"./imessage-handler\";\r\nimport { StopWatch } from \"../helpers/stopwatch\";\r\nimport { KEY_CODES } from \"../ab-protocol/src/lib\";\r\n\r\nconst AUTOBOOST_THRESHOLD_MS = 1000;\r\n\r\nexport class AutoBoostHandler implements IMessageHandler {\r\n    public handles = [Events.TICK];\r\n\r\n    private timer = new StopWatch();\r\n    private wasAutoBoosting = false;\r\n\r\n    constructor(private context: IContext) {\r\n    }\r\n\r\n    public exec(ev: EventMessage) {\r\n\r\n        if (!this.wasAutoBoosting && !this.context.botstate.autoBoost) {\r\n            return;\r\n        }\r\n\r\n        if (this.timer.elapsedMs < AUTOBOOST_THRESHOLD_MS) {\r\n            return;\r\n        }\r\n\r\n        const enemyTeam = this.context.state.getOtherCtfTeam(this.context.state.team);\r\n        if (enemyTeam && enemyTeam.flagTakenById === this.context.state.myPlayerId) {\r\n            return;\r\n        }\r\n\r\n        this.timer.start();\r\n\r\n        this.context.connection.sendKey(KEY_CODES.SPECIAL, this.context.botstate.autoBoost);\r\n        this.wasAutoBoosting = this.context.botstate.autoBoost;\r\n    }\r\n\r\n}\r\n","module.exports = require('./lib/axios');","export class GameEndpoint {\r\n    public type: number;\r\n    public id: string;\r\n    public name: string;\r\n    public nameShort: string;\r\n    public host: string;\r\n    public path: string;\r\n    public players: number;\r\n}\r\n","import { GameEndpoint } from \"./game-endpoint\";\r\n\r\nexport class ServerRegion {\r\n    public name: string;\r\n    public id: string;\r\n    public games: GameEndpoint[];\r\n}\r\n","import { ServerRegion } from \"./server-region\";\r\n\r\nexport class    ServerRegionInfoDto {\r\n    public country: string;\r\n    public protocol: number;\r\n    public data: ServerRegion[];\r\n}\r\n","import axios from \"axios\";\r\nimport { GameEndpoint } from \"../models/game-endpoint\";\r\nimport { ServerRegion } from \"../models/server-region\";\r\nimport { ServerRegionInfoDto } from \"../models/server-region-info\";\r\n\r\nconst GAMES_URL = \"https://data.airmash.online/games?main=1&_=\";\r\nconst FALLBACK_URL = \"https://raw.githubusercontent.com/airmash-refugees/airmash-games/master/games.txt?_=\";\r\nconst LOCAL_SERVER_URL = process.env.LOCAL_SERVER_URL; \r\n\r\nexport class ServerGamesRepository {\r\n\r\n    private addLocalServerUrl(serverInfo: ServerRegionInfoDto) {\r\n\r\n        // if running locally, add the local server url to connect to\r\n        if (!LOCAL_SERVER_URL) {\r\n            return;\r\n        } \r\n\r\n        const localUrl = new URL(LOCAL_SERVER_URL);\r\n\r\n        serverInfo.data.unshift({\r\n            games: [{\r\n                host: localUrl.host,\r\n                id: \"local\",\r\n                name: \"Local\",\r\n                nameShort: \"local\",\r\n                path: localUrl.pathname.slice(1), // this doesn't matter if running locally\r\n                players: 0,\r\n                type: localUrl.protocol === \"ws:\" ? 0 : 1, // this probably doesnt matter too, use it as an http indicator\r\n            } as GameEndpoint],\r\n            id: \"local\",\r\n            name: \"Local\",\r\n        } as ServerRegion);\r\n    }\r\n\r\n    public async getServerInfo(): Promise<ServerRegionInfoDto> {\r\n\r\n        let result: ServerRegionInfoDto;\r\n\r\n        try {\r\n            const response = await axios.get(GAMES_URL + Date.now());\r\n            const data = response.data;\r\n\r\n            // the data property in the response is again stringified\r\n            data.data = JSON.parse(data.data);\r\n            result = data;\r\n\r\n        } catch (error) {\r\n\r\n            result = await this.getFallbackData();\r\n\r\n        }\r\n\r\n        this.addLocalServerUrl(result);\r\n\r\n        return result;\r\n    }\r\n\r\n    private async getFallbackData(): Promise<ServerRegionInfoDto> {\r\n        // fallback data\r\n        const response = await axios.get(FALLBACK_URL + Date.now());\r\n        const data: string = response.data;\r\n        const lines = data.split(\"\\n\");\r\n\r\n        const result = new ServerRegionInfoDto();\r\n        result.country = \"?\";\r\n        result.protocol = 1;\r\n        result.data = [];\r\n        for (const line of lines) {\r\n            const fields = line.split(\"|\");\r\n            let region = result.data.find((x) => x.name === fields[0]);\r\n            if (!region) {\r\n                region = new ServerRegion();\r\n                region.name = fields[0];\r\n                region.id = fields[0];\r\n                region.games = [];\r\n                result.data.push(region);\r\n            }\r\n\r\n            const game = new GameEndpoint();\r\n            game.name = fields[3];\r\n            game.nameShort = fields[4];\r\n            game.host = fields[5];\r\n            game.path = fields[6];\r\n\r\n            region.games.push(game);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","export class StylesRepository {\r\n\r\n    private lastUrl = \"styles/default/\";\r\n\r\n    public async loadStyle(url: string): Promise<any> {\r\n\r\n        // replace all image files with this style\r\n        const images = document.querySelectorAll(\"img\");\r\n        for (const img of images) {\r\n            img.src = img.src.replace(this.lastUrl, url);\r\n        }\r\n\r\n        // replace css link in header\r\n        const link = document.getElementById(\"ui-styling\") as HTMLLinkElement;\r\n        link.href = link.href.replace(this.lastUrl, url);\r\n\r\n        this.lastUrl = url;\r\n    }\r\n}\r\n","import { AuthData } from \"../app-context/auth-data\";\r\nimport { BrowserContext } from \"./browser-context\";\r\n\r\nconst LOGIN_URL = \"https://login.airmash.online\";\r\nconst AUTH_DATA_KEY = \"auth-data\";\r\n\r\nexport class ThirdPartyLogin {\r\n\r\n    private loginButton: HTMLButtonElement;\r\n    private loginSelector: HTMLDivElement;\r\n    private overlay: HTMLDivElement;\r\n    private loginMessage: HTMLSpanElement;\r\n\r\n    private loginToken: string;\r\n    private usedProvider: number;\r\n\r\n    private orgLoginMessageText: string;\r\n    private orgLoginButtonText: string;\r\n\r\n    constructor(private context: BrowserContext) {\r\n\r\n        this.loginButton = document.getElementById(\"loginButton\") as HTMLButtonElement;\r\n        this.loginSelector = document.getElementById(\"loginselector\") as HTMLDivElement;\r\n        this.overlay = document.getElementById(\"overlay\") as HTMLDivElement;\r\n        this.loginMessage = document.getElementById(\"loginMessage\") as HTMLSpanElement;\r\n\r\n        this.orgLoginMessageText = this.loginMessage.innerHTML;\r\n        this.orgLoginButtonText = this.loginButton.value;\r\n\r\n        this.loginButton.addEventListener(\"click\", () => {\r\n            const isLoggedIn = !!this.context.auth;\r\n\r\n            if (isLoggedIn) {\r\n                this.logout();\r\n            } else {\r\n                // show login stuff\r\n                this.overlay.style.display = \"block\";\r\n                this.loginSelector.style.display = \"block\";\r\n            }\r\n        });\r\n\r\n        this.overlay.addEventListener(\"click\", () => this.finish());\r\n\r\n        const loginButtons = document.querySelectorAll(\".loginbutton\");\r\n\r\n        for (const btn of loginButtons) {\r\n            const provider = btn.getAttribute(\"data-provider\");\r\n            btn.addEventListener(\"click\", () => this.loginPopup(Number(provider)));\r\n        }\r\n\r\n        this.loadPreviousLoginData();\r\n    }\r\n\r\n    private async loadPreviousLoginData() {\r\n        try {\r\n            const raw = localStorage.getItem(AUTH_DATA_KEY);\r\n            if (raw) {\r\n                const data = JSON.parse(raw) as AuthData;\r\n                this.context.auth = data;\r\n            }\r\n        } catch (error) {\r\n            this.context.logger.error(\"Auth data could not be loaded\", error);\r\n        }\r\n\r\n        this.toggleLoginMessage();\r\n    }\r\n\r\n    private toggleLoginMessage() {\r\n        const isLoggedIn = !!this.context.auth;\r\n\r\n        if (isLoggedIn) {\r\n            this.loginButton.value = \"Log out\";\r\n            this.loginMessage.innerHTML = `Logged in as ${this.context.auth.loginName}`;\r\n        } else {\r\n            this.loginButton.value = this.orgLoginButtonText;\r\n            this.loginMessage.innerHTML = this.orgLoginMessageText;\r\n        }\r\n    }\r\n\r\n    private finish() {\r\n        this.overlay.style.display = \"none\";\r\n        this.loginSelector.style.display = \"none\";\r\n    }\r\n\r\n    private getRandomToken(length: number) {\r\n        let token = window.crypto.getRandomValues(new Uint32Array(1))[0].toString(16);\r\n        if (length - token.length > 0) {\r\n            token += this.getRandomToken(length - token.length);\r\n        }\r\n        return token.substr(0, length);\r\n    }\r\n\r\n    /*\r\n     * The popup window opened on login.airmash.online ends up posting a message\r\n     * back to the main window like so:\r\n     *\r\n     *   <html>\r\n     *     <head>\r\n     *       <script type=\"text/javascript\">\r\n     *         function closePopup(){\r\n     *           window.opener.postMessage({\r\n     *               nonce:       \"…\",  // randomly generated by client, for CSRF prevention\r\n     *               tokens:      \"…\",  // tokens used by client to authenticate with settings service and game servers\r\n     *               provider:     …,   // number indicating which identity provider  }- these are for client\r\n     *               loginname:   \"…\",  // account name or email                      }  display only\r\n     *              }, \"https://…\"); // expected to match origin of window.opener e.g. https://airmash.online\r\n     *           window.close();\r\n     *         }\r\n     *       </script>\r\n     *     </head>\r\n     *     <body onload=\"closePopup()\"></body>\r\n     *   </html>\r\n     *\r\n     * On the original airma.sh, the login window could call window.opener.loginSuccess()\r\n     * directly as they had the same origin. But now we will want to use the same login\r\n     * flow from multiple domains (airmash.online, starma.sh, test.airmash.online, ...),\r\n     * therefore use Window.postMessage() and Window.addEventListener() for cross-origin\r\n     * communication\r\n     *\r\n     */\r\n    private loginPopup(provider: number) {\r\n        window.addEventListener(\"message\", (e) => this.receiveLoginMessage(e), { once: true });\r\n        this.usedProvider = provider;\r\n        this.loginToken = this.getRandomToken(32);\r\n        const url = `${LOGIN_URL}/login?provider=${provider}&nonce=${this.loginToken}&origin=${window.origin}`;\r\n\r\n        const width = provider === 4 ? 900 : 400;\r\n        const height = provider === 5 ? 800 : 600;\r\n        this.openLoginWindow(url, \"Login\", width, height);\r\n    }\r\n\r\n    private openLoginWindow(url: string, windowTitle: string, width: number, height: number) {\r\n        const screenLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n        const screenTop = window.screenTop ? window.screenTop : window.screenY;\r\n        const left = (window.innerWidth ? window.innerWidth :\r\n            document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width)\r\n            / 2 - width / 2 + screenLeft;\r\n        const top = (window.innerHeight ? window.innerHeight :\r\n            document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height)\r\n            / 2 - height / 2 + screenTop;\r\n\r\n        window.open(url, windowTitle, \"width=\" + width + \", height=\" + height + \", top=\" + top + \", left=\" + left);\r\n    }\r\n\r\n    private receiveLoginMessage(e: any) {\r\n        if (e.origin !== LOGIN_URL) {\r\n            this.context.logger.error(\"bad origin for login message: \" + e.origin);\r\n            return;\r\n        }\r\n\r\n        if (e.data.provider !== this.usedProvider) {\r\n            this.context.logger.error(\"identity provider does not match: \" + e.data.provider);\r\n            return;\r\n        }\r\n\r\n        if (e.data.nonce !== this.loginToken) {\r\n            this.context.logger.error(\"nonce does not match: \" + e.data.nonce);\r\n            return;\r\n        }\r\n\r\n        this.loginToken = null;\r\n        this.usedProvider = null;\r\n\r\n        this.loginSuccess({\r\n            identityProvider: e.data.provider as number,\r\n            loginName: e.data.loginname as string,\r\n            tokens: e.data.tokens as { game: string, settings: string },\r\n        } as AuthData);\r\n    }\r\n\r\n    private loginSuccess(data: AuthData) {\r\n        this.context.auth = data;\r\n\r\n        localStorage.setItem(AUTH_DATA_KEY, JSON.stringify(data));\r\n\r\n        this.toggleLoginMessage();\r\n        this.finish();\r\n    }\r\n\r\n    private logout() {\r\n        localStorage.removeItem(AUTH_DATA_KEY);\r\n        this.context.auth = null;\r\n\r\n        this.toggleLoginMessage();\r\n    }\r\n}\r\n","declare var timestamp: string;\r\n\r\nimport { BotState } from \"./botting/bot-state\";\r\nimport { BrowserContext } from \"./browser-impl/browser-context\";\r\nimport { LandingPage } from \"./browser-impl/landing-page\";\r\n\r\nBotState.createPathFindingWorker = () => new Worker('browser-worker.js?v=' + timestamp);\r\n\r\nconst landingPage = new LandingPage(new BrowserContext());\r\nlandingPage.run();\r\n\r\n","\r\nimport Cookies from \"js-cookie\";\r\nimport { COUNTRY_NAMES } from \"../ab-protocol/src/lib\";\r\nimport { Settings } from \"../app-context/settings\";\r\nimport { ServerGamesRepository } from \"../helpers/games-repository\";\r\nimport { StylesRepository } from \"../helpers/styles-repository\";\r\nimport { GameEndpoint } from \"../models/game-endpoint\";\r\nimport { ServerRegion } from \"../models/server-region\";\r\nimport { BrowserContext } from \"./browser-context\";\r\nimport { ThirdPartyLogin } from \"./thirdparty-login\";\r\n\r\nexport class LandingPage {\r\n\r\n    private serverGamesRepository: ServerGamesRepository;\r\n    private stylesRepository: StylesRepository;\r\n    private nameInput: HTMLInputElement;\r\n    private styleSelect: HTMLSelectElement;\r\n    private zoomSelect: HTMLSelectElement;\r\n    private loadConstantsPromise: Promise<any>;\r\n\r\n    private thirdPartyLogin: ThirdPartyLogin;\r\n\r\n    constructor(private context: BrowserContext) {\r\n        this.serverGamesRepository = new ServerGamesRepository();\r\n        this.stylesRepository = new StylesRepository();\r\n\r\n        this.nameInput = document.getElementById(\"playerName\") as HTMLInputElement;\r\n        this.styleSelect = document.getElementById(\"styleSelect\") as HTMLSelectElement;\r\n        this.zoomSelect = document.getElementById(\"zoomSelect\") as HTMLSelectElement;\r\n\r\n        this.thirdPartyLogin = new ThirdPartyLogin(context);\r\n    }\r\n\r\n    public async run(): Promise<void> {\r\n        this.doBackground();\r\n\r\n        await this.populateServerList();\r\n\r\n        this.loadAllFlags();\r\n        this.fillInPrevSettings();\r\n\r\n        this.loadConstantsPromise = this.stylesRepository.loadStyle(\"styles/default/\");\r\n\r\n        this.styleSelect.addEventListener(\"change\", () => {\r\n            if (this.styleSelect.value !== \"no-bitmaps\") {\r\n                this.loadConstantsPromise = this.stylesRepository.loadStyle(this.styleSelect.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    private fillInPrevSettings() {\r\n        const prevSettingsString = Cookies.get(\"settings\");\r\n        if (!prevSettingsString) {\r\n            return;\r\n        }\r\n\r\n        const prevSettings = JSON.parse(prevSettingsString) as Settings;\r\n\r\n        this.nameInput.value = prevSettings.playerName;\r\n        this.select(this.zoomSelect, prevSettings.zoom.toString());\r\n\r\n        if (!prevSettings.useBitmaps) {\r\n            this.styleSelect.options[1].selected = true;\r\n        }\r\n    }\r\n\r\n    private select(selectElement: HTMLSelectElement, value: string) {\r\n        for (const option of selectElement.options) {\r\n            if (option.value === value) {\r\n                option.selected = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private async startGame(websocketUrl: string) {\r\n\r\n        this.context.settings.playerName = this.nameInput.value || \"Unknown\";\r\n        this.context.settings.websocketUrl = websocketUrl;\r\n        this.context.settings.zoom = Number(this.zoomSelect.value) || 1;\r\n        this.context.settings.useBitmaps = this.styleSelect.value !== \"no-bitmaps\";\r\n        this.context.settings.horizonX = window.innerWidth / 2;\r\n        this.context.settings.horizonY = window.innerHeight / 2;\r\n\r\n        Cookies.set(\"settings\", JSON.stringify(this.context.settings), { expires: 365 });\r\n\r\n        document.getElementById(\"nameAndGame\").style.display = \"none\";\r\n        document.getElementById(\"chat\").style.display = \"block\";\r\n        document.getElementById(\"chat-input\").style.display = \"block\";\r\n        document.getElementById(\"aircraftSelection\").style.display = \"block\";\r\n        document.getElementById(\"stats\").style.display = \"block\";\r\n        document.getElementById(\"upgradeSelection\").style.display = \"block\";\r\n        document.getElementById(\"actionButtons\").style.display = \"block\";\r\n        document.getElementById(\"minimap\").style.display = \"block\";\r\n        document.getElementById(\"player-list\").style.display = \"block\";\r\n        document.getElementById(\"server-message\").style.display = \"block\";\r\n\r\n        if (location.href.indexOf(\"debug\") > -1) {\r\n            document.getElementById(\"debugPanel\").style.display = \"block\";\r\n            this.context.settings.shouldShowDebugInfo = true;\r\n        }\r\n\r\n        await this.loadConstantsPromise;\r\n\r\n        // ctf-block will be shown later\r\n        window.document.body.style.backgroundImage = \"inherit\";\r\n        this.context.start();\r\n\r\n        // expose context to manipulation in F12 :)\r\n        (window as any).gameContext = this.context;\r\n    }\r\n\r\n    private async populateServerList() {\r\n        const serverInfo = await this.serverGamesRepository.getServerInfo();\r\n\r\n        const flag = Cookies.get(\"flag\") || serverInfo.country;\r\n        this.context.settings.flag = flag;\r\n\r\n        const gamesContainer = document.getElementById(\"games\");\r\n        const table = document.createElement(\"table\");\r\n        table.innerHTML = \"<tr><th>Region</th><th>Game</th><th>Players online</th><th></th></tr>\";\r\n        gamesContainer.append(table);\r\n\r\n        for (const server of serverInfo.data) {\r\n            for (const game of server.games) {\r\n                const row = document.createElement(\"tr\");\r\n                table.append(row);\r\n\r\n                const cellRegion = document.createElement(\"td\");\r\n                row.append(cellRegion);\r\n                cellRegion.innerText = server.name;\r\n                cellRegion.className = \"region\";\r\n\r\n                const cellGameName = document.createElement(\"td\");\r\n                row.append(cellGameName);\r\n                cellGameName.innerText = game.name;\r\n                cellGameName.className = \"game-name\";\r\n\r\n                const cellNumPlayers = document.createElement(\"td\");\r\n                row.append(cellNumPlayers);\r\n                cellNumPlayers.innerText = game.players || game.players === 0 ? game.players.toString() : \"?\";\r\n                cellNumPlayers.className = \"num-players\";\r\n\r\n                const cellButton = document.createElement(\"td\");\r\n                row.append(cellButton);\r\n                const button = document.createElement(\"input\") as HTMLInputElement;\r\n                cellButton.append(button);\r\n                cellButton.className = \"start-button\";\r\n                button.type = \"button\";\r\n                button.value = \"Start\";\r\n\r\n                let protocol = \"wss\";\r\n                if (game.type === 0) {\r\n                    protocol = \"ws\"; // no https\r\n                }\r\n                const url = `${protocol}://${game.host}/${game.path}`;\r\n                button.onclick = () => this.startGame(url);\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadAllFlags() {\r\n        for (const flag of Object.keys(COUNTRY_NAMES)) {\r\n            const img = document.createElement(\"img\");\r\n            img.src = `flags/${flag}.png`;\r\n            img.style.display = \"none\";\r\n            img.id = `flag-${flag}`;\r\n            document.body.appendChild(img);\r\n        }\r\n    }\r\n\r\n    private doBackground() {\r\n        const map = document.getElementById(\"map\") as HTMLImageElement;\r\n        window.document.body.style.backgroundImage = `url(${map.src})`;\r\n        window.document.body.style.backgroundSize = \"cover\";\r\n    }\r\n}\r\n","import { GAME_TYPES } from \"../ab-protocol/src/lib\";\r\nimport { AuthData } from \"../app-context/auth-data\";\r\nimport { EventQueueProcessor } from \"../app-context/eventqueue-processor\";\r\nimport { HandlerCollections } from \"../app-context/handler-collections\";\r\nimport { IContext } from \"../app-context/icontext\";\r\nimport { ILogger } from \"../app-context/ilogger\";\r\nimport { IWebSocketFactory } from \"../app-context/iwebsocket-factory\";\r\nimport { Settings } from \"../app-context/settings\";\r\nimport { State } from \"../app-context/state\";\r\nimport { TimerManager } from \"../app-context/timer-manager\";\r\nimport { Connection } from \"../connectivity/connection\";\r\nimport { EventQueue } from \"../events/event-queue\";\r\nimport { BrowserVisibilityHandler } from \"../handlers/browser-visibility-handler\";\r\nimport { FlagCookieHandler } from \"../handlers/flag-cookie-handler\";\r\nimport { IMessageHandler } from \"../handlers/imessage-handler\";\r\nimport { ChatRenderHandler } from \"../handlers/render/chat-render-handler\";\r\nimport { CtfGameOverRenderHandler } from \"../handlers/render/ctf-game-over-render-handler\";\r\nimport { EachSecondRenderHandler } from \"../handlers/render/each-second-render-handler\";\r\nimport { ExplosionVisualizationHandler } from \"../handlers/render/explosion-visualization-handler\";\r\nimport { GameRenderHandler } from \"../handlers/render/game-render-handler\";\r\nimport { GoliFartVisualizationHandler } from \"../handlers/render/golifart-visualization-handler\";\r\nimport { KillVisualizationHandler } from \"../handlers/render/kill-visualization-handler\";\r\nimport { MissileChemtrailHandler } from \"../handlers/render/missile-chemtrail-handler\";\r\nimport { ServerAnnouncementRenderHandler } from \"../handlers/render/server-announcement-render-handler\";\r\nimport { ShakeAndShowMessageOnKillHandler } from \"../handlers/render/shake-and-show-message-on-kill-handler\";\r\nimport { ShakeOnHitHandler } from \"../handlers/render/shake-on-hit-handler\";\r\nimport { BrowserInitialization } from \"./browser-initialization\";\r\nimport { BrowserLogger } from \"./browser-logger\";\r\nimport { BrowserWebSocketFactory } from \"./browser-websocket-factory\";\r\nimport { Renderer } from \"./renderers/renderer\";\r\nimport { AircraftSelection } from \"./user-input/aircraft-selection\";\r\nimport { ApplyUpgrades } from \"./user-input/apply-upgrades\";\r\nimport { ChatInput } from \"./user-input/chat-input\";\r\nimport { KeyboardAndMouseInput } from \"./user-input/keyboard-and-mouse-input\";\r\nimport { PlayerDropDownMenu } from \"./user-input/player-dropdownmenu\";\r\nimport { StayActiveHandler } from \"../handlers/stay-active-handler\";\r\nimport { DropFlag } from \"./user-input/drop-flag\";\r\nimport { AutoFire } from \"./user-input/auto-fire\";\r\nimport { AutoFireHandler } from \"../handlers/auto-fire-handler\";\r\nimport { Spectate } from \"./user-input/spectate\";\r\nimport { SwitchSides } from \"./user-input/switch-sides\";\r\nimport { BotState } from \"../botting/bot-state\";\r\nimport { BotHeartbeatHandler } from \"../handlers/bot/bot-heartbeat-handler\";\r\nimport { AutoPilotToFlag } from \"./user-input/autopilot-to-flag\";\r\nimport { AutoBoostHandler } from \"../handlers/auto-boost-handler\";\r\n\r\nexport class BrowserContext implements IContext {\r\n    public gameType: GAME_TYPES;\r\n    public settings: Settings;\r\n    public logger: ILogger;\r\n    public eventQueue: EventQueue;\r\n    public tm: TimerManager;\r\n    public processor: EventQueueProcessor;\r\n    public state: State;\r\n    public handlers: IMessageHandler[];\r\n    public webSocketFactory: IWebSocketFactory;\r\n    public connection: Connection;\r\n    public isActive: boolean;\r\n    public auth: AuthData;\r\n\r\n    // browser-only:\r\n    public isBrowserVisible: boolean;\r\n    public renderer = new Renderer(this);\r\n    public botstate = new BotState(this);\r\n    private chatInput = new ChatInput(this);\r\n    private aircraftSelection = new AircraftSelection(this);\r\n    private upgradeSelection = new ApplyUpgrades(this);\r\n    private dropFlag = new DropFlag(this);\r\n    private autofire = new AutoFire(this);\r\n    private spectate = new Spectate(this);\r\n    private autoPilotToFlag = new AutoPilotToFlag(this);\r\n    private switchSides = new SwitchSides(this); // adds event handler to button\r\n    private playerDropdownMenu = new PlayerDropDownMenu(this, this.chatInput, this.renderer);\r\n    private browserInitialization = new BrowserInitialization(this);\r\n    private browserVisibilityHandler = new BrowserVisibilityHandler(this);\r\n\r\n    private keyboardInput = new KeyboardAndMouseInput(\r\n        this,\r\n        this.chatInput,\r\n        this.upgradeSelection,\r\n        this.dropFlag,\r\n        this.autofire,\r\n        this.spectate,\r\n        this.aircraftSelection,\r\n        this.playerDropdownMenu);\r\n\r\n    constructor() {\r\n\r\n        this.browserInitialization.detectVisibilityChange();\r\n        this.browserInitialization.throttleZoom();\r\n\r\n        this.logger = new BrowserLogger();\r\n        this.webSocketFactory = new BrowserWebSocketFactory();\r\n\r\n        this.settings = new Settings();\r\n        this.eventQueue = new EventQueue();\r\n        this.tm = new TimerManager();\r\n        this.processor = new EventQueueProcessor(this);\r\n        this.state = new State();\r\n        this.connection = new Connection(this);\r\n\r\n        this.handlers = [\r\n            ...HandlerCollections.getDefaultHandlers(this),\r\n            new ExplosionVisualizationHandler(this),\r\n            new KillVisualizationHandler(this),\r\n            new GoliFartVisualizationHandler(this),\r\n            new GameRenderHandler(this),\r\n            new ChatRenderHandler(this),\r\n            new EachSecondRenderHandler(this),\r\n            new ServerAnnouncementRenderHandler(this),\r\n            new CtfGameOverRenderHandler(this),\r\n            new ShakeAndShowMessageOnKillHandler(this),\r\n            new ShakeOnHitHandler(this),\r\n            new FlagCookieHandler(this),\r\n            new MissileChemtrailHandler(this),\r\n            // client tools\r\n            new StayActiveHandler(this),\r\n            new AutoFireHandler(this),\r\n            new AutoBoostHandler(this),\r\n\r\n            // bot\r\n            new BotHeartbeatHandler(this)\r\n        ];\r\n    }\r\n\r\n    public async start(): Promise<any> {\r\n        this.logger.info(\"Initializing app\");\r\n        this.processor.startProcessingEventQueue();\r\n\r\n        await this.connection.init();\r\n        this.isActive = true;\r\n        this.logger.info(\"Initialization finished\");\r\n    }\r\n\r\n    public setBrowserVisibility(isVisible: boolean) {\r\n        this.isBrowserVisible = isVisible;\r\n        if (!isVisible) {\r\n            this.browserVisibilityHandler.clearKeys();\r\n        }\r\n    }\r\n}\r\n"],"names":["$57966c7e0affc4cb$var$axios","$57966c7e0affc4cb$var$createInstance","defaultConfig","context","$ewFRw","instance","$jJbMR","prototype","request","$gKvUL","extend","create","instanceConfig","$lk5EI","Axios","Cancel","parcelRequire","CancelToken","isCancel","VERSION","version","all","promises","Promise","spread","isAxiosError","module","exports","default","$c319b2c832c2914a$var$toString","Object","toString","$c319b2c832c2914a$var$isArray","val","Array","isArray","$c319b2c832c2914a$var$isUndefined","$c319b2c832c2914a$var$isArrayBuffer","call","$c319b2c832c2914a$var$isObject","$c319b2c832c2914a$var$isPlainObject","getPrototypeOf","$c319b2c832c2914a$var$isFunction","$c319b2c832c2914a$var$forEach","obj","fn","i","l","length","key","hasOwnProperty","isArrayBuffer","isBuffer","constructor","isFormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","isStandardBrowserEnv","navigator","product","window","document","forEach","merge","$c319b2c832c2914a$var$merge","result","assignValue","slice","arguments","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","args","apply","$a93486d2307f31c3$var$validators","$bv3QM","validators","$a93486d2307f31c3$var$Axios","this","defaults","interceptors","$83RYu","response","configOrUrl","config","url","Error","method","toLowerCase","transitional","undefined","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","promise","responseInterceptorChain","push","chain","$dlZEJ","concat","resolve","then","shift","newConfig","onFulfilled","onRejected","error","error1","reject","getUri","$cbIsf","params","paramsSerializer","data","$8df8fedf1c1e4428$var$encode","encodeURIComponent","serializedParams","parts","v","toISOString","JSON","stringify","join","hashmarkIndex","indexOf","$5de878cd737ef277$var$InterceptorManager","handlers","use","options","eject","id","h","$9b8d10189805ccc0$var$throwIfCancellationRequested","cancelToken","throwIfRequested","signal","aborted","$4Tkeq","headers","$7YJ0v","transformRequest","common","adapter","$lJY4v","transformResponse","reason","$7L4QX","fns","$hPtJY","$fd3c65eeb28abd71$var$DEFAULT_CONTENT_TYPE","$fd3c65eeb28abd71$var$setContentTypeIfUnset","value","$fd3c65eeb28abd71$var$defaults","XMLHttpRequest","$kiL6T","rawValue","parser","encoder","parse","e","name","$fd3c65eeb28abd71$var$stringifySafely","strictJSONParsing","responseType","$8v8A7","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","Accept","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e1","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$drainQueue","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","toUpperCase","code","toJSON","message","description","number","fileName","lineNumber","columnNumber","stack","onCanceled","requestData","requestHeaders","done","unsubscribe","removeEventListener","auth","username","password","unescape","Authorization","btoa","fullPath","$7GD7a","baseURL","onloadend","responseHeaders","$lDriZ","getAllResponseHeaders","responseText","statusText","$kk0E9","err","open","onreadystatechange","readyState","responseURL","onabort","$kjF3e","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","$889er","$8JRzs","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","send","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","requestedURL","$ckHwb","$fE4ul","test","relativeURL","$fc026bbf9ee156f1$var$ignoreDuplicateOf","parsed","split","line","substr","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","$38fbfe0afbd5bf1e$var$Cancel","__CANCEL__","config1","config2","getMergedValue","target","source","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","transport","httpAgent","httpsAgent","socketPath","responseEncoding","keys","configValue","$85f59389941e7907$var$validators","thing","$85f59389941e7907$var$deprecatedWarnings","validator","formatMessage","opt","desc","$85f59389941e7907$require$VERSION","opts","console","warn","schema","allowUnknown","TypeError","$fb81495929d8a282$var$CancelToken","executor","resolvePromise","token","_listeners","onfulfilled","_resolve","listener","index","splice","c","callback","arr","payload","$e097e23fe9578079$export$49cb77d19e897fe6","$e097e23fe9578079$export$bd6a5472535ccab5","$e097e23fe9578079$export$e16542dee1cf1467","$18e45e7867169046$export$2e2bcd8739ae039","LOGIN","BACKUP","HORIZON","ACK","PONG","KEY","COMMAND","SCOREDETAILED","CHAT","WHISPER","SAY","TEAMCHAT","VOTEMUTE","LOCALPING","$1c411432bfef9709$export$2e2bcd8739ae039","PING","PING_RESULT","ERROR","COMMAND_REPLY","PLAYER_NEW","PLAYER_LEAVE","PLAYER_UPDATE","PLAYER_FIRE","PLAYER_HIT","PLAYER_RESPAWN","PLAYER_FLAG","PLAYER_KILL","PLAYER_UPGRADE","PLAYER_TYPE","PLAYER_POWERUP","PLAYER_LEVEL","PLAYER_RETEAM","GAME_FLAG","GAME_SPECTATE","GAME_PLAYERSALIVE","GAME_FIREWALL","EVENT_REPEL","EVENT_BOOST","EVENT_BOUNCE","EVENT_STEALTH","EVENT_LEAVEHORIZON","MOB_UPDATE","MOB_UPDATE_STATIONARY","MOB_DESPAWN","MOB_DESPAWN_COORDS","CHAT_PUBLIC","CHAT_TEAM","CHAT_SAY","CHAT_WHISPER","CHAT_VOTEMUTEPASSED","CHAT_VOTEMUTED","SCORE_UPDATE","SCORE_BOARD","SCORE_DETAILED","SCORE_DETAILED_CTF","SCORE_DETAILED_BTR","SERVER_MESSAGE","SERVER_CUSTOM","$77aedac665eeb9f9$export$68317eef4cf08696","DATA_TYPES","text","textbig","arraysmall","uint8","uint16","uint24","uint32","float32","float64","speed","accel","coordx","coordy","coord24","rotation","healthenergy","regen","$93253a2a814802d6$export$2e2bcd8739ae039","$31f2d7946cdadaba$export$2e2bcd8739ae039","$8c40ee774dfe65ed$export$fcabffea81927cf1","s","Uint8Array","ci","bytes","c2","subarray","$d65546d13b8ceefe$var$staticAckPacket","DataView","setUint8","$d65546d13b8ceefe$var$staticScoredetailedPacket","msg","session","flag","dataView","offset","charOffset","charOffset1","setUint16","horizonX","horizonY","charOffset2","setUint32","num","seq","state","com","$065ec9a64641db80$var$staticBackupPacket","$065ec9a64641db80$var$staticAckPacket","$065ec9a64641db80$var$staticChatVotemutedPacket","arrStrings","arrStringsOffset","arraysSize","players","i1","bots","room","serverConfiguration","success","team","clock","i2","level","posX","posY","rot","upgrades","charOffset3","i3","ping","playerstotal","playersgame","isBot","keystate","u8","u16","value1","u81","u161","speedX","speedY","projectiles","energy","energyRegen","accelX","accelY","maxSpeed","owner","health","healthRegen","killer","defense","missile","duration","blueteam","redteam","setFloat32","radius","mobs","playerHealth","playerHealthRegen","boost","from","to","score","earnings","totalkills","totaldeaths","rankings","x","y","scores","kills","deaths","damage","captures","alive","wins","$8b72c93c7e6c3a89$var$encodedStrings","storage","last","put","flush","$8b72c93c7e6c3a89$var$calcBufferLength","dataSchema","fieldIndex","fieldName","fieldType","subSchema","fieldData","$8b72c93c7e6c3a89$var$fillBufferWithData","startOffset","encodedString","arrayElementIndex","setFloat64","$8b72c93c7e6c3a89$var$marshal","usePredefinedMarshal","messageCode","predefMarshal","$d65546d13b8ceefe$export$2e2bcd8739ae039","$065ec9a64641db80$export$2e2bcd8739ae039","bufferLength","$03d3c2a8bad48c0b$var$staticAckPacket","readIndex","getUint8","stringLength","charIndex","$8c40ee774dfe65ed$export$2a3384f9191ce613","stringLength1","encodedString1","charIndex1","getUint16","stringLength2","encodedString2","charIndex2","getUint32","$03d3c2a8bad48c0b$var$staticScoredetailedPacket","$58e127a82d4b4c67$var$staticBackupPacket","$58e127a82d4b4c67$var$staticAckPacket","arrayLength","arrayElement","stringLength3","encodedString3","charIndex3","arrayLength1","arrayElement1","getFloat32","$58e127a82d4b4c67$var$staticChatVotemutedPacket","$c6f1544c12e7055a$var$unmarshal","$03d3c2a8bad48c0b$export$2e2bcd8739ae039","$58e127a82d4b4c67$export$2e2bcd8739ae039","startReadIndex","subSchemaFieldIndex","subFieldName","subFieldType","getFloat64","u162","u163","$c6f1544c12e7055a$var$readBufferData","$76f6b37726981285$export$5fb656eb8279cede","KEY_CODES","assign","entries","map","$87b45d444a9d6cc7$export$e9ee844dcc7f0271","SERVER_ERRORS","$87b45d444a9d6cc7$export$42a822ee93e68ea","SERVER_MESSAGE_TYPES","$87b45d444a9d6cc7$export$37c60925b115eafe","COMMAND_REPLY_TYPES","$87b45d444a9d6cc7$export$acf2bb14e0f91565","LEAVE_HORIZON_TYPES","$87b45d444a9d6cc7$export$696edb37a517566d","MOB_TYPES","$87b45d444a9d6cc7$export$a1106979a67ebdb7","MOB_DESPAWN_TYPES","$87b45d444a9d6cc7$export$b46071ccfafa6f3d","PLAYER_LEVEL_UPDATE_TYPES","$87b45d444a9d6cc7$export$757f4d82d38e44cb","PLAYER_STATUS","$87b45d444a9d6cc7$export$1adcfbf43f9c9a1f","PLAYER_UPGRADE_TYPES","SERVER_CUSTOM_TYPES","PLAYER_POWERUP_TYPES","CTF_TEAMS","$87b45d444a9d6cc7$export$dc70d30ea27a9c84","CTF_FLAG_STATE","$87b45d444a9d6cc7$export$2e3eef2b8eccf7df","CTF_CAPTURE_BOUNTY","$87b45d444a9d6cc7$export$2da22006ffea76d","BTR_FIREWALL_STATUS","$87b45d444a9d6cc7$export$8c774bfef34b3c59","CTF_WIN_BOUNTY","$87b45d444a9d6cc7$export$617502ab31fc951c","BTR_WIN_BOUNTY","$87b45d444a9d6cc7$export$8b45ddaeb7c31e28","GAME_TYPES","$87b45d444a9d6cc7$export$92da91fbfb7b66aa","$87b45d444a9d6cc7$export$91e7ecb6780caa5e","$87b45d444a9d6cc7$export$d26f8cc6b574a220","$f956132f61210f83$export$66d1dac76b8287de","$f956132f61210f83$export$c5279c2d460d3a22","numCode","charCode","AL","DZ","AD","AQ","AR","AM","AU","AT","AZ","BH","BD","BY","BE","BT","BO","BA","BR","BG","CA","CL","CN","CO","COMMUNIST","CONFEDERATE","CR","HR","CU","CY","CZ","DK","DO","KP","EC","EG","SV","EE","EU","FI","FR","GE","DE","GR","GT","HN","HK","HU","IS","IMPERIAL","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JOLLY","JO","KZ","KW","LV","LB","LY","LI","LT","LU","MO","MK","MY","MT","MX","MD","MC","ME","MA","NP","NL","NZ","NG","NO","OM","PK","PA","PY","PE","PH","PL","PT","PR","QA","RAINBOW","RO","RU","SM","SA","RS","SG","SK","SI","SO","ZA","KR","ES","LK","SE","CH","SY","TW","TZ","TH","TT","TN","TR","TM","UA","AE","GB","UN","$d5bae74266feebd6$export$81184b07be21e3c8","$d5bae74266feebd6$export$3a66bae294e393e3","UP","DOWN","LEFT","RIGHT","strafe","stealthed","flagspeed","$ed2bcfa6a550406e$export$81ce11201617bceb","static","performance","timeoutMs","start","startTime","performanceNow","elapsedMs","elapsedSeconds","elapsedMinutes","hasTimedOut","timeoutFraction","$bbad732aa541d8da$export$7e611eda647c99e9","keyQueue","isWorkerInitializing","stopwatchAfterCalculatingPath","initPathFindingWorker","calculatingPathStopwatch","logger","pathFindingWorker","terminate","createPathFindingWorker","onmessage","calculatedPath","needsNewPath","calcPath","postMessage","stop","force","playerToKill","autoPilotToFlag","autoBoost","autoFireToggledManually","autoFire","isOn","enqueueKey","eatKeyQueue","requestTimeoutFor","instr","SPECIAL","boostTimeout","connection","sendKey","botstate","turningTimeout","$9968c76574ffabad$export$ada873a34909da65","Events","$7477aee85877c805$export$a532fd855d35deb0","skippedFrames","startProcessingEventQueue","handlersByType","handler","eventType","handles","handlersForType","tm","setInterval","tick","Math","floor","$7477aee85877c805$var$MS_PER_SEC","stopwatch","tickCounter","eachSecondStopwatch","lag","getLagMs","diffTime","tooEarly","frameFactor","eventQueue","pub","TICK","frame","timeFromStart","EACH_SECOND","nextMessage","dequeue","process","exec","getOwnPropertyNames","$918741f7904e4de8$export$e6367b8bc557b579","CHAT_SEND","ev","sendChat","playerId","$88bf5f73dfa5b57a$export$940315a71f02c017","KEYBOARD","keyArgs","$c524a7a8ab7a657e$export$fdf35536e9a0700c","$c524a7a8ab7a657e$export$4748fae0954bb8cb","MIN_X","MIN_Y","MAX_X","MAX_Y","$c524a7a8ab7a657e$export$9000cfdce9ac9444","$c114b7c070aa477c$export$561ea5be705b6dda","$c114b7c070aa477c$export$54b64fe98c3ef41a","PREDATOR_MISSILE","baseSpeed","speedFactor","infernoSpeedFactor","infernoDamageFactor","distance","shape","repelEnergy","GOLIATH_MISSILE","COPTER_MISSILE","TORNADO_MISSILE","TORNADO_SMALL_MISSILE","PROWLER_MISSILE","$bdf85e9274c899ea$export$be4b57d101c7dae0","getMissiles","missileParams","mobType","prevSpeedX","prevSpeedY","hypot","pos","removeMob","$da9f0f51a11e6713$export$aa1d7fff11452d37","PREDATOR","GOLIATH","COPTER","TORNADO","PROWLER","$da9f0f51a11e6713$export$25d724bb7d1b6bc6","$da9f0f51a11e6713$export$637dcfd116ceec58","$da9f0f51a11e6713$var$missileTemplate","alt","$da9f0f51a11e6713$var$missileFireTemplate","def","special","$da9f0f51a11e6713$export$637dcfd116ceec58_DEFAULT","$da9f0f51a11e6713$export$637dcfd116ceec58_SPECIAL","$da9f0f51a11e6713$export$de794ad9b3d6afb7","turnFactor","accelFactor","brakeFactor","boostFactor","infernoFactor","minSpeed","flagSpeed","fireEnergy","specialEnergy","specialEnergyRegen","specialDelay","fireDelay","damageFactor","energyLight","collisions","$da9f0f51a11e6713$export$25d724bb7d1b6bc6_FIRE","$da9f0f51a11e6713$export$25d724bb7d1b6bc6_INFERNO","$58f54767077d59c0$export$9077c3fe1b08d4a3","SPEED","cost","factor","DEFENSE","ENERGY","MISSILE","$ced59494b384773c$export$1ef0d431ba4bc4d","intervalSeconds","log","info","$c9d1dabe486c787f$export$fbb3d83649f9a651","PI","$c9d1dabe486c787f$export$3fe2f0ec2f7baf97","player","getPlayers","INACTIVE","updatePlayer","aircraftSpecs","isNaN","energyDiff","shieldOrInfernoTimer","powerUps","inferno","shield","flightDirection","speedValue","startSpeedX","startSpeedY","sin","cos","maxspeed","$75d2662fce9f31ac$export$d1763b2f7574d334","CHAT_TYPE","$5fa40ec87f9b6d27$export$648b05ad0bbad899","serverMessage","chatType","CHAT_RECEIVED","chatMessage","TEAM","CHAT_NOT_POSSIBLE_BC_MUTED","CHAT_PLAYER_MUTED","SERVER_COMMAND_REPLY","SERVER_ERROR","PLAYER_BOOST","PLAYER_BOUNCE","LEAVE_HORIZON","PLAYER_REPEL","PLAYER_STEALTH","FLAG_UPDATE","PLAYER_SPECTATE","MOUNTAIN_HIT","MISSILE_UPDATE","CRATE_NEW","PLAYER_CHANGE_FLAG","PLAYER_KILLED","TEAMS","PLAYER_UPGRADE_APPLIED","PLAYER_SWITCH_TYPE","SERVER_ANNOUNCEMENT","scoreBoard","MINI_MAP","detailedFfa","ffaScores","detailedCtf","$ca9820f5036d37f5$var$PI_2","$ca9820f5036d37f5$export$88719fa01a501de5","other","direction","atan2","equals","$adf765773e02547a$export$acd1b67b03820565","highResPos","posUpdateTimer","$94fa898554ce7217$export$9f88de082db26157","m","addMob","$2446cc6c84060fde$export$d62895eb8d0b916a","getCtfTeam","flagState","flagTakenById","flagPos","BLUE","RED","$fdd7de1257b9b446$export$a01bcde5e6e021e8","mobOrPlayer","MOB","getMobById","getPlayerById","isVisibleOnScreen","PLAYER","$30fae0f4ca680a25$export$f9de6ca0bc043724","$eead5056872c678a$export$5258e3695c6fefc5","$4133c675cdad3d12$export$f8aa58de3e528e10","available","$b6a2d44aa9791d0e$export$2616165974278734","posFromMinimap","lowResPos","lowResPosUpdateTimer","super","mostReliablePos","setMovements","movements","$d0b0b7eb832266ba$export$db3f084f2c8a3b67","spectatingId","myPlayerId","gameType","FFA","CTF","ranking","loginPlayer","p","upgradesToPowerUps","addPlayer","$ec2d8b7b79d81cb2$export$7958b285ecb30ff7","playerMinimapPos","focusAircraft","getFocusedPlayer","coords","lower","upper","$87b45d444a9d6cc7$export$fdf35536e9a0700c","WIDTH","HEIGHT","$a649d49a981dd9a5$export$5845cc957b77614a","mob","$6dc87a89c877491b$export$d2e9930cf455f08c","$f0b8393968723d69$export$c0a91f80a79788f6","EXPLOSION","$d7d98d35c0faa128$export$fea50599fc01409f","$8e63836e7c46c518$export$d898c164336326dd","keystateToPlayerMovements","$27cf9cf3dff130c8$export$70a617cba837381c","$f5320996be1a6592$export$beaf5bc61b4858a3","ownerId","$7f286ffdf5de55fc$export$c3f91a347532312c","who","$2da9357579056d37$export$bfdd021ee70e0754","$f80704f7cc52c647$export$4d292aecdc95915f","removePlayer","$ea554d88cfeedeee$export$3e4e3511032a11ab","LEVELUP","MESSAGE_TO_PLAYER","$bbb45b630755c660$export$69e04bbaca85ddb3","$25d613a83ba03cd5$export$15ad0fd328c6f45f","hasShield","SHIELD","hasInferno","INFERNO","$9b3d10c87568acf7$export$c988119c861e542e","repelledPlayer","$2d0ef53fd2504491$export$8ea528941535e4c","ALIVE","$a9b7bfb0626d3bcc$export$cbe3f35926a9221e","$fb756e7a5dff9891$export$552aa09374207b0c","$bea32aa4231249f7$export$8d56994814bcf118","$a8079fb2acd89e54$export$11e4ce01fccd8fec","$74e806647c813a90$export$7f0b08775df8d7fb","u","$13c7f18c1410cbf8$export$c5115ec7ccd55b07","playerScore","$fb4d2b66386f23a2$export$3e74a27329e57bb1","ctfScores","playerScore1","player1","$a910483a07a94a3a$export$bc609f4bf45c2115","$02b46e28b08674ad$export$58ee7786790aca8d","$8a892c33dc7036f0$export$d539ea555dfed31e","SPAM_WARING_RECEIVED","$4905700ae2b83259$export$18eaed6a4a83b967","CTF_GAME_OVER","$2f03cb659e83805a$export$95ba2b88ba93531b","$f1db6ebdfb52ea93$export$1022856bf78f6588","$5aa44addb5d309de$export$1c97c34345443340","$60e13f38b92dc041$export$c72f6eaae7b9adff","websocketUrl","playerName","logLevel","isDevelopment","zoom","useBitmaps","shouldShowDebugInfo","$30bd2ca140c9a447$export$53c071335e90c4fd","$5d431779d34d0e11$var$MISSILES","$5d431779d34d0e11$var$CRATES","UPGRADE","$5d431779d34d0e11$export$7254cc27399e90bd","teams","explosions","farts","rocketTrailClouds","Number","getPlayerByName","find","values","getPlayerName","filter","getUpcrates","getOtherCtfTeam","otherTeam","purgeAfterPanic","addExplosion","expl","getActiveExplosions","activeExplosions","isFinished","addKill","kill","getActiveKills","activeKills","addFart","fart","getActiveFarts","activeFarts","addRocketTrailCloud","cloud","getActiveRocketTrailClouds","activeClouds","$01459c8a440766ec$export$7a3ed086e5f6e799","timeouts","intervals","action","ms","onTimeoutFinished","clearInterval","onIntervalCleared","clearAll","t","$94d961d1016672f2$export$99f1242aa3690c5d","lastPressed","$2678f6b020b306a6$export$98b66c25bb38499d","keySequenceNumber","lagMs","lastReceivedMessages","lastReceivedMessagesGcStopwatch","lastSentKeyStates","async","client","initWebSocket","onInitPrimary","cache","backupClientIsConnected","sendCommand","command","voteMute","fetchDetailedScore","targetPlayerID","sendScreenSize","width","height","ceil","loginPromiseResolver","debug","thirdPartyLogin","tokens","game","settings","ackInterval","ackToBackup","backupClient","close","onInitBackup","resetCalibration","newTime","serverClockCalibrationTimeResetStopwatch","serverClockCalibrationTime","isPrimary","ws","webSocketFactory","binaryType","onopen","$c6f1544c12e7055a$export$f0d21d16879ad2a0","shouldDropMessage","calibrateTime","pingResult","afterLogin","pingResultResult","numPlayers","numPlayersTotal","CONNECTION_ERROR","onclose","CONNECTION_CLOSE","currentServerClock","lastServerClock","elapsedOnServer","diffInMs","existingKey","sendToBackup","clientMgs","$8b72c93c7e6c3a89$export$97bc324abc99862e","$869c996441bfa57f$export$219f39b771ed4b6","$83ea097b3d8b02b5$export$2fc6338444a158e6","queue","$522acc80766a1de1$export$694fff7a1fdd2092","clearKeys","me","FIRE","$666bc8f27f76152a$exports","init","converter","defaultAttributes","set","attributes","toUTCString","escape","stringifiedAttributes","attributeName","get","cookies","jar","foundKey","withAttributes","withConverter","freeze","factory","$5f638201e24c3bf1$export$669c6859c790e38f","$parcel$interopDefault","$3f0b29c9b9b818dd$export$475e1b6ebd5909d3","renderer","addMessageToPlayer","chat","addChat","$107c71edb2e354cd$export$85d64bac6bfa9f17","showServerMessage","INFO","w","$df691a74ed020c82$export$c1d8b1ebee9937a","isBrowserVisible","renderMinimap","renderPlayerList","showPing","showStats","hideServerMessageAfterTimeout","$c2b3a6644f6f2e6b$export$35efb21eaadd6441","size","$c2b3a6644f6f2e6b$var$EXPLOSION_MAX_SIZE","$b305ac19c5b8613b$export$6f5bdb10fc1e8bcf","explosion","$967dee051c5605c1$export$5aeec621b3135ec8","isFirstTick","requestAnimationFrame","renderGame","$cbdec2e48cbf91e1$export$bdcfafbed8199542","$efe7aa38ca456f2f$export$3c77209166e9f341","repel","fartVisual","$e695c6d3a339f041$export$5cf19a33bad8e376","$e695c6d3a339f041$var$KILL_MAX_SIZE","$2b19eb4d00b066ef$export$7844237461c8aa85","killVisual","$b8fd685ca765a2a3$export$53bfe0fb2c2b1f07","spec","cloudTimeoutMs","opacity","cloudGrowMs","opacityGrowStep","max","opacityMax","opacityShrinkStep","sizeStart","sizeGrowStep","sizeMax","sizeShrinkStep","$96b6e4bbf12390cd$var$specs","$96b6e4bbf12390cd$export$c77fe7292020956a","scale","spawnFreq","distribBandwidth","$49a8accf75f9ad17$export$80b0c53878a17868","cloudVisualSpec","getFor","jumpX","jumpY","$b24ad1d080064890$export$c339d1be4f8ccc8c","ALERT","ACCOUNT_BANNED","AFK_DISCONNECT","ALREADY_LOGGED_IN","CHAT_SPAMMING","FLAG_CHANGE_TOO_FAST","FORBIDDEN_TO_CHANGE_PLANE_IN_BTR","GLOBAL_BAN","INCORRECT_PROTOCOL","INVALID_LOGIN_DATA","NOT_ENOUGH_UPGRADES","PACKET_FLOODING_BAN","PACKET_FLOODING_DISCONNECT","PLAYER_KICKED","REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN","REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE","UNKNOWN_COMMAND","UNKNOWN_ERROR","div","innerHTML","innerText","$1d69ee043a1b2d46$export$a6a698d3755b38ea","renderKill","$eb9d75dfdd8bcf6d$export$debf6dbafc38d822","renderHit","$bf23c47bbc5287c8$export$2d4fc1947ee0ef49","detectVisibilityChange","hidden","visibilityChange","msHidden","webkitHidden","isVisible","setBrowserVisibility","throttleZoom","zoomThrottleStopwatch","getElementById","ctrlKey","preventDefault","$45c0f08d71a09fb6$export$f7a7c196f3347cb6","fatal","$388004d7e0733cf6$export$1fc7b7aa89fe6430","WebSocket","$a0ff52c2bc39c2e1$export$c0979c0656c7edae","setClip","canvas","innerWidth","$a0ff52c2bc39c2e1$var$SHAKE_MARGIN","innerHeight","style","left","top","lastWidth","lastHeight","screenSizeX","screenSizeY","myPos","halfWidth","halfHeight","clipRectangle","translate","getClipRectangle","getClipSize","$85dbc8b8658f9f46$export$93fe6a6199f696cb","clip","backgroundImage","renderBackground","clipRect","clipSize","drawImage","fillStyle","constants","BACKGROUND_GRID_COLOR","gridDistance","fillRect","$ccaa89f0ff8dda92$export$874de3a4c08b1e3c","debugPanel","render","lagText","toLocaleString","maximumFractionDigits","minimumFractionDigits","skippedFramesText","$f1e7e6e56a469954$export$18323953f4cd5fe9","renderExplosions","EFFECTS_EXPLOSION_COLOR","clipPos","beginPath","arc","fill","EFFECTS_KILL_COLOR","pos1","clipPos1","EFFECTS_FART_COLOR","pos2","clipPos2","pos3","EFFECTS_MISSILE_BASE_COLOR","clipPos3","cloudSize","$6c828cc0e99890b6$export$94c011cc3650170c","blue","red","$6a2e7908822773d5$export$7c38ebd1f7ca6a5a","blueFlag","redFlag","ctx","redTeam","blueTeam","renderFlag","renderBase","CTF_BLUE_TEAM_COLOR","CTF_RED_TEAM_COLOR","color","leftUpper","$6a2e7908822773d5$var$CTF_BASE_SIZE","rightBottom","scaledBasePos","scaledBaseSize","halfBaseSize","strokeStyle","lineWidth","lineJoin","strokeRect","isFlagVisible","isFlagBeingCarried","DYNAMIC","carrier","clippedFlagPos","scaledWidth","scaledHeight","$088ca4e4a37a500d$var$HALF_MAP_WIDTH","$088ca4e4a37a500d$var$HALF_MAP_HEIGHT","$088ca4e4a37a500d$export$25dfd1a564ba016f","canvasContext","getContext","highlight","playerToHighlight","clearRect","scaleX","scaleY","myId","MINIMAP_HIGHLIGHT_COLOR","$088ca4e4a37a500d$var$MY_RECT_WIDTH","$088ca4e4a37a500d$var$MY_RECT_HEIGHT","MINIMAP_FFA_PLAYER_COLOR","MINIMAP_PLAYER_1_COLOR","MINIMAP_PLAYER_2_COLOR","MINIMAP_PLAYER_3_COLOR","stroke","basePos","scaledPos","ctfFlagHeight","$088ca4e4a37a500d$var$CTF_FLAG_SIZE","$088ca4e4a37a500d$var$CTF_BASE_SIZE","$a778820b52fc3fb6$export$c7649bc6c14cc54c","missileImage","renderMissiles","MISSILE_COLOR","missileScale","rotate","shouldRestoreAlphs","globalAlpha","targetWidth","targetHeight","$f34d2923ac0d5280$export$96efaeec00b6a653","renderPath","count","moveTo","lineTo","font","fillText","distanceToTarget","$7657f5cb72609293$export$e1a40e859738b26d","listElement","sort","MAX_SAFE_INTEGER","rowCount","cellPos","cellFlag","cellName","cellScore","flagImage","row","rows","cells","firstElementChild","insertRow","insertCell","className","appendChild","src","dataset","encodeURI","$07b7249a5d8e4993$export$b9132fa03224950b","flagImages","saysToSay","images","mohawk","prowler","raptor","spirit","tornado","addSay","sw","renderPlayers","scaledFontSize","scaledFlagWidth","scaledFlagPaddingTop","scaledFlagMarginLeft","initFlagImages","isInViewPort","isInvisiblyInViewPort","isStealthyInViewPort","isFriendlyPlayer","isInvisibleProwler","renderAircraft","renderBars","renderName","renderTextBubble","say","PLAYER_SAY_BACKGROUND_COLOR","textWidth","measureText","sayLeft","sayTop","sayMargin","sayHeight","PLAYER_SAY_FOREGROUND_COLOR","nameColor","PLAYER_NAME_COLOR","PLAYER_NAME_NOBITMAP_COLOR","PLAYER_NAME_BLUE_TEAM_COLOR","PLAYER_NAME_RED_TEAM_COLOR","levelPostfix","flagSpace","nameWidth","PLAYER_HEALTH_OK_COLOR","PLAYER_HEALTH_DANGER_COLOR","PLAYER_HEALTH_WARN_COLOR","r","PLAYER_ENERGY_COLOR","PLAYER_SHIELD_COLOR","PLAYER_INFERNO_COLOR","shieldR","$07b7249a5d8e4993$var$HEALTH_ENERGY_BARS_RADIUS","PLAYER_NOBITMAP_BLUE_TEAM_PROWLER_COLOR","PLAYER_NOBITMAP_RED_TEAM_PROWLER_COLOR","PLAYER_NOBITMAP_PROWLER_COLOR","image","imageScale","actionX","actionY","PLAYER_NOBITMAP_BLUE_TEAM_COLOR","PLAYER_NOBITMAP_RED_TEAM_COLOR","PLAYER_NOBITMAP_COLOR","hitCircles","hitCircle","hitCirclePos","r1","$0476f79811a227d4$export$1a91dc5172ef13d1","scoreElement","upgradesElement","killsElement","deathsElement","upgrSpeedElement","upgrDefenseElement","upgrEnergyElement","upgrMissileElement","ctfInfo","blueScore","redScore","blueFlagLocation","redFlagLocation","n","display","blueInfo","redInfo","$aefae086674f5c56$var$CRATE_ROTATION","$aefae086674f5c56$export$8ea12f09ca9c4b43","renderUpcrates","crate","fillColor","UPCRATES_UPGRADE_CRATE_COLOR","UPCRATES_RAMPAGE_CRATE_COLOR","UPCRATES_SHIELD_CRATE_COLOR","halfSize","$aefae086674f5c56$var$CRATE_HALF_SIZE","rect","UPCRATES_BORDER_COLOR","$7982582df104c162$export$538e3d9fdc6b7eea","$6fbb097bbff99c32$export$ad1bda8f994200fe","medium","large","regular","small","smaller","mini","wallNum","wallImages","wall","img","renderWalls","topLeft","bottRight","scaledRadius","scaledradius","WALLS_NOBITMAP_COLOR","$243a668d12848bf5$export$88530751e3977073","ignoredPlayers","getUiElements","periodicLogger","backgroundRenderer","wallsRenderer","flagRenderer","upcratesRenderer","playersRenderer","missilesRenderer","explosionsRenderer","minimapRenderer","playerListRenderer","statsRenderer","debugInfoRenderer","pathRenderer","chatBox","scrollTop","scrollHeight","typeLabel","safePlayerName","durationMs","serverMessageStopwatch","pingElement","highlightPlayerOnMinimap","ignorePlayer","unignorePlayer","stopShaking","canvasCtx","shakeTimeout","$0994f77e21259343$export$407d81fed3aadf8c","onclick","selectAircraft","selection","$01916f20cc6acfae$export$42b438d73b8c4813","applyUpgrade","dropUpgrade","$91c0951a886107eb$export$19b903fd083c557c","commandRegex","input","hide","showAndFocus","focus","startChat","suggestedText","isChatInputFocused","submit","commandMatch","allPlayers","targetPlayer","startsWith","whisperText","$281b583cc7804df9$export$24fb9f64148439b8","chatInput","applyUpgrades","dropFlag","spectate","aircraftSelection","playerDropdownMenu","onKey","onMouseFire","playerList","onMouseUpInChatOrPlayerList","isContextMenu","isActive","element","button","show","stopPropagation","isButtonDown","isKeyDown","keyCode","keyToSend","toggleAutoFire","repeat","$99755b491367fbff$export$45eb9afb13d4eaf2","menu","menuTitle","menuStats","items","getElementsByClassName","item","onMenuItemClicked","currentId","currentName","decodeURI","$4585058afdd09f47$export$258822cc09b57006","$eb2423c71c5b5cec$export$fd6c1e481edfbf49","$94e5356c1e2e427f$export$109633a66cd35549","$1d96c29ebf0e6ca7$export$14da6c45a3a92149","timer","wasAutoFiring","$1f3a6d8bc825c746$export$bda121a3d6c3df26","$eafbdc7589b7c78c$export$8ed2720d4b202729","switch","showMessage","myAircraft","servermessage","$93b2dfe17d3998ce$export$9bdec6016cc824e2","current","theta","$dc39bf6d2a3cff8d$export$d40142cf9c563f29","locationToFace","execute","targetRotation","getTargetRotation","rotDiff","getAngleDiff","absDiff","abs","otherKey","$dc39bf6d2a3cff8d$var$MS_PER_SEC","$3bdf395871f08f45$export$1f333647865369bf","first","second","diffX","diffY","sqrt","$367927effb37cee8$export$e7a0742013817f1a","lookaheadMs","framesAhead","$367927effb37cee8$var$MS_PER_SEC","$bb452d04388de75d$export$b68a86b8e4024f3b","posToGoTo","closeness","backupIfTooClose","finish","isClose","tickDuration","allowBoostRange","$bb452d04388de75d$var$DISTANCE_CLOSE","getDelta","round","avoid","predictPosition","aircraftType","pointsToAvoid","nextStep","tickDurationMs","firstStep","numFramesInPrevTick","$bb452d04388de75d$var$MS_PER_SEC","pow","$bea75fb613efa0dd$export$32f32f5cf98c6d99","autoPilot","followPlayer","doSteering","killPlayer","goto","keyInstructions","allKeys","$ab36003b7ef5a21c$export$73376787cff0536","$463d127a4f96db4b$export$d3c56bb08f4622c8","wasAutoBoosting","enemyTeam","$b302555736d21bd7$exports","$63cb6858cb4f8cdd$export$3705b54de0e001da","$d523b41cd20d3b4b$export$532f6546a3761db5","$8907ee98afb1028f$export$84364f9bc5016998","$450e6aededd4f07e$export$853f5eec935cba76","addLocalServerUrl","serverInfo","getFallbackData","lines","country","fields","region","games","nameShort","$8b37cc73752ebf78$export$e7bb156bab272e0b","lastUrl","querySelectorAll","link","$9b0c53c9efd7c1a8$export$24087d0993113155","loginButton","loginSelector","overlay","loginMessage","orgLoginMessageText","orgLoginButtonText","logout","loginButtons","btn","provider","getAttribute","loginPopup","loadPreviousLoginData","raw","localStorage","getItem","toggleLoginMessage","loginName","getRandomToken","crypto","getRandomValues","Uint32Array","receiveLoginMessage","usedProvider","loginToken","origin","openLoginWindow","windowTitle","screenLeft","screenX","screenTop","screenY","documentElement","clientWidth","screen","clientHeight","Worker","timestamp","serverGamesRepository","stylesRepository","nameInput","styleSelect","zoomSelect","doBackground","populateServerList","loadAllFlags","fillInPrevSettings","loadConstantsPromise","loadStyle","prevSettingsString","prevSettings","select","selected","selectElement","option","body","gameContext","getServerInfo","gamesContainer","table","append","server","cellRegion","cellGameName","cellNumPlayers","cellButton","startGame","backgroundSize","upgradeSelection","autofire","switchSides","browserInitialization","browserVisibilityHandler","keyboardInput","processor","getDefaultHandlers"],"version":3,"file":"index.1e311429.js.map"}