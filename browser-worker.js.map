{"mappings":"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","sources":["node_modules/node-pathfinding/lib/grid.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/node-pathfinding/lib/syncfinder_astar.js","node_modules/node-pathfinding/lib/heap.js","src/ab-assets/map-constants.ts","node_modules/node-pathfinding/index.js","src/ab-protocol/src/packets/client.ts","src/ab-protocol/src/packets/server.ts","src/ab-protocol/src/types/data.ts","src/ab-protocol/src/schemas/client.ts","src/ab-protocol/src/schemas/server.ts","src/ab-protocol/src/marshaling/client.ts","src/ab-protocol/src/marshaling/server.ts","src/ab-protocol/src/marshaling/index.ts","src/ab-protocol/src/types/client.ts","src/ab-protocol/src/types/server.ts","src/ab-protocol/src/types/flags.ts","src/ab-protocol/src/encoding/index.ts","src/ab-assets/ships-constants.ts","src/ab-assets/walls.ts","src/botting/aircraft-size.ts","src/botting/maprepresentation.ts","src/botting/path-finding.ts","src/browser-worker.ts"],"sourcesContent":["// Generated by CoffeeScript 1.6.3\n(function() {\n  var Grid;\n\n  Grid = (function() {\n    Grid.bytesFrom2DArray = function(width, height, array2d) {\n      var buf, byte, byteIndex, col, index, offset, row, x, y, _i, _j, _len, _len1;\n      if (isNaN(width) || width <= 0 || isNaN(height) || height <= 0 || !Array.isArray(array2d)) {\n        console.log(\"ERROR [grid$::bytesFrom2DArray] bad arguments, width:\" + width + \", height:\" + height + \", array2d:\" + array2d);\n        return null;\n      }\n      buf = new Buffer(Math.ceil(width * height / 8));\n      buf.fill(255);\n      for (y = _i = 0, _len = array2d.length; _i < _len; y = ++_i) {\n        row = array2d[y];\n        for (x = _j = 0, _len1 = row.length; _j < _len1; x = ++_j) {\n          col = row[x];\n          if (!Boolean(col)) {\n            index = y * width + x;\n            byteIndex = index >>> 3;\n            offset = 7 - (index % 8);\n            byte = buf[byteIndex];\n            byte = byte ^ 1 << offset;\n            buf[byteIndex] = byte;\n          }\n        }\n      }\n      return buf;\n    };\n\n    function Grid(width, height, bytes) {\n      this.width = width;\n      this.height = height;\n      this.bytes = bytes;\n      if (!(width > 0 && height > 0 && Buffer.isBuffer(bytes))) {\n        throw new Error(\"bad arguments, width:\" + width + \", height:\" + height + \", bytes:\" + bytes);\n      }\n      if (bytes.length !== Math.ceil(width * height / 8)) {\n        throw new Error(\"bytes length mismatch, width:\" + width + \", height:\" + height + \", bytes.length:\" + bytes.length);\n      }\n    }\n\n    Grid.prototype.isWalkableAt = function(x, y) {\n      var byte, bytePos, index, offset;\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) {\n        return false;\n      }\n      index = y * this.width + x;\n      bytePos = index >>> 3;\n      offset = 7 - index % 8;\n      byte = this.bytes[bytePos];\n      return !Boolean(byte >>> offset & 1);\n    };\n\n    Grid.prototype.setWalkableAt = function(x, y, walkable) {\n      var byte, bytePos, index, offset;\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) {\n        return false;\n      }\n      index = y * this.width + x;\n      bytePos = index >>> 3;\n      offset = 7 - index % 8;\n      byte = this.bytes[bytePos];\n      if (walkable !== this.isWalkableAt(x, y)) {\n        return this.bytes[bytePos] = byte ^ 1 << offset;\n      }\n    };\n\n    Grid.prototype.getNeighbors = function(x, y, allowDiagonal, dontCrossCorners) {\n      var d0, d1, d2, d3, neighbors, s0, s1, s2, s3;\n      if (allowDiagonal == null) {\n        allowDiagonal = false;\n      }\n      if (dontCrossCorners == null) {\n        dontCrossCorners = false;\n      }\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) {\n        return null;\n      }\n      neighbors = [];\n      if (this.isWalkableAt(x, y - 1)) {\n        neighbors.push(x << 16 | (y - 1));\n        s0 = true;\n      }\n      if (this.isWalkableAt(x + 1, y)) {\n        neighbors.push((x + 1) << 16 | y);\n        s1 = true;\n      }\n      if (this.isWalkableAt(x, y + 1)) {\n        neighbors.push(x << 16 | (y + 1));\n        s2 = true;\n      }\n      if (this.isWalkableAt(x - 1, y)) {\n        neighbors.push((x - 1) << 16 | y);\n        s3 = true;\n      }\n      if (!allowDiagonal) {\n        return neighbors;\n      }\n      if (dontCrossCorners) {\n        d0 = s3 && s0;\n        d1 = s0 && s1;\n        d2 = s1 && s2;\n        d3 = s2 && s3;\n      } else {\n        d0 = s3 || s0;\n        d1 = s0 || s1;\n        d2 = s1 || s2;\n        d3 = s2 || s3;\n      }\n      if (d0 && this.isWalkableAt(x - 1, y - 1)) {\n        neighbors.push((x - 1) << 16 | (y - 1));\n      }\n      if (d1 && this.isWalkableAt(x + 1, y - 1)) {\n        neighbors.push((x + 1) << 16 | (y - 1));\n      }\n      if (d2 && this.isWalkableAt(x + 1, y + 1)) {\n        neighbors.push((x + 1) << 16 | (y + 1));\n      }\n      if (d3 && this.isWalkableAt(x - 1, y + 1)) {\n        neighbors.push((x - 1) << 16 | (y + 1));\n      }\n      return neighbors;\n    };\n\n    Grid.prototype.getARandomWalkableBrick = function() {\n      var x, y;\n      while (true) {\n        x = (Math.random() * this.width) >>> 0;\n        y = (Math.random() * this.height) >>> 0;\n        if (this.isWalkableAt(x, y)) {\n          return x << 16 | y;\n        }\n      }\n    };\n\n    Grid.prototype.toString = function(startLoc, endLoc, path) {\n      var arr, brickLoc, i, markpoints, result, x, y, _i, _j, _k, _len, _ref, _ref1;\n      markpoints = {};\n      if (Array.isArray(path)) {\n        for (i = _i = 0, _len = path.length; _i < _len; i = ++_i) {\n          brickLoc = path[i];\n          markpoints[brickLoc] = i % 10;\n        }\n      }\n      if (!isNaN(startLoc)) {\n        markpoints[startLoc] = \"S\";\n      }\n      if (!isNaN(endLoc)) {\n        markpoints[endLoc] = \"E\";\n      }\n      result = \"[Grid(width=\" + this.width + \", height=\" + this.height + \")]\\nDump: ░=walkable, ▓=blocked\";\n      for (y = _j = 0, _ref = this.height; _j < _ref; y = _j += 1) {\n        arr = [];\n        for (x = _k = 0, _ref1 = this.width; _k < _ref1; x = _k += 1) {\n          if (markpoints[x << 16 | y] !== void 0) {\n            arr.push(markpoints[x << 16 | y]);\n          } else {\n            arr.push(this.isWalkableAt(x, y) ? \"░\" : \"▓\");\n          }\n        }\n        result = result + (\"\\n\" + (arr.join('')));\n      }\n      return result;\n    };\n\n    return Grid;\n\n  })();\n\n  module.exports = Grid;\n\n}).call(this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var Heap, SQRT2, backtrace, endLoc, grid, heuristic, locToClosed, locToF, locToG, locToH, locToOpen, locToParent, openList, startLoc, syncfinder_astar;\n\n  Heap = require(\"./heap\");\n\n  openList = new Heap();\n\n  startLoc = 0;\n\n  endLoc = 0;\n\n  grid = null;\n\n  locToClosed = null;\n\n  locToOpen = null;\n\n  locToG = null;\n\n  locToH = null;\n\n  locToF = null;\n\n  locToParent = null;\n\n  SQRT2 = Math.SQRT2;\n\n  heuristic = function(dx, dy) {\n    return dx + dy;\n  };\n\n  backtrace = function(node) {\n    var path;\n    path = [];\n    path.push(node);\n    while (locToParent[node]) {\n      node = locToParent[node];\n      path.unshift(node);\n    }\n    return path;\n  };\n\n  syncfinder_astar = {\n    findPathByBrickLoc: function(start, end, theGrid) {\n      return syncfinder_astar.findPath(start >>> 16, start & 0xffff, end >>> 16, end & 0xffff, theGrid);\n    },\n    findPath: function(startX, startY, endX, endY, theGrid, allowDiagonal, dontCrossCorners) {\n      var neighbor, neighborNode, neighbors, ng, node, nodeX, nodeY, x, y, _i, _len;\n      if (allowDiagonal == null) {\n        allowDiagonal = false;\n      }\n      if (dontCrossCorners == null) {\n        dontCrossCorners = false;\n      }\n      if (isNaN(startX) || startX < 0 || isNaN(startY) || startY < 0 || isNaN(endX) || endX < 0 || isNaN(endY) || endY < 0 || !theGrid) {\n        console.log(\"ERROR [syncfinder_astar::findPath] bad arguments, startX:\" + startX + \", startY:\" + startY + \", endX:\" + endX + \", endY:\" + endY + \", theGrid:\" + theGrid);\n        return null;\n      }\n      startLoc = startX << 16 | startY;\n      endLoc = endX << 16 | endY;\n      grid = theGrid;\n      locToClosed = {};\n      locToOpen = {};\n      locToG = {};\n      locToF = {};\n      locToH = {};\n      locToParent = {};\n      locToG[startLoc] = 0;\n      locToF[startLoc] = 0;\n      openList.reset(locToF);\n      openList.push(startLoc);\n      locToOpen[startLoc] = true;\n      while (openList.isNotEmpty()) {\n        node = openList.pop();\n        locToClosed[node] = true;\n        if (node === endLoc) {\n          return backtrace(node);\n        }\n        nodeX = node >>> 16;\n        nodeY = node & 0xffff;\n        neighbors = grid.getNeighbors(nodeX, nodeY, allowDiagonal, dontCrossCorners);\n        for (_i = 0, _len = neighbors.length; _i < _len; _i++) {\n          neighbor = neighbors[_i];\n          if (locToClosed[neighbor]) {\n            continue;\n          }\n          x = neighbor >>> 16;\n          y = neighbor & 0xffff;\n          ng = locToG[node] + (x === nodeX || y === nodeY ? 1 : SQRT2);\n          if ((!locToOpen[neighbor]) || (ng < locToG[neighbor])) {\n            locToG[neighbor] = ng;\n            locToH[neighbor] = locToH[neighbor] || heuristic(Math.abs(x - endX), Math.abs(y - endY));\n            locToF[neighbor] = locToG[neighbor] + locToH[neighbor];\n            neighborNode = x << 16 | y;\n            locToParent[neighborNode] = node;\n            if (!locToOpen[neighbor]) {\n              openList.push(neighborNode);\n              locToOpen[neighbor] = true;\n            } else {\n              openList.updateItem(neighborNode);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  };\n\n  module.exports = syncfinder_astar;\n\n}).call(this);\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var Heap;\n\n  Heap = (function() {\n    function Heap(locToF) {\n      this.locToF = locToF;\n      this.nodes = [];\n    }\n\n    Heap.prototype.isNotEmpty = function() {\n      return this.nodes.length > 0;\n    };\n\n    Heap.prototype._siftdown = function(startPos, pos) {\n      var newNode, parentNode, parentpos;\n      newNode = this.nodes[pos];\n      while (pos > startPos) {\n        parentpos = (pos - 1) >>> 1;\n        parentNode = this.nodes[parentpos];\n        if (this.locToF[newNode] < this.locToF[parentNode]) {\n          this.nodes[pos] = parentNode;\n          pos = parentpos;\n          continue;\n        }\n        break;\n      }\n      this.nodes[pos] = newNode;\n    };\n\n    Heap.prototype._siftup = function(pos) {\n      var childPos, endPos, newNode, rightPos, startPos;\n      endPos = this.nodes.length;\n      startPos = pos;\n      newNode = this.nodes[pos];\n      childPos = (pos << 1) + 1;\n      while (childPos < endPos) {\n        rightPos = childPos + 1;\n        if (rightPos < endPos && (this.locToF[this.nodes[childPos]] > this.locToF[this.nodes[rightPos]])) {\n          childPos = rightPos;\n        }\n        this.nodes[pos] = this.nodes[childPos];\n        pos = childPos;\n        childPos = (pos << 1) + 1;\n      }\n      this.nodes[pos] = newNode;\n      this._siftdown(startPos, pos);\n    };\n\n    Heap.prototype.updateItem = function(node) {\n      var pos;\n      pos = this.nodes.indexOf(node);\n      if (pos < 0) {\n        return;\n      }\n      this._siftdown(0, pos);\n      this._siftup(pos);\n    };\n\n    Heap.prototype.push = function(node) {\n      this.nodes.push(node);\n      return this._siftdown(0, this.nodes.length - 1);\n    };\n\n    Heap.prototype.pop = function() {\n      var lastelt, returnitem;\n      lastelt = this.nodes.pop();\n      if (this.nodes.length) {\n        returnitem = this.nodes[0];\n        this.nodes[0] = lastelt;\n        this._siftup(0);\n      } else {\n        return lastelt;\n      }\n      return returnitem;\n    };\n\n    Heap.prototype.reset = function(locToF) {\n      this.nodes.length = 0;\n      this.locToF = locToF;\n    };\n\n    return Heap;\n\n  })();\n\n  module.exports = Heap;\n\n}).call(this);\n","// this file is a partial copy of ab-server\\src\\constants\\collisions.ts and players.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nexport const MAP_SIZE = {\r\n    WIDTH: 32768,\r\n    HEIGHT: 16384,\r\n\r\n    HALF_WIDTH: 32768 / 2,\r\n    HALF_HEIGHT: 16384 / 2,\r\n};\r\n\r\nexport const MAP_COORDS = {\r\n    MIN_X: -MAP_SIZE.WIDTH / 2,\r\n    MIN_Y: -MAP_SIZE.HEIGHT / 2,\r\n    MAX_X: MAP_SIZE.WIDTH / 2,\r\n    MAX_Y: MAP_SIZE.HEIGHT / 2,\r\n};\r\n\r\nexport const PLAYERS_POSITION = {\r\n    MIN_X: -16352,\r\n    MIN_Y: -8160,\r\n\r\n    MAX_X: 16352,\r\n    MAX_Y: 8160,\r\n};","Grid = require(\"./lib/grid\");\nsyncfinder_astar = require(\"./lib/syncfinder_astar.js\");\n\n\nmodule.exports = {\n\n  bytesFrom2DArray : Grid.bytesFrom2DArray ,\n  findPath : syncfinder_astar.findPath,\n  findPathByBrickLoc: syncfinder_astar.findPathByBrickLoc,\n  buildGrid : function(width, height, buf)\n  {\n    return new Grid(width, height, buf)\n  }\n\n}\n\n\n\n","export default {\r\n  LOGIN: 0,\r\n  BACKUP: 1,\r\n  HORIZON: 2,\r\n  ACK: 5,\r\n  PONG: 6,\r\n  KEY: 10,\r\n  COMMAND: 11,\r\n  SCOREDETAILED: 12,\r\n  CHAT: 20,\r\n  WHISPER: 21,\r\n  SAY: 22,\r\n  TEAMCHAT: 23,\r\n  VOTEMUTE: 24,\r\n  LOCALPING: 255,\r\n};\r\n","export default {\r\n  LOGIN: 0,\r\n  BACKUP: 1,\r\n  PING: 5,\r\n  PING_RESULT: 6,\r\n  ACK: 7,\r\n  ERROR: 8,\r\n  COMMAND_REPLY: 9,\r\n  PLAYER_NEW: 10,\r\n  PLAYER_LEAVE: 11,\r\n  PLAYER_UPDATE: 12,\r\n  PLAYER_FIRE: 13,\r\n  PLAYER_HIT: 14,\r\n  PLAYER_RESPAWN: 15,\r\n  PLAYER_FLAG: 16,\r\n  PLAYER_KILL: 17,\r\n  PLAYER_UPGRADE: 18,\r\n  PLAYER_TYPE: 19,\r\n  PLAYER_POWERUP: 20,\r\n  PLAYER_LEVEL: 21,\r\n  PLAYER_RETEAM: 22,\r\n  GAME_FLAG: 30,\r\n  GAME_SPECTATE: 31,\r\n  GAME_PLAYERSALIVE: 32,\r\n  GAME_FIREWALL: 33,\r\n  EVENT_REPEL: 40,\r\n  EVENT_BOOST: 41,\r\n  EVENT_BOUNCE: 42,\r\n  EVENT_STEALTH: 43,\r\n  EVENT_LEAVEHORIZON: 44,\r\n  MOB_UPDATE: 60,\r\n  MOB_UPDATE_STATIONARY: 61,\r\n  MOB_DESPAWN: 62,\r\n  MOB_DESPAWN_COORDS: 63,\r\n  CHAT_PUBLIC: 70,\r\n  CHAT_TEAM: 71,\r\n  CHAT_SAY: 72,\r\n  CHAT_WHISPER: 73,\r\n  CHAT_VOTEMUTEPASSED: 78,\r\n  CHAT_VOTEMUTED: 79,\r\n  SCORE_UPDATE: 80,\r\n  SCORE_BOARD: 81,\r\n  SCORE_DETAILED: 82,\r\n  SCORE_DETAILED_CTF: 83,\r\n  SCORE_DETAILED_BTR: 84,\r\n  SERVER_MESSAGE: 90,\r\n  SERVER_CUSTOM: 91,\r\n};\r\n","export enum DATA_TYPES {\r\n  text = 1,\r\n  textbig = 2,\r\n  arraysmall = 4,\r\n  array = 3,\r\n  uint8 = 5,\r\n  uint16 = 6,\r\n  uint24 = 7,\r\n  uint32 = 8,\r\n  float32 = 9,\r\n  float64 = 10,\r\n  boolean = 11,\r\n  speed = 12,\r\n  accel = 13,\r\n  coordx = 14,\r\n  coordy = 15,\r\n  coord24 = 16,\r\n  rotation = 17,\r\n  healthenergy = 18,\r\n  regen = 19,\r\n}\r\n\r\nconst MAX_UINT8 = (1 << 8) - 1;\r\nconst MAX_UINT16 = (1 << 16) - 1;\r\nconst CHAR_BITS = 8;\r\n\r\nexport const DATA_TYPE_SIZE_BITS = {\r\n  [DATA_TYPES.text]: 8 + MAX_UINT8 * CHAR_BITS,\r\n  [DATA_TYPES.textbig]: 16 + MAX_UINT16 * CHAR_BITS,\r\n  [DATA_TYPES.arraysmall]: 8,\r\n  [DATA_TYPES.array]: 16,\r\n  [DATA_TYPES.uint8]: 8,\r\n  [DATA_TYPES.uint16]: 16,\r\n  [DATA_TYPES.uint24]: 24,\r\n  [DATA_TYPES.uint32]: 32,\r\n  [DATA_TYPES.float32]: 64,\r\n  [DATA_TYPES.float64]: 64,\r\n  [DATA_TYPES.boolean]: 8,\r\n  [DATA_TYPES.speed]: 16,\r\n  [DATA_TYPES.accel]: 16,\r\n  [DATA_TYPES.coordx]: 16,\r\n  [DATA_TYPES.coordy]: 16,\r\n  [DATA_TYPES.coord24]: 24,\r\n  [DATA_TYPES.rotation]: 16,\r\n  [DATA_TYPES.healthenergy]: 8,\r\n  [DATA_TYPES.regen]: 16,\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport CLIENT_PACKETS from '../packets/client';\r\nimport { DATA_TYPES } from '../types/data';\r\n\r\nexport default {\r\n  [CLIENT_PACKETS.LOGIN]: [\r\n    ['protocol', DATA_TYPES.uint8],\r\n    ['name', DATA_TYPES.text],\r\n    ['session', DATA_TYPES.text],\r\n    ['horizonX', DATA_TYPES.uint16],\r\n    ['horizonY', DATA_TYPES.uint16],\r\n    ['flag', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.BACKUP]: [['token', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.HORIZON]: [\r\n    ['horizonX', DATA_TYPES.uint16],\r\n    ['horizonY', DATA_TYPES.uint16],\r\n  ],\r\n  [CLIENT_PACKETS.ACK]: [],\r\n  [CLIENT_PACKETS.PONG]: [['num', DATA_TYPES.uint32]],\r\n  [CLIENT_PACKETS.KEY]: [\r\n    ['seq', DATA_TYPES.uint32],\r\n    ['key', DATA_TYPES.uint8],\r\n    ['state', DATA_TYPES.boolean],\r\n  ],\r\n  [CLIENT_PACKETS.COMMAND]: [\r\n    ['com', DATA_TYPES.text],\r\n    ['data', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.SCOREDETAILED]: [],\r\n  [CLIENT_PACKETS.CHAT]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.WHISPER]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.SAY]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.TEAMCHAT]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.VOTEMUTE]: [['id', DATA_TYPES.uint16]],\r\n  [CLIENT_PACKETS.LOCALPING]: [['auth', DATA_TYPES.uint32]],\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport SERVER_PACKETS from '../packets/server';\r\nimport { DATA_TYPES } from '../types/data';\r\n\r\nexport default {\r\n  [SERVER_PACKETS.LOGIN]: [\r\n    ['success', DATA_TYPES.boolean],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['team', DATA_TYPES.uint16],\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['token', DATA_TYPES.text],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['room', DATA_TYPES.text],\r\n    [\r\n      'players',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['status', DATA_TYPES.uint8],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['name', DATA_TYPES.text],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['team', DATA_TYPES.uint16],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['rot', DATA_TYPES.rotation],\r\n        ['flag', DATA_TYPES.uint16],\r\n        ['upgrades', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n    ['serverConfiguration', DATA_TYPES.textbig],\r\n    ['bots', DATA_TYPES.array, [['id', DATA_TYPES.uint16]]],\r\n  ],\r\n\r\n  [SERVER_PACKETS.BACKUP]: [],\r\n\r\n  [SERVER_PACKETS.PING]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['num', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PING_RESULT]: [\r\n    ['ping', DATA_TYPES.uint16],\r\n    ['playerstotal', DATA_TYPES.uint32],\r\n    ['playersgame', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.ACK]: [],\r\n\r\n  [SERVER_PACKETS.ERROR]: [['error', DATA_TYPES.uint8]],\r\n\r\n  [SERVER_PACKETS.COMMAND_REPLY]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['text', DATA_TYPES.textbig],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_NEW]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['status', DATA_TYPES.uint8],\r\n    ['name', DATA_TYPES.text],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['team', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['flag', DATA_TYPES.uint16],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n    ['isBot', DATA_TYPES.boolean],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_LEAVE]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.PLAYER_UPDATE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['keystate', DATA_TYPES.uint8],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_FIRE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n    [\r\n      'projectiles',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['accelX', DATA_TYPES.accel],\r\n        ['accelY', DATA_TYPES.accel],\r\n        ['maxSpeed', DATA_TYPES.speed],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  // [packet.PLAYER_SAY]: [['id', types.uint16], ['text', types.text]],\r\n\r\n  [SERVER_PACKETS.PLAYER_RESPAWN]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_FLAG]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['flag', DATA_TYPES.uint16],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_HIT]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['owner', DATA_TYPES.uint16],\r\n    [\r\n      'players',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['health', DATA_TYPES.healthenergy],\r\n        ['healthRegen', DATA_TYPES.regen],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_KILL]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['killer', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_UPGRADE]: [\r\n    ['upgrades', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['speed', DATA_TYPES.uint8],\r\n    ['defense', DATA_TYPES.uint8],\r\n    ['energy', DATA_TYPES.uint8],\r\n    ['missile', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_TYPE]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_POWERUP]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['duration', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_LEVEL]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['level', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_RETEAM]: [\r\n    [\r\n      'players',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['team', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.GAME_FLAG]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['flag', DATA_TYPES.uint8],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['blueteam', DATA_TYPES.uint8],\r\n    ['redteam', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.GAME_SPECTATE]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.GAME_PLAYERSALIVE]: [['players', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.GAME_FIREWALL]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['status', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['radius', DATA_TYPES.float32],\r\n    ['speed', DATA_TYPES.float32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_REPEL]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n    [\r\n      'players',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['keystate', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['rot', DATA_TYPES.rotation],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['energy', DATA_TYPES.healthenergy],\r\n        ['energyRegen', DATA_TYPES.regen],\r\n        ['playerHealth', DATA_TYPES.healthenergy],\r\n        ['playerHealthRegen', DATA_TYPES.regen],\r\n      ],\r\n    ],\r\n    [\r\n      'mobs',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['accelX', DATA_TYPES.accel],\r\n        ['accelY', DATA_TYPES.accel],\r\n        ['maxSpeed', DATA_TYPES.speed],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_BOOST]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['boost', DATA_TYPES.boolean],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_BOUNCE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['keystate', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_STEALTH]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['state', DATA_TYPES.boolean],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_LEAVEHORIZON]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['id', DATA_TYPES.uint16],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_UPDATE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['accelX', DATA_TYPES.accel],\r\n    ['accelY', DATA_TYPES.accel],\r\n    ['maxSpeed', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_UPDATE_STATIONARY]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.float32],\r\n    ['posY', DATA_TYPES.float32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_DESPAWN]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_DESPAWN_COORDS]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_UPDATE]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['score', DATA_TYPES.uint32],\r\n    ['earnings', DATA_TYPES.uint32],\r\n    ['upgrades', DATA_TYPES.uint16],\r\n    ['totalkills', DATA_TYPES.uint32],\r\n    ['totaldeaths', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_BOARD]: [\r\n    [\r\n      'data',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['level', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n    [\r\n      'rankings',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['x', DATA_TYPES.uint8],\r\n        ['y', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED_CTF]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['captures', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED_BTR]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['alive', DATA_TYPES.boolean],\r\n        ['wins', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_TEAM]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_PUBLIC]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_SAY]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_WHISPER]: [\r\n    ['from', DATA_TYPES.uint16],\r\n    ['to', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_VOTEMUTEPASSED]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.CHAT_VOTEMUTED]: [],\r\n\r\n  [SERVER_PACKETS.SERVER_MESSAGE]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['duration', DATA_TYPES.uint32],\r\n    ['text', DATA_TYPES.textbig],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SERVER_CUSTOM]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['data', DATA_TYPES.textbig],\r\n  ],\r\n};\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/client';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Horizon,\r\n  Pong,\r\n  Key,\r\n  Command,\r\n  Chat,\r\n  Whisper,\r\n  Say,\r\n  Teamchat,\r\n  Votemute,\r\n  Localping,\r\n} from '../types/packets-client';\r\n\r\nconst staticAckPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 5);\r\n\r\n  return buffer;\r\n})();\r\nconst staticScoredetailedPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 12);\r\n\r\n  return buffer;\r\n})();\r\n\r\nexport default {\r\n  [packet.LOGIN]: (msg: Login): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const name = encodeUTF8(msg.name);\r\n    const session = encodeUTF8(msg.session);\r\n    const flag = encodeUTF8(msg.flag);\r\n\r\n    const buffer = new ArrayBuffer(9 + name.length + session.length + flag.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // protocol, uint8\r\n    dataView.setUint8(offset, msg.protocol);\r\n    offset += 1;\r\n\r\n    // name, text\r\n    dataView.setUint8(offset, name.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < name.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, name[charOffset]);\r\n    }\r\n\r\n    offset += name.length;\r\n\r\n    // session, text\r\n    dataView.setUint8(offset, session.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < session.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, session[charOffset]);\r\n    }\r\n\r\n    offset += session.length;\r\n\r\n    // horizonX, uint16\r\n    dataView.setUint16(offset, msg.horizonX, true);\r\n    offset += 2;\r\n\r\n    // horizonY, uint16\r\n    dataView.setUint16(offset, msg.horizonY, true);\r\n    offset += 2;\r\n\r\n    // flag, text\r\n    dataView.setUint8(offset, flag.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < flag.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, flag[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.BACKUP]: (msg: Backup): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const token = encodeUTF8(msg.token);\r\n\r\n    const buffer = new ArrayBuffer(2 + token.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // token, text\r\n    dataView.setUint8(offset, token.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < token.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, token[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.HORIZON]: (msg: Horizon): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // horizonX, uint16\r\n    dataView.setUint16(offset, msg.horizonX, true);\r\n    offset += 2;\r\n\r\n    // horizonY, uint16\r\n    dataView.setUint16(offset, msg.horizonY, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.ACK]: (): ArrayBuffer => staticAckPacket,\r\n\r\n  [packet.PONG]: (msg: Pong): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // num, uint32\r\n    dataView.setUint32(offset, msg.num, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.KEY]: (msg: Key): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(7);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // seq, uint32\r\n    dataView.setUint32(offset, msg.seq, true);\r\n    offset += 4;\r\n\r\n    // key, uint8\r\n    dataView.setUint8(offset, msg.key);\r\n    offset += 1;\r\n\r\n    // state, boolean\r\n    dataView.setUint8(offset, msg.state === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.COMMAND]: (msg: Command): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const com = encodeUTF8(msg.com);\r\n    const data = encodeUTF8(msg.data);\r\n\r\n    const buffer = new ArrayBuffer(3 + com.length + data.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // com, text\r\n    dataView.setUint8(offset, com.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < com.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, com[charOffset]);\r\n    }\r\n\r\n    offset += com.length;\r\n\r\n    // data, text\r\n    dataView.setUint8(offset, data.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < data.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, data[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCOREDETAILED]: (): ArrayBuffer => staticScoredetailedPacket,\r\n\r\n  [packet.CHAT]: (msg: Chat): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.WHISPER]: (msg: Whisper): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SAY]: (msg: Say): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.TEAMCHAT]: (msg: Teamchat): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.VOTEMUTE]: (msg: Votemute): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.LOCALPING]: (msg: Localping): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // auth, uint32\r\n    dataView.setUint32(offset, msg.auth, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n};\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/server';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Ping,\r\n  PingResult,\r\n  Error,\r\n  CommandReply,\r\n  PlayerNew,\r\n  PlayerLeave,\r\n  PlayerUpdate,\r\n  PlayerFire,\r\n  PlayerHit,\r\n  PlayerRespawn,\r\n  PlayerFlag,\r\n  PlayerKill,\r\n  PlayerUpgrade,\r\n  PlayerType,\r\n  PlayerPowerup,\r\n  PlayerLevel,\r\n  PlayerReteam,\r\n  GameFlag,\r\n  GameSpectate,\r\n  GamePlayersalive,\r\n  GameFirewall,\r\n  EventRepel,\r\n  EventBoost,\r\n  EventBounce,\r\n  EventStealth,\r\n  EventLeavehorizon,\r\n  MobUpdate,\r\n  MobUpdateStationary,\r\n  MobDespawn,\r\n  MobDespawnCoords,\r\n  ChatPublic,\r\n  ChatTeam,\r\n  ChatSay,\r\n  ChatWhisper,\r\n  ChatVotemutepassed,\r\n  ScoreUpdate,\r\n  ScoreBoard,\r\n  ScoreDetailed,\r\n  ScoreDetailedCtf,\r\n  ScoreDetailedBtr,\r\n  ServerMessage,\r\n  ServerCustom,\r\n} from '../types/packets-server';\r\n\r\nconst staticBackupPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 1);\r\n\r\n  return buffer;\r\n})();\r\nconst staticAckPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 7);\r\n\r\n  return buffer;\r\n})();\r\nconst staticChatVotemutedPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 79);\r\n\r\n  return buffer;\r\n})();\r\n\r\nexport default {\r\n  [packet.LOGIN]: (msg: Login): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    const arrStrings = [];\r\n    let arrStringsOffset = 0;\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 17;\r\n\r\n      // String \"name\" size calculation\r\n      arrStrings[arrStringsOffset] = encodeUTF8(msg.players[i].name);\r\n      arraysSize += arrStrings[arrStringsOffset].length;\r\n      arrStringsOffset += 1;\r\n    }\r\n\r\n    // Array \"bots\" size calculation\r\n    for (let i = 0; i < msg.bots.length; i += 1) {\r\n      arraysSize += 2;\r\n    }\r\n\r\n    // Root strings size calculation\r\n    const token = encodeUTF8(msg.token);\r\n    const room = encodeUTF8(msg.room);\r\n    const serverConfiguration = encodeUTF8(msg.serverConfiguration);\r\n\r\n    const buffer = new ArrayBuffer(\r\n      19 + token.length + room.length + serverConfiguration.length + arraysSize\r\n    );\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    arrStringsOffset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // success, boolean\r\n    dataView.setUint8(offset, msg.success === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // team, uint16\r\n    dataView.setUint16(offset, msg.team, true);\r\n    offset += 2;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // token, text\r\n    dataView.setUint8(offset, token.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < token.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, token[charOffset]);\r\n    }\r\n\r\n    offset += token.length;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // room, text\r\n    dataView.setUint8(offset, room.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < room.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, room[charOffset]);\r\n    }\r\n\r\n    offset += room.length;\r\n\r\n    // players, array\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint16(offset, players.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[status], uint8\r\n        dataView.setUint8(offset, players[i].status);\r\n        offset += 1;\r\n\r\n        // players[level], uint8\r\n        dataView.setUint8(offset, players[i].level);\r\n        offset += 1;\r\n\r\n        // players[name], text\r\n        dataView.setUint8(offset, arrStrings[arrStringsOffset].length);\r\n        offset += 1;\r\n\r\n        for (\r\n          let charOffset = 0;\r\n          charOffset < arrStrings[arrStringsOffset].length;\r\n          charOffset += 1\r\n        ) {\r\n          dataView.setUint8(offset + charOffset, arrStrings[arrStringsOffset][charOffset]);\r\n        }\r\n\r\n        offset += arrStrings[arrStringsOffset].length;\r\n        arrStringsOffset += 1;\r\n\r\n        // players[type], uint8\r\n        dataView.setUint8(offset, players[i].type);\r\n        offset += 1;\r\n\r\n        // players[team], uint16\r\n        dataView.setUint16(offset, players[i].team, true);\r\n        offset += 2;\r\n\r\n        // players[posX], coordx\r\n        dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[posY], coordy\r\n        dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[rot], rotation\r\n        dataView.setUint16(offset, players[i].rot * 6553.6, true);\r\n        offset += 2;\r\n\r\n        // players[flag], uint16\r\n        dataView.setUint16(offset, players[i].flag, true);\r\n        offset += 2;\r\n\r\n        // players[upgrades], uint8\r\n        dataView.setUint8(offset, players[i].upgrades);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    // serverConfiguration, textbig\r\n    dataView.setUint16(offset, serverConfiguration.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < serverConfiguration.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, serverConfiguration[charOffset]);\r\n    }\r\n\r\n    offset += serverConfiguration.length;\r\n\r\n    // bots, array\r\n    {\r\n      const { bots } = msg;\r\n\r\n      dataView.setUint16(offset, bots.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < bots.length; i += 1) {\r\n        // bots[id], uint16\r\n        dataView.setUint16(offset, bots[i].id, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.BACKUP]: (): ArrayBuffer => staticBackupPacket,\r\n\r\n  [packet.PING]: (msg: Ping): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(9);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // num, uint32\r\n    dataView.setUint32(offset, msg.num, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PING_RESULT]: (msg: PingResult): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(11);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // ping, uint16\r\n    dataView.setUint16(offset, msg.ping, true);\r\n    offset += 2;\r\n\r\n    // playerstotal, uint32\r\n    dataView.setUint32(offset, msg.playerstotal, true);\r\n    offset += 4;\r\n\r\n    // playersgame, uint32\r\n    dataView.setUint32(offset, msg.playersgame, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.ACK]: (): ArrayBuffer => staticAckPacket,\r\n\r\n  [packet.ERROR]: (msg: Error): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(2);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // error, uint8\r\n    dataView.setUint8(offset, msg.error);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.COMMAND_REPLY]: (msg: CommandReply): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // text, textbig\r\n    dataView.setUint16(offset, text.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_NEW]: (msg: PlayerNew): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const name = encodeUTF8(msg.name);\r\n\r\n    const buffer = new ArrayBuffer(18 + name.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // status, uint8\r\n    dataView.setUint8(offset, msg.status);\r\n    offset += 1;\r\n\r\n    // name, text\r\n    dataView.setUint8(offset, name.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < name.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, name[charOffset]);\r\n    }\r\n\r\n    offset += name.length;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // team, uint16\r\n    dataView.setUint16(offset, msg.team, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // flag, uint16\r\n    dataView.setUint16(offset, msg.flag, true);\r\n    offset += 2;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    // isBot, boolean\r\n    dataView.setUint8(offset, msg.isBot === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_LEAVE]: (msg: PlayerLeave): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_UPDATE]: (msg: PlayerUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(21);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // keystate, uint8\r\n    dataView.setUint8(offset, msg.keystate);\r\n    offset += 1;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_FIRE]: (msg: PlayerFire): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"projectiles\" size calculation\r\n    for (let i = 0; i < msg.projectiles.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(11 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    // projectiles, arraysmall\r\n    {\r\n      const { projectiles } = msg;\r\n\r\n      dataView.setUint8(offset, projectiles.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < projectiles.length; i += 1) {\r\n        // projectiles[id], uint16\r\n        dataView.setUint16(offset, projectiles[i].id, true);\r\n        offset += 2;\r\n\r\n        // projectiles[type], uint8\r\n        dataView.setUint8(offset, projectiles[i].type);\r\n        offset += 1;\r\n\r\n        // projectiles[posX], coordx\r\n        dataView.setUint16(offset, projectiles[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[posY], coordy\r\n        dataView.setUint16(offset, projectiles[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[speedX], speed\r\n        dataView.setUint16(offset, projectiles[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[speedY], speed\r\n        dataView.setUint16(offset, projectiles[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[accelX], accel\r\n        dataView.setUint16(offset, projectiles[i].accelX * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[accelY], accel\r\n        dataView.setUint16(offset, projectiles[i].accelY * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[maxSpeed], speed\r\n        dataView.setUint16(offset, projectiles[i].maxSpeed * 1638.4 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_HIT]: (msg: PlayerHit): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 5;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(11 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // owner, uint16\r\n    dataView.setUint16(offset, msg.owner, true);\r\n    offset += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint8(offset, players.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[health], healthenergy\r\n        dataView.setUint8(offset, players[i].health * 255);\r\n        offset += 1;\r\n\r\n        // players[healthRegen], regen\r\n        dataView.setUint16(offset, players[i].healthRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_RESPAWN]: (msg: PlayerRespawn): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(12);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_FLAG]: (msg: PlayerFlag): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // flag, uint16\r\n    dataView.setUint16(offset, msg.flag, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_KILL]: (msg: PlayerKill): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(9);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // killer, uint16\r\n    dataView.setUint16(offset, msg.killer, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_UPGRADE]: (msg: PlayerUpgrade): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(8);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // upgrades, uint16\r\n    dataView.setUint16(offset, msg.upgrades, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // speed, uint8\r\n    dataView.setUint8(offset, msg.speed);\r\n    offset += 1;\r\n\r\n    // defense, uint8\r\n    dataView.setUint8(offset, msg.defense);\r\n    offset += 1;\r\n\r\n    // energy, uint8\r\n    dataView.setUint8(offset, msg.energy);\r\n    offset += 1;\r\n\r\n    // missile, uint8\r\n    dataView.setUint8(offset, msg.missile);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_TYPE]: (msg: PlayerType): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_POWERUP]: (msg: PlayerPowerup): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(6);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // duration, uint32\r\n    dataView.setUint32(offset, msg.duration, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_LEVEL]: (msg: PlayerLevel): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // level, uint8\r\n    dataView.setUint8(offset, msg.level);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_RETEAM]: (msg: PlayerReteam): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 4;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // players, array\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint16(offset, players.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[team], uint16\r\n        dataView.setUint16(offset, players[i].team, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_FLAG]: (msg: GameFlag): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(13);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // flag, uint8\r\n    dataView.setUint8(offset, msg.flag);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // blueteam, uint8\r\n    dataView.setUint8(offset, msg.blueteam);\r\n    offset += 1;\r\n\r\n    // redteam, uint8\r\n    dataView.setUint8(offset, msg.redteam);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_SPECTATE]: (msg: GameSpectate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_PLAYERSALIVE]: (msg: GamePlayersalive): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // players, uint16\r\n    dataView.setUint16(offset, msg.players, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_FIREWALL]: (msg: GameFirewall): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(15);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // status, uint8\r\n    dataView.setUint8(offset, msg.status);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // radius, float32\r\n    dataView.setFloat32(offset, msg.radius, true);\r\n    offset += 4;\r\n\r\n    // speed, float32\r\n    dataView.setFloat32(offset, msg.speed, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_REPEL]: (msg: EventRepel): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 19;\r\n    }\r\n\r\n    // Array \"mobs\" size calculation\r\n    for (let i = 0; i < msg.mobs.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(22 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint8(offset, players.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[keystate], uint8\r\n        dataView.setUint8(offset, players[i].keystate);\r\n        offset += 1;\r\n\r\n        // players[posX], coordx\r\n        dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[posY], coordy\r\n        dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[rot], rotation\r\n        dataView.setUint16(offset, players[i].rot * 6553.6, true);\r\n        offset += 2;\r\n\r\n        // players[speedX], speed\r\n        dataView.setUint16(offset, players[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[speedY], speed\r\n        dataView.setUint16(offset, players[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[energy], healthenergy\r\n        dataView.setUint8(offset, players[i].energy * 255);\r\n        offset += 1;\r\n\r\n        // players[energyRegen], regen\r\n        dataView.setUint16(offset, players[i].energyRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[playerHealth], healthenergy\r\n        dataView.setUint8(offset, players[i].playerHealth * 255);\r\n        offset += 1;\r\n\r\n        // players[playerHealthRegen], regen\r\n        dataView.setUint16(offset, players[i].playerHealthRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    // mobs, arraysmall\r\n    {\r\n      const { mobs } = msg;\r\n\r\n      dataView.setUint8(offset, mobs.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < mobs.length; i += 1) {\r\n        // mobs[id], uint16\r\n        dataView.setUint16(offset, mobs[i].id, true);\r\n        offset += 2;\r\n\r\n        // mobs[type], uint8\r\n        dataView.setUint8(offset, mobs[i].type);\r\n        offset += 1;\r\n\r\n        // mobs[posX], coordx\r\n        dataView.setUint16(offset, mobs[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[posY], coordy\r\n        dataView.setUint16(offset, mobs[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[speedX], speed\r\n        dataView.setUint16(offset, mobs[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[speedY], speed\r\n        dataView.setUint16(offset, mobs[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[accelX], accel\r\n        dataView.setUint16(offset, mobs[i].accelX * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[accelY], accel\r\n        dataView.setUint16(offset, mobs[i].accelY * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[maxSpeed], speed\r\n        dataView.setUint16(offset, mobs[i].maxSpeed * 1638.4 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_BOOST]: (msg: EventBoost): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(23);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // boost, boolean\r\n    dataView.setUint8(offset, msg.boost === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_BOUNCE]: (msg: EventBounce): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(20);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // keystate, uint8\r\n    dataView.setUint8(offset, msg.keystate);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_STEALTH]: (msg: EventStealth): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(7);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // state, boolean\r\n    dataView.setUint8(offset, msg.state === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_LEAVEHORIZON]: (msg: EventLeavehorizon): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_UPDATE]: (msg: MobUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(22);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // accelX, accel\r\n    dataView.setUint16(offset, msg.accelX * 32768 + 32768, true);\r\n    offset += 2;\r\n\r\n    // accelY, accel\r\n    dataView.setUint16(offset, msg.accelY * 32768 + 32768, true);\r\n    offset += 2;\r\n\r\n    // maxSpeed, speed\r\n    dataView.setUint16(offset, msg.maxSpeed * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_UPDATE_STATIONARY]: (msg: MobUpdateStationary): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(12);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, float32\r\n    dataView.setFloat32(offset, msg.posX, true);\r\n    offset += 4;\r\n\r\n    // posY, float32\r\n    dataView.setFloat32(offset, msg.posY, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN]: (msg: MobDespawn): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN_COORDS]: (msg: MobDespawnCoords): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(8);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_PUBLIC]: (msg: ChatPublic): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_TEAM]: (msg: ChatTeam): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_SAY]: (msg: ChatSay): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_WHISPER]: (msg: ChatWhisper): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(6 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // from, uint16\r\n    dataView.setUint16(offset, msg.from, true);\r\n    offset += 2;\r\n\r\n    // to, uint16\r\n    dataView.setUint16(offset, msg.to, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTEPASSED]: (msg: ChatVotemutepassed): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTED]: (): ArrayBuffer => staticChatVotemutedPacket,\r\n\r\n  [packet.SCORE_UPDATE]: (msg: ScoreUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(21);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // score, uint32\r\n    dataView.setUint32(offset, msg.score, true);\r\n    offset += 4;\r\n\r\n    // earnings, uint32\r\n    dataView.setUint32(offset, msg.earnings, true);\r\n    offset += 4;\r\n\r\n    // upgrades, uint16\r\n    dataView.setUint16(offset, msg.upgrades, true);\r\n    offset += 2;\r\n\r\n    // totalkills, uint32\r\n    dataView.setUint32(offset, msg.totalkills, true);\r\n    offset += 4;\r\n\r\n    // totaldeaths, uint32\r\n    dataView.setUint32(offset, msg.totaldeaths, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_BOARD]: (msg: ScoreBoard): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"data\" size calculation\r\n    for (let i = 0; i < msg.data.length; i += 1) {\r\n      arraysSize += 7;\r\n    }\r\n\r\n    // Array \"rankings\" size calculation\r\n    for (let i = 0; i < msg.rankings.length; i += 1) {\r\n      arraysSize += 4;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(5 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // data, array\r\n    {\r\n      const { data } = msg;\r\n\r\n      dataView.setUint16(offset, data.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < data.length; i += 1) {\r\n        // data[id], uint16\r\n        dataView.setUint16(offset, data[i].id, true);\r\n        offset += 2;\r\n\r\n        // data[score], uint32\r\n        dataView.setUint32(offset, data[i].score, true);\r\n        offset += 4;\r\n\r\n        // data[level], uint8\r\n        dataView.setUint8(offset, data[i].level);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    // rankings, array\r\n    {\r\n      const { rankings } = msg;\r\n\r\n      dataView.setUint16(offset, rankings.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < rankings.length; i += 1) {\r\n        // rankings[id], uint16\r\n        dataView.setUint16(offset, rankings[i].id, true);\r\n        offset += 2;\r\n\r\n        // rankings[x], uint8\r\n        dataView.setUint8(offset, rankings[i].x);\r\n        offset += 1;\r\n\r\n        // rankings[y], uint8\r\n        dataView.setUint8(offset, rankings[i].y);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED]: (msg: ScoreDetailed): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_CTF]: (msg: ScoreDetailedCtf): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 19;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[captures], uint16\r\n        dataView.setUint16(offset, scores[i].captures, true);\r\n        offset += 2;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_BTR]: (msg: ScoreDetailedBtr): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 20;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[alive], boolean\r\n        dataView.setUint8(offset, scores[i].alive === false ? 0 : 1);\r\n        offset += 1;\r\n\r\n        // scores[wins], uint16\r\n        dataView.setUint16(offset, scores[i].wins, true);\r\n        offset += 2;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SERVER_MESSAGE]: (msg: ServerMessage): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(8 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // duration, uint32\r\n    dataView.setUint32(offset, msg.duration, true);\r\n    offset += 4;\r\n\r\n    // text, textbig\r\n    dataView.setUint16(offset, text.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SERVER_CUSTOM]: (msg: ServerCustom): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const data = encodeUTF8(msg.data);\r\n\r\n    const buffer = new ArrayBuffer(4 + data.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // data, textbig\r\n    dataView.setUint16(offset, data.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < data.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, data[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n};\r\n","import CLIENT_SCHEMAS from '../schemas/client';\r\nimport SERVER_SCHEMAS from '../schemas/server';\r\nimport { DATA_TYPES } from '../types/data';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport PREDEFINED_CLIENT_MARSHAL from './client';\r\nimport PREDEFINED_SERVER_MARSHAL from './server';\r\nimport { WSPacket, ProtocolPacket } from '../packets';\r\n\r\nconst SERVER_MESSAGE = 0;\r\nconst CLIENT_MESSAGE = 1;\r\n\r\nconst encodedStrings = new (class {\r\n  public storage: Uint8Array[];\r\n\r\n  constructor() {\r\n    this.storage = [];\r\n  }\r\n\r\n  last(): Uint8Array | null {\r\n    if (this.storage.length > 0) {\r\n      return this.storage[this.storage.length - 1];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  put(str: Uint8Array): void {\r\n    this.storage.push(str);\r\n  }\r\n\r\n  shift(): Uint8Array {\r\n    return this.storage.shift();\r\n  }\r\n\r\n  flush(): void {\r\n    this.storage = [];\r\n  }\r\n})();\r\n\r\nconst flushVars = (): void => {\r\n  encodedStrings.flush();\r\n};\r\n\r\nconst calcBufferLength = (\r\n  data: ProtocolPacket,\r\n  dataSchema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): number => {\r\n  let length = 0;\r\n\r\n  for (let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\r\n    const fieldData = data[fieldName];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        encodedStrings.put(encodeUTF8(fieldData as string));\r\n\r\n        if (fieldType === DATA_TYPES.textbig) {\r\n          length += 2;\r\n        } else {\r\n          length += 1;\r\n        }\r\n\r\n        length += encodedStrings.last().length;\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        if (fieldType === DATA_TYPES.array) {\r\n          length += 2;\r\n        } else {\r\n          length += 1;\r\n        }\r\n\r\n        for (let index = 0; index < (fieldData as []).length; index += 1) {\r\n          length += calcBufferLength(fieldData[index], subSchema);\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n      case DATA_TYPES.boolean:\r\n      case DATA_TYPES.healthenergy:\r\n        length += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n      case DATA_TYPES.speed:\r\n      case DATA_TYPES.accel:\r\n      case DATA_TYPES.coordx:\r\n      case DATA_TYPES.coordy:\r\n      case DATA_TYPES.rotation:\r\n      case DATA_TYPES.regen:\r\n        length += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n      case DATA_TYPES.coord24:\r\n        length += 3;\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n      case DATA_TYPES.float32:\r\n        length += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        length += 8;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return length;\r\n};\r\n\r\nconst fillBufferWithData = (\r\n  dataView: DataView,\r\n  startOffset: number,\r\n  data: WSPacket,\r\n  dataSchema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): number => {\r\n  let offset = startOffset;\r\n\r\n  if (offset === 1) {\r\n    dataView.setUint8(0, data.c);\r\n  }\r\n\r\n  for (let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\r\n    const fieldData = data[fieldName];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        {\r\n          const encodedString = encodedStrings.shift();\r\n\r\n          if (fieldType === DATA_TYPES.textbig) {\r\n            dataView.setUint16(offset, encodedString.length, true);\r\n            offset += 2;\r\n          } else {\r\n            dataView.setUint8(offset, encodedString.length);\r\n            offset += 1;\r\n          }\r\n\r\n          for (let charOffset = 0; charOffset < encodedString.length; charOffset += 1) {\r\n            dataView.setUint8(offset + charOffset, encodedString[charOffset]);\r\n          }\r\n\r\n          offset += encodedString.length;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        if (fieldType === DATA_TYPES.array) {\r\n          dataView.setUint16(offset, fieldData.length, true);\r\n          offset += 2;\r\n        } else {\r\n          dataView.setUint8(offset, fieldData.length);\r\n          offset += 1;\r\n        }\r\n\r\n        for (\r\n          let arrayElementIndex = 0;\r\n          arrayElementIndex < fieldData.length;\r\n          arrayElementIndex += 1\r\n        ) {\r\n          offset = fillBufferWithData(dataView, offset, fieldData[arrayElementIndex], subSchema);\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n        dataView.setUint8(offset, fieldData);\r\n        offset += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.healthenergy:\r\n        dataView.setUint8(offset, fieldData * 255);\r\n        offset += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n        dataView.setUint16(offset, fieldData, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.regen:\r\n        dataView.setUint16(offset, fieldData * 1e6 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.rotation:\r\n        dataView.setUint16(offset, fieldData * 6553.6, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordy:\r\n        dataView.setUint16(offset, fieldData * 4 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordx:\r\n        dataView.setUint16(offset, fieldData * 2 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.accel:\r\n        dataView.setUint16(offset, fieldData * 32768 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.speed:\r\n        dataView.setUint16(offset, fieldData * 1638.4 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n        {\r\n          const u8 = fieldData % 256;\r\n          const u16 = (fieldData - u8) / 256;\r\n\r\n          dataView.setUint16(offset, u16, true);\r\n          offset += 2;\r\n\r\n          dataView.setUint8(offset, u8);\r\n          offset += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.coord24:\r\n        {\r\n          const value = fieldData * 512 + 8388608;\r\n          const u8 = value % 256;\r\n          const u16 = (value - u8) / 256;\r\n\r\n          dataView.setUint16(offset, u16, true);\r\n          offset += 2;\r\n          dataView.setUint8(offset, u8);\r\n          offset += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n        dataView.setUint32(offset, fieldData, true);\r\n        offset += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float32:\r\n        dataView.setFloat32(offset, fieldData, true);\r\n        offset += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        dataView.setFloat64(offset, fieldData, true);\r\n        offset += 8;\r\n        break;\r\n\r\n      case DATA_TYPES.boolean:\r\n        dataView.setUint8(offset, fieldData === false ? 0 : 1);\r\n        offset += 1;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return offset;\r\n};\r\n\r\nconst marshal = (\r\n  message: ProtocolPacket,\r\n  type: number,\r\n  usePredefinedMarshal: boolean\r\n): ArrayBuffer => {\r\n  flushVars();\r\n\r\n  const messageCode = message.c;\r\n\r\n  let schema = null;\r\n  let predefMarshal = null;\r\n\r\n  switch (type) {\r\n    case CLIENT_MESSAGE:\r\n      predefMarshal = PREDEFINED_CLIENT_MARSHAL[messageCode];\r\n      schema = CLIENT_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    case SERVER_MESSAGE:\r\n      predefMarshal = PREDEFINED_SERVER_MARSHAL[messageCode];\r\n      schema = SERVER_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  if (schema === null) {\r\n    return null;\r\n  }\r\n\r\n  let buffer = null;\r\n\r\n  if (usePredefinedMarshal && predefMarshal) {\r\n    buffer = predefMarshal(message);\r\n  } else {\r\n    let dataView = null;\r\n    let bufferLength = 0;\r\n\r\n    bufferLength = 1 + calcBufferLength(message, schema);\r\n    buffer = new ArrayBuffer(bufferLength);\r\n    dataView = new DataView(buffer);\r\n\r\n    fillBufferWithData(dataView, 1, message, schema);\r\n  }\r\n\r\n  return buffer;\r\n};\r\n\r\n/**\r\n * Marshal client message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst marshalClientMessage = (\r\n  message: ProtocolPacket,\r\n  usePredefinedMarshal = true\r\n): ArrayBuffer => {\r\n  return marshal(message, CLIENT_MESSAGE, usePredefinedMarshal);\r\n};\r\n\r\n/**\r\n * Marshal server message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst marshalServerMessage = (\r\n  message: ProtocolPacket,\r\n  usePredefinedMarshal = true\r\n): ArrayBuffer => {\r\n  return marshal(message, SERVER_MESSAGE, usePredefinedMarshal);\r\n};\r\n\r\nexport { marshalClientMessage, marshalServerMessage };\r\n","/**\r\n * CLIENT_PACKETS.KEY types\r\n */\r\nexport enum KEY_CODES {\r\n  UP = 1,\r\n  DOWN = 2,\r\n  LEFT = 3,\r\n  RIGHT = 4,\r\n  FIRE = 5,\r\n  SPECIAL = 6,\r\n}\r\n\r\nexport interface Keystate {\r\n  UP: boolean;\r\n  DOWN: boolean;\r\n  LEFT: boolean;\r\n  RIGHT: boolean;\r\n}\r\n\r\nexport const KEY_NAMES = Object.assign(\r\n  {},\r\n  ...Object.entries(KEY_CODES).map(([name, code]) => ({ [code]: name }))\r\n);\r\n","/**\r\n * Protocol time, 10^-5 seconds.\r\n * Started from 0 at the moment of the server start.\r\n */\r\nexport type ClockTime = number;\r\n\r\n/**\r\n * SERVER_PACKETS.ERROR types.\r\n */\r\nexport enum SERVER_ERRORS {\r\n  PACKET_FLOODING_DISCONNECT = 1,\r\n  PACKET_FLOODING_BAN = 2,\r\n  GLOBAL_BAN = 3,\r\n  UNKNOWN_ERROR = 4,\r\n  REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN = 5,\r\n  AFK_DISCONNECT = 6,\r\n  PLAYER_KICKED = 7,\r\n  INVALID_LOGIN_DATA = 8,\r\n  INCORRECT_PROTOCOL = 9,\r\n  ACCOUNT_BANNED = 10,\r\n  ALREADY_LOGGED_IN = 11,\r\n  FORBIDDEN_TO_CHANGE_PLANE_IN_BTR = 12,\r\n  REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE = 13,\r\n  NOT_ENOUGH_UPGRADES = 20,\r\n  CHAT_SPAMMING = 30,\r\n  FLAG_CHANGE_TOO_FAST = 31,\r\n  UNKNOWN_COMMAND = 100,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.SERVER_MESSAGE types.\r\n */\r\nexport enum SERVER_MESSAGE_TYPES {\r\n  ALERT = 1,\r\n  INFO = 2,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.COMMAND_REPLY types.\r\n */\r\nexport enum COMMAND_REPLY_TYPES {\r\n  /**\r\n   * Special notification at the bottom of the chat.\r\n   */\r\n  CHAT = 0,\r\n\r\n  /**\r\n   * Popup. Use only for debug.\r\n   */\r\n  DEBUG = 1,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.EVENT_LEAVEHORIZON types.\r\n */\r\nexport enum LEAVE_HORIZON_TYPES {\r\n  PLAYER = 0,\r\n  MOB = 1,\r\n}\r\n\r\nexport enum MOB_TYPES {\r\n  PLAYER = 0,\r\n\r\n  // Projectiles\r\n  PREDATOR_MISSILE = 1,\r\n  GOLIATH_MISSILE = 2,\r\n  COPTER_MISSILE = 3,\r\n  TORNADO_MISSILE = 5,\r\n  TORNADO_SMALL_MISSILE = 6,\r\n  PROWLER_MISSILE = 7,\r\n\r\n  // Boxes\r\n  UPGRADE = 4,\r\n  SHIELD = 8,\r\n  INFERNO = 9,\r\n\r\n  // BTR\r\n  FIREWALL = 200,\r\n}\r\n\r\n/**\r\n * EXPIRED — box or projectile despawned.\r\n * PICKUP — player picked up a box.\r\n */\r\nexport enum MOB_DESPAWN_TYPES {\r\n  EXPIRED = 0,\r\n  PICKUP = 1,\r\n}\r\n\r\nexport enum PLAYER_LEVEL_UPDATE_TYPES {\r\n  INFORM = 0,\r\n  LEVELUP = 1,\r\n}\r\n\r\nexport enum PLAYER_STATUS {\r\n  /**\r\n   * On the map.\r\n   */\r\n  ALIVE = 0,\r\n\r\n  /**\r\n   * Dead or spectate\r\n   */\r\n  INACTIVE = 1,\r\n}\r\n\r\nexport enum PLAYER_UPGRADE_TYPES {\r\n  LOST = 0,\r\n  SPEED = 1,\r\n  DEFENSE = 2,\r\n  ENERGY = 3,\r\n  MISSILE = 4,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.SERVER_CUSTOM types.\r\n */\r\nexport enum SERVER_CUSTOM_TYPES {\r\n  BTR = 1,\r\n  CTF = 2,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.PLAYER_POWERUP types.\r\n */\r\nexport enum PLAYER_POWERUP_TYPES {\r\n  SHIELD = 1,\r\n  INFERNO = 2,\r\n}\r\n\r\nexport enum CTF_TEAMS {\r\n  BLUE = 1,\r\n  RED = 2,\r\n}\r\n\r\nexport enum CTF_FLAG_STATE {\r\n  /**\r\n   * Flag dropped.\r\n   */\r\n  STATIC = 1,\r\n\r\n  /**\r\n   * Frag currently owned by player.\r\n   */\r\n  DYNAMIC = 2,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum CTF_CAPTURE_BOUNTY {\r\n  BASE = 100,\r\n  INCREMENT = 100,\r\n  MAX = 1000,\r\n}\r\n\r\nexport enum BTR_FIREWALL_STATUS {\r\n  INACTIVE = 0,\r\n  ACTIVE = 1,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum CTF_WIN_BOUNTY {\r\n  BASE = 100,\r\n  INCREMENT = 100,\r\n  MAX = 1000,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum BTR_WIN_BOUNTY {\r\n  BASE = 500,\r\n  INCREMENT = 500,\r\n  MAX = 5000,\r\n}\r\n\r\nexport enum GAME_TYPES {\r\n  FFA = 1,\r\n  CTF = 2,\r\n  BTR = 3,\r\n}\r\n\r\nexport enum GAME_STATE_CODES {\r\n  LOGIN = 1,\r\n  CONNECTING = 2,\r\n  PLAYING = 3,\r\n}\r\n\r\nexport const GAME_STATE_NAMES = Object.assign(\r\n  {},\r\n  ...Object.entries(GAME_STATE_CODES).map(([name, code]) => ({ [code]: name }))\r\n);\r\n\r\nexport const MAP_SIZE = {\r\n  WIDTH: 32768,\r\n  HEIGHT: 16384,\r\n};\r\n","/**\r\n * Available texture to 2 letter ISO-3166-1 country codes\r\n *\r\n */\r\nconst FLAGS_CODE_TO_ISO = {\r\n  '1': 'SY',\r\n  '2': 'TH',\r\n  '3': 'TM',\r\n  '4': 'TN',\r\n  '5': 'TR',\r\n  '6': 'TT',\r\n  '7': 'TW',\r\n  '8': 'TZ',\r\n  '9': 'UA',\r\n  '10': 'UN',\r\n  '11': 'US',\r\n  '12': 'UY',\r\n  '13': 'UZ',\r\n  '14': 'VE',\r\n  '15': 'VN',\r\n  '16': 'PR',\r\n  '17': 'PT',\r\n  '18': 'PY',\r\n  '19': 'QA',\r\n  '20': 'RAINBOW',\r\n  '21': 'RO',\r\n  '22': 'RS',\r\n  '23': 'RU',\r\n  '24': 'SA',\r\n  '25': 'SE',\r\n  '26': 'SG',\r\n  '27': 'SI',\r\n  '28': 'SK',\r\n  '29': 'SM',\r\n  '30': 'MK',\r\n  '31': 'MO',\r\n  '32': 'MT',\r\n  '33': 'MX',\r\n  '34': 'MY',\r\n  '35': 'NG',\r\n  '36': 'NL',\r\n  '37': 'NO',\r\n  '38': 'NP',\r\n  '39': 'NZ',\r\n  '40': 'OM',\r\n  '41': 'PA',\r\n  '42': 'PE',\r\n  '43': 'JP',\r\n  '44': 'KP',\r\n  '45': 'KR',\r\n  '46': 'KW',\r\n  '47': 'KZ',\r\n  '48': 'LB',\r\n  '49': 'LI',\r\n  '50': 'LK',\r\n  '51': 'LT',\r\n  '52': 'LU',\r\n  '53': 'LV',\r\n  '54': 'HN',\r\n  '55': 'HR',\r\n  '56': 'HU',\r\n  '57': 'ID',\r\n  '58': 'IE',\r\n  '59': 'IL',\r\n  '60': 'IM',\r\n  '61': 'IMPERIAL',\r\n  '62': 'IN',\r\n  '63': 'IQ',\r\n  '64': 'DE',\r\n  '65': 'DK',\r\n  '66': 'DO',\r\n  '67': 'DZ',\r\n  '68': 'EC',\r\n  '69': 'EE',\r\n  '70': 'EG',\r\n  '71': 'ES',\r\n  '72': 'EU',\r\n  '73': 'BH',\r\n  '74': 'BO',\r\n  '75': 'BR',\r\n  '76': 'BT',\r\n  '77': 'BY',\r\n  '78': 'CA',\r\n  '79': 'CH',\r\n  '80': 'AD',\r\n  '81': 'AE',\r\n  '82': 'AL',\r\n  '83': 'AM',\r\n  '84': 'CL',\r\n  '85': 'AQ',\r\n  '86': 'CN',\r\n  '87': 'AR',\r\n  '88': 'FI',\r\n  '89': 'CO',\r\n  '90': 'AT',\r\n  '91': 'IR',\r\n  '92': 'FR',\r\n  '93': 'COMMUNIST',\r\n  '94': 'AU',\r\n  '95': 'LY',\r\n  '96': 'IS',\r\n  '97': 'GB',\r\n  '98': 'CONFEDERATE',\r\n  '99': 'AZ',\r\n  '100': 'MA',\r\n  '101': 'IT',\r\n  '102': 'GE',\r\n  '103': 'CR',\r\n  '104': 'BA',\r\n  '105': 'PH',\r\n  '106': 'MC',\r\n  '107': 'JM',\r\n  '108': 'GR',\r\n  '109': 'CU',\r\n  '110': 'BD',\r\n  '111': 'SO',\r\n  '112': 'PK',\r\n  '113': 'MD',\r\n  '114': 'JO',\r\n  '115': 'GT',\r\n  '116': 'CY',\r\n  '117': 'BE',\r\n  '118': 'ZA',\r\n  '119': 'SV',\r\n  '120': 'PL',\r\n  '121': 'ME',\r\n  '122': 'JOLLY',\r\n  '123': 'HK',\r\n  '124': 'CZ',\r\n  '125': 'BG',\r\n};\r\n\r\nconst FLAGS_ISO_TO_CODE = Object.assign(\r\n  {},\r\n  ...Object.entries(FLAGS_CODE_TO_ISO).map(([numCode, charCode]) => ({ [charCode]: ~~numCode }))\r\n);\r\n\r\n/**\r\n * Country by ISO 3166-2\r\n *\r\n */\r\nconst COUNTRY_NAMES = {\r\n  AL: 'Albania',\r\n  DZ: 'Algeria',\r\n  AD: 'Andorra',\r\n  AQ: 'Antarctica',\r\n  AR: 'Argentina',\r\n  AM: 'Armenia',\r\n  AU: 'Australia',\r\n  AT: 'Austria',\r\n  AZ: 'Azerbaijan',\r\n  BH: 'Bahrain',\r\n  BD: 'Bangladesh',\r\n  BY: 'Belarus',\r\n  BE: 'Belgium',\r\n  BT: 'Bhutan',\r\n  BO: 'Bolivia',\r\n  BA: 'Bosnia and Herzegovina',\r\n  BR: 'Brazil',\r\n  BG: 'Bulgaria',\r\n  CA: 'Canada',\r\n  CL: 'Chile',\r\n  CN: 'China',\r\n  CO: 'Colombia',\r\n  COMMUNIST: 'Communist',\r\n  CONFEDERATE: 'Confederate',\r\n  CR: 'CostaRica',\r\n  HR: 'Croatia',\r\n  CU: 'Cuba',\r\n  CY: 'Cyprus',\r\n  CZ: 'Czech Republic',\r\n  DK: 'Denmark',\r\n  DO: 'Dominican Republic',\r\n  KP: 'DPRK',\r\n  EC: 'Ecuador',\r\n  EG: 'Egypt',\r\n  SV: 'ElSalvador',\r\n  EE: 'Estonia',\r\n  EU: 'European Union',\r\n  FI: 'Finland',\r\n  FR: 'France',\r\n  GE: 'Georgia',\r\n  DE: 'Germany',\r\n  GR: 'Greece',\r\n  GT: 'Guatemala',\r\n  HN: 'Honduras',\r\n  HK: 'HongKong',\r\n  HU: 'Hungary',\r\n  IS: 'Iceland',\r\n  IMPERIAL: 'Imperial Japan',\r\n  IN: 'India',\r\n  ID: 'Indonesia',\r\n  IR: 'Iran',\r\n  IQ: 'Iraq',\r\n  IE: 'Ireland',\r\n  IM: 'Isle of Man',\r\n  IL: 'Israel',\r\n  IT: 'Italy',\r\n  JM: 'Jamaica',\r\n  JP: 'Japan',\r\n  JOLLY: 'Jolly Rogers',\r\n  JO: 'Jordan',\r\n  KZ: 'Kazakhstan',\r\n  KW: 'Kuwait',\r\n  LV: 'Latvia',\r\n  LB: 'Lebanon',\r\n  LY: 'Libyan Arab Jamahiriya',\r\n  LI: 'Liechtenstein',\r\n  LT: 'Lithuania',\r\n  LU: 'Luxembourg',\r\n  MO: 'Macao',\r\n  MK: 'Macedonia',\r\n  MY: 'Malaysia',\r\n  MT: 'Malta',\r\n  MX: 'Mexico',\r\n  MD: 'Moldova',\r\n  MC: 'Monaco',\r\n  ME: 'Montenegro',\r\n  MA: 'Morocco',\r\n  NP: 'Nepal',\r\n  NL: 'Netherlands',\r\n  NZ: 'New Zealand',\r\n  NG: 'Nigeria',\r\n  NO: 'Norway',\r\n  OM: 'Oman',\r\n  PK: 'Pakistan',\r\n  PA: 'Panama',\r\n  PY: 'Paraguay',\r\n  PE: 'Peru',\r\n  PH: 'Philippines',\r\n  PL: 'Poland',\r\n  PT: 'Portugal',\r\n  PR: 'PuertoRico',\r\n  QA: 'Qatar',\r\n  RAINBOW: 'Rainbow',\r\n  RO: 'Romania',\r\n  RU: 'Russian Federation',\r\n  SM: 'SanMarino',\r\n  SA: 'Saudi Arabia',\r\n  RS: 'Serbia',\r\n  SG: 'Singapore',\r\n  SK: 'Slovakia',\r\n  SI: 'Slovenia',\r\n  SO: 'Somalia',\r\n  ZA: 'South Africa',\r\n  KR: 'South Korea',\r\n  ES: 'Spain',\r\n  LK: 'Sri Lanka',\r\n  SE: 'Sweden',\r\n  CH: 'Switzerland',\r\n  SY: 'Syrian Arab Republic',\r\n  TW: 'Taiwan',\r\n  TZ: 'Tanzania',\r\n  TH: 'Thailand',\r\n  TT: 'Trinidad and Tobago',\r\n  TN: 'Tunisia',\r\n  TR: 'Turkey',\r\n  TM: 'Turkmenistan',\r\n  UA: 'Ukraine',\r\n  AE: 'United Arab Emirates',\r\n  GB: 'United Kingdom',\r\n  UN: 'United Nations',\r\n  US: 'United States',\r\n  UY: 'Uruguay',\r\n  UZ: 'Uzbekistan',\r\n  VE: 'Venezuela',\r\n  VN: 'Vietnam',\r\n};\r\n\r\nexport { FLAGS_CODE_TO_ISO, COUNTRY_NAMES, FLAGS_ISO_TO_CODE };\r\n","import { Keystate } from '../types/client';\r\n\r\nexport const encodeUpgrades = (speed: number, shield: number, inferno: number): number => {\r\n  return (speed & 7) | (shield << 3) | (inferno << 4);\r\n};\r\n\r\nexport const encodeKeystate = (\r\n  keystate: Keystate,\r\n  boost: boolean,\r\n  strafe: boolean,\r\n  stealthed: boolean,\r\n  flagspeed: boolean\r\n): number => {\r\n  const down = keystate.DOWN === true ? 1 : 0;\r\n\r\n  return (\r\n    0 |\r\n    ((keystate.UP === true ? 1 : 0) << 0) |\r\n    ((keystate.UP === true ? 0 : down) << 1) |\r\n    ((keystate.LEFT === true ? 1 : 0) << 2) |\r\n    ((keystate.RIGHT === true ? 1 : 0) << 3) |\r\n    ((boost === true ? 1 : 0) << 4) |\r\n    ((strafe === true ? 1 : 0) << 5) |\r\n    ((stealthed === true ? 1 : 0) << 6) |\r\n    ((flagspeed === true ? 1 : 0) << 7)\r\n  );\r\n};\r\n","// this file is a copy of ab-server\\src\\constants\\ships.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nimport { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\n\r\nexport const SHIPS_TYPES = {\r\n  PREDATOR: 1,\r\n  GOLIATH: 2,\r\n  COPTER: 3,\r\n  TORNADO: 4,\r\n  PROWLER: 5,\r\n};\r\n\r\nexport const SHIPS_FIRE_MODES = {\r\n  FIRE: 'fire',\r\n  INFERNO: 'infernoFire',\r\n};\r\n\r\nexport const SHIPS_FIRE_TYPES = {\r\n  DEFAULT: 'default',\r\n  SPECIAL: 'special',\r\n};\r\n\r\nexport const SHIPS_ENCLOSE_RADIUS = {\r\n  PREDATOR: 32,\r\n  GOLIATH: 88,\r\n  COPTER: 34,\r\n  TORNADO: 38,\r\n  PROWLER: 36,\r\n};\r\n\r\nconst missileTemplate = (type: number, x: number, y: number, rot: number, alt = false): object => {\r\n  return {\r\n    type,\r\n    x,\r\n    y,\r\n    rot,\r\n    alt,\r\n  };\r\n};\r\n\r\nconst missileFireTemplate = (def: any = [], special: any = []): any => {\r\n  return {\r\n    [SHIPS_FIRE_TYPES.DEFAULT]: def,\r\n    [SHIPS_FIRE_TYPES.SPECIAL]: special,\r\n  };\r\n};\r\n\r\nexport const SHIPS_SPECS = {\r\n  [SHIPS_TYPES.PREDATOR]: {\r\n    name: 'raptor',\r\n\r\n    turnFactor: 0.065,\r\n    accelFactor: 0.225,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1.5,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 5.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.008,\r\n    fireEnergy: 0.6,\r\n    specialEnergy: 0,\r\n    specialEnergyRegen: -0.01,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 550, // ms.\r\n    damageFactor: 2,\r\n    energyLight: 0.6,\r\n\r\n    collisions: [[0, 5, 23], [0, -15, 15], [0, -25, 12]],\r\n\r\n    repelEnergy: 2100,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, -20, 5, -0.05),\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 20, 5, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.GOLIATH]: {\r\n    name: 'spirit',\r\n\r\n    turnFactor: 0.04,\r\n    accelFactor: 0.15,\r\n    brakeFactor: 0.015,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 3.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.0005,\r\n    energyRegen: 0.005,\r\n    fireEnergy: 0.9,\r\n    specialEnergy: 0.5,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 1000,\r\n\r\n    fireDelay: 300, // ms.\r\n    damageFactor: 1,\r\n    energyLight: 0.9,\r\n\r\n    collisions: [\r\n      [0, 0, 35],\r\n      [50, 14, 16],\r\n      [74, 26, 14],\r\n      [30, 8, 23],\r\n      [63, 22, 15],\r\n      [-50, 14, 16],\r\n      [-74, 26, 14],\r\n      [-30, 8, 23],\r\n      [-63, 22, 15],\r\n    ],\r\n\r\n    repelEnergy: 7500,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, -30, 0, -0.05),\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 30, 0, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.COPTER]: {\r\n    name: 'mohawk',\r\n\r\n    turnFactor: 0.07,\r\n    accelFactor: 0.275,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 6,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.01,\r\n    fireEnergy: 0.3,\r\n    specialEnergy: 0,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 300,\r\n    damageFactor: 2.78,\r\n    energyLight: 0.3,\r\n\r\n    collisions: [[0, -12, 15], [0, 0, 17], [0, 13, 15], [0, 26, 15]],\r\n\r\n    repelEnergy: 1800,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 15, 10, 0, true),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, -10, 5, -0.05),\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 0, 10, 0),\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 10, 5, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.TORNADO]: {\r\n    name: 'tornado',\r\n\r\n    turnFactor: 0.055,\r\n    accelFactor: 0.2,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 4.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.006,\r\n    fireEnergy: 0.5,\r\n    specialEnergy: 0.9,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 500,\r\n    damageFactor: 5 / 3,\r\n    energyLight: 0.5,\r\n\r\n    collisions: [[0, 8, 18], [14, 12, 13], [-14, 12, 13], [0, -12, 16], [0, -26, 14], [0, -35, 12]],\r\n\r\n    repelEnergy: 2400,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate(\r\n      [missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0)],\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, -15, 10, -0.05),\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, 15, 10, 0.05),\r\n      ]\r\n    ),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate(\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -15, 10, -0.05),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 15, 10, 0.05),\r\n      ],\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -30, 20, -0.06),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -20, 15, -0.03),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 20, 15, 0.03),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 30, 20, 0.06),\r\n      ]\r\n    ),\r\n  },\r\n\r\n  [SHIPS_TYPES.PROWLER]: {\r\n    name: 'prowler',\r\n\r\n    turnFactor: 0.055,\r\n    accelFactor: 0.2,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 4.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.006,\r\n    fireEnergy: 0.75,\r\n    specialEnergy: 0.6,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 1500,\r\n\r\n    damageFactor: 5 / 3,\r\n    fireDelay: 300,\r\n    energyLight: 0.75,\r\n\r\n    collisions: [[0, 11, 25], [0, -8, 18], [19, 20, 10], [-19, 20, 10], [0, -20, 14]],\r\n\r\n    repelEnergy: 2600,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, -20, 0, -0.05),\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 20, 0, 0.05),\r\n    ]),\r\n  },\r\n};\r\n","/* tslint:disable */\r\n\r\n/** some stats: the walls have 12 different radii,\r\n * distributed in steps of 12 like this:\r\n * \r\n * radius : number of walls\r\n  '36': 4,\r\n  '48': 24,\r\n  '60': 52,\r\n  '72': 53,\r\n  '84': 62,\r\n  '96': 50,\r\n  '108': 142,\r\n  '120': 77,\r\n  '132': 43,\r\n  '144': 9,\r\n  '156': 2,\r\n  '168': 2\r\n */\r\n\r\nconst abWalls = [[1009, -2308, 108], [1241, -2490, 60], [1157, -2379, 84], [622, -2126, 48], [669, -2187, 72], [-392, -1669, 132],\r\n[-273, -1746, 60], [-252, -1504, 120], [1553, -2016, 48], [1637, -1972, 60], [1736, -1922, 60], [2150, -2406, 72], [2238, -2318, 108],\r\n[2364, -2391, 72], [2491, -2682, 72], [2596, -2671, 108], [-150, -3147, 48], [-155, -3044, 84], [-427, -3600, 48], [-259, -2982, 60],\r\n[-379, -3529, 72], [-665, -3052, 60], [20, -1816, 60], [127, -1799, 60], [263, -2572, 48], [405, -2570, 108], [851, -4183, 120], [754, -3971, 108],\r\n[1757, -5065, 132], [1169, -4453, 108], [2054, -5244, 108], [1631, -4901, 108], [2305, -5281, 108], [1007, -4281, 96], [2766, -5202, 96],\r\n[2927, -5204, 84], [3206, -5218, 36], [3099, -5193, 72], [1417, -4726, 120], [2844, -1513, 60], [3206, -1464, 120], [2881, -1403, 108],\r\n[3804, -2025, 84], [4116, -1778, 108], [3715, -1508, 72], [4247, -1126, 72], [3860, 268, 60], [4334, -1011, 132], [3849, 349, 72],\r\n[3956, 490, 96], [4073, 667, 108], [3583, -864, 96], [4135, 836, 120], [4785, -743, 120], [4993, -839, 108], [5224, -482, 84], [5235, -1238, 132],\r\n[5419, -1346, 72], [6075, -5099, 96], [5767, -4953, 108], [5896, -4967, 108], [5384, -4642, 108], [5704, -4857, 108], [5563, -4697, 108],\r\n[5406, -4470, 132], [5352, -3964, 108], [5309, -3665, 132], [5247, -3464, 108], [5300, -3121, 108], [3524, -3340, 132], [3661, -3589, 108],\r\n[7236, -1376, 72], [7624, -1610, 96], [7403, -1555, 84], [7514, -1568, 108], [3660, -2705, 108], [3374, -2813, 96], [7347, -1447, 108],\r\n[7236, -775, 60], [7207, -631, 108], [7303, -468, 108], [7262, -1263, 108], [7404, -350, 120], [7589, -305, 108], [7741, -1589, 120],\r\n[7949, -1594, 120], [8152, -1599, 132], [8378, -1602, 144], [7873, -321, 72], [8543, -1661, 84], [7790, -259, 120], [8675, -1573, 120],\r\n[8163, -245, 84], [8329, -311, 84], [8275, -229, 120], [8447, -277, 120], [8824, -1447, 108], [7221, -1140, 60], [8924, -1273, 108],\r\n[6844, -950, 120], [8949, -1060, 132], [8904, -920, 96], [8582, -338, 84], [8963, -803, 120], [8680, -322, 108], [8811, -449, 108],\r\n[8910, -610, 108], [6855, 114, 96], [6971, 241, 120], [6852, 656, 60], [6980, 706, 108], [6946, 939, 120], [6027, -560, 72],\r\n[7521, 425, 48], [7599, 389, 60], [5863, -431, 108], [9392, 262, 108], [7521, 512, 72], [9807, 1027, 60], [9554, 237, 120],\r\n[9346, 392, 144], [9789, 1142, 84], [9747, -532, 96], [8591, 347, 72], [9951, -509, 120], [9308, 2417, 60], [10185, -522, 108],\r\n[10330, 2147, 72], [9350, 2480, 84], [10503, 2124, 108], [12500, 2628, 60], [13188, 2864, 60], [12637, 2659, 84], [13262, 2899, 60],\r\n[13777, 5168, 60], [15709, 6399, 48], [13539, 5664, 60], [15660, 6474, 48], [13743, 5248, 84], [15482, 6600, 48], [15591, 6525, 36],\r\n[13487, 5738, 84], [15407, 6702, 72], [8171, -2568, 60], [16001, 6015, 72], [16017, 6110, 48], [6496, -1491, 60], [6626, -1480, 84],\r\n[6190, -1022, 96], [8325, -2615, 120], [8222, -2412, 120], [9204, -2288, 108], [9279, -2216, 120], [10375, -1558, 96], [10309, -1421, 108],\r\n[10247, -1216, 144], [10079, -2310, 108], [10320, -2330, 120], [10942, -2963, 108], [10807, -2778, 132], [12989, -1929, 72],\r\n[12613, -1181, 48], [12559, -1120, 60], [11642, -1900, 84], [11558, -1692, 108], [11509, -1479, 60], [12559, -2673, 96], [12446, -2487, 120],\r\n[12375, -2303, 108], [10363, -3514, 84], [10290, -3340, 108], [10162, -3207, 84], [9003, -3048, 108], [9161, -3119, 72], [14550, -3462, 108],\r\n[14407, -3335, 108], [14366, -4493, 108], [14477, -4437, 120], [15305, -4230, 108], [15481, -4283, 108], [15349, -5009, 48],\r\n[11874, -4879, 72], [15453, -4984, 84], [11907, -4742, 96], [12440, -4278, 60], [11980, -4582, 108], [12131, -4387, 132],\r\n[15681, -4973, 120], [12591, -4252, 96], [12777, -4244, 108], [12969, -4227, 108], [15897, -5071, 108], [13204, -4228, 120], [11592, -5261, 84],\r\n[12743, -4826, 48], [10102, -5078, 84], [12854, -4782, 108], [10191, -5033, 84], [10523, -5133, 120], [10336, -4977, 132], [10667, -5250, 96],\r\n[9665, -6403, 84], [10798, -5379, 60], [9670, -5547, 108], [9834, -6369, 120], [9864, -5572, 132], [11362, -3957, 108], [11162, -3830, 120],\r\n[8922, -6173, 120], [9003, -5368, 60], [8453, -6153, 72], [8954, -5229, 108], [8905, -5072, 96], [8704, -3873, 108], [8578, -6105, 96],\r\n[8508, -3710, 84], [8614, -5400, 60], [8788, -4922, 132], [8936, -3905, 72], [9701, -4613, 108], [6973, -4776, 72], [7016, -4674, 108],\r\n[9124, -3853, 108], [7253, -4648, 96], [6602, -4591, 72], [8510, -5322, 108], [6687, -3810, 84], [9525, -4492, 132], [7461, -4705, 108],\r\n[9280, -3812, 96], [6467, -2811, 36], [6842, -3820, 96], [6483, -2725, 72], [7675, -4864, 132], [6991, -2885, 108], [6610, -2664, 108],\r\n[6822, -2736, 108], [6763, -4582, 108], [6509, -2490, 108], [7216, -3865, 132], [7018, -3708, 120], [2254, -3301, 96], [6378, -2310, 96],\r\n[7197, -2857, 108], [2609, -3483, 60], [2449, -3385, 108], [4585, -2889, 84], [4470, -2768, 96], [4083, -4033, 108], [1568, -2869, 48],\r\n[4336, -4105, 144], [1977, -1678, 60], [1412, -3642, 60], [1570, -2792, 72], [1932, -1586, 72], [1310, -3547, 72], [3611, 1391, 120],\r\n[3558, 2174, 108], [3431, 1563, 108], [3142, 2813, 84], [3330, 2296, 132], [3001, 2818, 72], [3703, 2044, 48], [2872, 3863, 108],\r\n[3125, 2942, 132], [2841, 4018, 132], [2402, 5140, 72], [2511, 5167, 96], [-14607, -5112, 108], [-14430, -5180, 108], [-14197, -5222, 144],\r\n[-14895, -4703, 60], [-14797, -4728, 48], [-14697, -4739, 48], [-13919, -5281, 132], [-13646, -5170, 84], [-13400, -5068, 144],\r\n[-13099, -5108, 132], [-12824, -5092, 108], [-12631, -5044, 108], [-12427, -4914, 108], [-12270, -4816, 84], [-11772, -4983, 84], [-11940, -4867, 108], [-12091, -4699, 108], [-12270, -4529, 84], [-12460, -4396, 108], [-13058, -4252, 108], [-12894, -4096, 84], [-12738, -4077, 84], [-13546, -4341, 48], [-13428, -4299, 108], [-14679, -4192, 84], [-14368, -4308, 84], [-14495, -4133, 132], [-12072, -3824, 96], [-11904, -3648, 120], [-11654, -3569, 84], [-11648, -3357, 108], [-11420, -3359, 108], [-11296, -3135, 84], [-10782, -2838, 96], [-11410, -3039, 36], [-10581, -2773, 132], [-11118, -5114, 96], [-10675, -5079, 108], [-10205, -4890, 96], [-11543, -4164, 96], [-11287, -4244, 60], [-10018, -4747, 120], [-9278, 419, 60], [-9341, 470, 60], [-9180, 496, 96], [-11365, -4131, 120], [-9353, 0, 72], [-8975, 528, 120], [-9413, 89, 108], [-8230, 770, 48], [-9231, 17, 84], [-6808, 1667, 60], [-6694, 1622, 96], [-8285, 855, 72], [-6793, 1796, 96], [-6865, 1935, 60], [-7043, 2222, 72], [-7083, 2368, 72], [-7103, 2533, 84], [-7099, 2721, 96], [-7178, 2874, 48], [-6964, 3110, 84], [-6246, 4191, 72], [-6735, 3446, 48], [-6722, 3537, 84], [-6396, 3388, 108], [-6787, 3140, 108], [-6227, 4488, 84], [-6281, 3953, 72], [-6530, 3576, 132], [-6147, 3994, 132], [-6141, 4292, 144], [-6377, 5578, 84], [-6152, 4569, 108], [-6222, 4769, 84], [-6266, 4956, 72], [-6233, 5414, 108], [-6347, 5646, 84], [-6400, 6066, 84], [-6411, 6261, 96], [-6565, 7043, 72], [-6377, 6415, 108], [-6440, 6614, 84], [-5944, 1954, 60], [-6001, 2039, 96], [-6467, 7070, 108], [-4963, 3608, 72], [-4776, 3510, 48], [-5785, 1998, 132], [-3708, 3449, 72], [-3790, 3582, 108], [-4031, 3697, 84], [-4859, 3634, 120], [-3850, 3730, 120], [-4689, 4605, 108], [-3492, 2892, 72], [-4507, 4483, 72], [-4829, 2745, 108], [-4435, 4273, 108], [-3383, 2930, 108], [-4888, 2821, 108], [-5372, 5172, 60], [-5036, 2981, 108], [-9895, -1942, 120], [-9371, -2159, 72], [-9995, -1773, 108], [-5280, 5218, 108], [-5079, 5183, 108], [-5149, 3079, 72], [-9695, -2048, 120], [-5063, 5374, 108], [-9504, -2059, 120], [-8948, -2140, 84], [-9262, -2081, 132], [-9068, -2071, 120], [-8861, -2045, 132], [-8654, -2083, 120], [-8473, -2048, 120], [-8283, -1965, 120], [-8182, -1863, 108], [-10037, -1579, 108], [-10063, -1365, 108], [-10074, -1190, 108], [-8167, -1225, 60], [-8188, -1087, 96], [-9975, -1022, 108], [-9835, -910, 120], [-9709, -848, 120], [-9532, -792, 120], [-9348, -779, 120], [-9131, -784, 132], [-8754, -795, 84], [-8587, -797, 120], [-8424, -856, 108], [-8246, -921, 108], [-8153, -1701, 84], [-6447, -2137, 72], [-8153, -1591, 60], [-7694, -1393, 120], [-6541, -2030, 84], [-7135, -1547, 84], [-5885, -2958, 72], [-7171, -1440, 96], [-5620, -3123, 72], [-6631, -1866, 96], [-5882, -3696, 96], [-5716, -2944, 108], [-5949, -3528, 60], [-6869, -4052, 96], [-7081, -2673, 60], [-6725, -4069, 72], [-10487, -2295, 60], [-7032, -2749, 72], [-10769, -3817, 72], [-6607, -4081, 60], [-10849, -1824, 84], [-10479, -2146, 108], [-7003, -2611, 108], [-10749, -1511, 72], [-10697, -1953, 120], [-10848, -1330, 108], [-10912, -1220, 60], [-9843, -2685, 84], [-10823, -3717, 84], [-9697, -2713, 72], [-10080, -3431, 48], [-10648, -3844, 108], [-9530, -2695, 120], [-2387, -6791, 108], [-8465, -5037, 84], [-2550, -6627, 108], [-9325, -2822, 84], [-10140, -3346, 96], [-8461, -4908, 108], [8116, -1076, 96], [8115, -940, 96], [-2503, -6359, 168], [-9062, -1580, 96], [8120, -790, 96], [-9065, -1444, 96], [-2615, -6159, 120], [-2744, -5943, 132], [-3713, -4955, 108], [-9061, -1292, 96], [-1551, -4718, 60], [5251, -6249, 60], [5192, -6181, 48], [-2898, -5732, 108], [-1705, -4629, 96], [1618, -7035, 60], [-3829, -4776, 108], [-2851, -5589, 132], [-2974, -5399, 132], [-3952, -4568, 108], [-4135, -4368, 132], [-3428, -5104, 132], [-3167, -5254, 108], [-3049, -6916, 120], [-3097, -6722, 108], [-3190, -6493, 120], [-3318, -6284, 132], [-4672, -5861, 132], [-4480, -5668, 120], [-4294, -5548, 108], [-3433, -6072, 120], [-3568, -5881, 120], [-3736, -5698, 144], [-3978, -7517, 108], [-3956, -5572, 120], [-4103, -5400, 120], [-4281, -5240, 120], [-4409, -5034, 120], [-4475, -4808, 108], [-2777, -7546, 120], [-2542, -7502, 108], [-2398, -7364, 108], [-2350, -7151, 108], [-2315, -6976, 96], [-3749, -7488, 120], [-2995, -7596, 144], [-3253, -7558, 132], [-3468, -7472, 120], [-5028, -6473, 120], [-3604, -7301, 132], [-3678, -7078, 132], [-3835, -6826, 132], [-3935, -6595, 120], [-5214, -7381, 120], [-4065, -6416, 132], [-4174, -6231, 84], [-4556, -6940, 120], [-4663, -6781, 120], [-4748, -6548, 156], [-4847, -6257, 132], [-4806, -6016, 108], [-4950, -7410, 168], [-5470, -7251, 156], [-5637, -7038, 120], [-5593, -6819, 120], [-5406, -6727, 120], [-5263, -6580, 120], [-4636, -7476, 120], [-4399, -7496, 108], [-6769, -7571, 108], [-6853, -7377, 108], [-8273, -7231, 60], [-4182, -7512, 108], [-7525, -5855, 108], [-7495, -6329, 60], [-7297, -6946, 108], [-8148, -7137, 84], [-7030, -7301, 84]];\r\nexport { abWalls };","import { SHIPS_SPECS, SHIPS_TYPES } from \"../ab-assets/ships-constants\";\r\n\r\nconst sizes: AircraftSize[] = [];\r\n\r\nexport class AircraftSize {\r\n\r\n    constructor(private _width: number, private _height: number) {\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    static getSize(type: number): AircraftSize {\r\n        return sizes[type];\r\n    }\r\n}\r\n\r\nfor (const shipType of [SHIPS_TYPES.PREDATOR, SHIPS_TYPES.GOLIATH, SHIPS_TYPES.COPTER, SHIPS_TYPES.TORNADO, SHIPS_TYPES.PROWLER]) {\r\n    const hitCircles = SHIPS_SPECS[shipType].collisions;\r\n\r\n    let leftX: number = 999;\r\n    let rightX: number = 0;\r\n    let topY: number = 999;\r\n    let bottomY: number = 0;\r\n    for (const circle of hitCircles) {\r\n        const x = circle[0];\r\n        const y = circle[1];\r\n        const r = circle[2];\r\n        if (x - r < leftX) {\r\n            leftX = x - r;\r\n        }\r\n        if (x + r > rightX) {\r\n            rightX = x + r;\r\n        }\r\n        if (y - r < topY) {\r\n            topY = y - r;\r\n        }\r\n        if (y + r > bottomY) {\r\n            bottomY = y + r;\r\n        }\r\n    }\r\n    const shipWidth = rightX - leftX;\r\n    const shipHeight = bottomY - topY;\r\n    const size = new AircraftSize(shipWidth, shipHeight);\r\n    sizes[shipType] = size;\r\n}\r\n\r\n","import * as pathfinding from \"node-pathfinding\";\r\nimport { MAP_SIZE } from \"../ab-assets/map-constants\";\r\nimport { SHIPS_SPECS, SHIPS_TYPES } from \"../ab-assets/ships-constants\";\r\nimport { abWalls } from \"../ab-assets/walls\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { AircraftSize } from \"./aircraft-size\";\r\nimport { IShipAwareMapRepresentation } from \"./ishipaware-maprepresentation\";\r\n\r\nconst HIGH_RES = 10;\r\nconst LOW_RES = 100;\r\nconst LOWEST_RES = 500;\r\n\r\n/* tslint:disable:no-bitwise */\r\nfunction posFrom32bits(bits: number): IPos {\r\n    return { x: bits >>> 16, y: bits & 0xFFF };\r\n}\r\n/* tslint:enable:no-bitwise */\r\n\r\nclass ShipAwareMapRepresentation implements IShipAwareMapRepresentation {\r\n    private grid: any;\r\n\r\n    constructor(private scale: number, shipWidth: number) {\r\n\r\n        const mapArray: number[][] = [[]];\r\n\r\n        for (let y = 0; y < MAP_SIZE.HEIGHT / scale; y++) {\r\n            mapArray[y] = [];\r\n            for (let x = 0; x < MAP_SIZE.WIDTH / scale; x++) {\r\n                mapArray[y][x] = 0;\r\n            }\r\n        }\r\n        for (let y = 0; y < MAP_SIZE.HEIGHT / scale; y++) {\r\n            mapArray[y] = [];\r\n            for (let x = 0; x < MAP_SIZE.WIDTH / scale; x++) {\r\n                mapArray[y][x] = 0;\r\n            }\r\n        }\r\n\r\n        for (const wall of abWalls) {\r\n            const pos = this.translateToInternalRepresentation({ x: wall[0], y: wall[1] });\r\n\r\n            // add shipwidth / 2 (or a bit more) to the radius to account for the width of the ship in relation to the walls\r\n            const radius = Math.round((wall[2] + shipWidth * 0.8) / scale);\r\n\r\n            for (let x = pos.x - radius; x < pos.x + radius; x++) {\r\n                const dx = pos.x - x;\r\n                for (let y = pos.y - radius; y < pos.y + radius; y++) {\r\n                    const dy = pos.y - y;\r\n                    const distance = Math.sqrt(dx * dx + dy * dy);\r\n                    if (distance <= radius) {\r\n                        mapArray[y][x] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const width = mapArray[0].length;\r\n        const height = mapArray.length;\r\n\r\n        const buf = pathfinding.bytesFrom2DArray(width, height, mapArray);\r\n        this.grid = pathfinding.buildGrid(width, height, buf);\r\n    }\r\n\r\n    private translateToInternalRepresentation(pos: IPos): IPos {\r\n        return {\r\n            x: Math.round((pos.x + MAP_SIZE.HALF_WIDTH) / this.scale),\r\n            y: Math.round((pos.y + MAP_SIZE.HALF_HEIGHT) / this.scale),\r\n        };\r\n    }\r\n\r\n    private translateBack(internalPos: IPos): IPos {\r\n        return {\r\n            x: internalPos.x * this.scale - MAP_SIZE.HALF_WIDTH,\r\n            y: internalPos.y * this.scale - MAP_SIZE.HALF_HEIGHT\r\n        };\r\n    }\r\n\r\n    public getScale(): number {\r\n        return this.scale;\r\n    }\r\n\r\n    public findPath(pos1: IPos, pos2: IPos, pointsToAvoid: IPos[]): IPos[] {\r\n        const tpos1 = this.translateToInternalRepresentation(pos1);\r\n        const tpos2 = this.translateToInternalRepresentation(pos2);\r\n\r\n        const restoreWalkability: IPos[] = [];\r\n        for (const p of pointsToAvoid) {\r\n            const mapPoint = this.translateToInternalRepresentation(p);\r\n            for (let x = mapPoint.x - 1; x <= mapPoint.x + 1; x++) {\r\n                for (let y = mapPoint.y - 1; y <= mapPoint.y + 1; y++) {\r\n                    if (this.grid.isWalkableAt(x, y)) {\r\n                        restoreWalkability.push({x, y});\r\n                        this.grid.setWalkableAt(x, y, false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const result: IPos[] = [];\r\n\r\n        try {\r\n            const path = pathfinding.findPath(tpos1.x, tpos1.y, tpos2.x, tpos2.y, this.grid);\r\n\r\n            if (path) {\r\n                for (const bit of path) {\r\n                    result.push(this.translateBack(posFrom32bits(bit)));\r\n                }\r\n            }\r\n        } finally {\r\n            for (const p of restoreWalkability) {\r\n                this.grid.setWalkableAt(p.x, p.y, true);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nconst lowresAircraftMaps: IShipAwareMapRepresentation[] = [];\r\nconst highresAircraftMaps: IShipAwareMapRepresentation[] = [];\r\nconst lowestresMaps: IShipAwareMapRepresentation[] = [];\r\n\r\nconst lowestresMap = new ShipAwareMapRepresentation(LOWEST_RES, AircraftSize.getSize(SHIPS_TYPES.GOLIATH).width);\r\n\r\nfor (const shipType of [SHIPS_TYPES.PREDATOR, SHIPS_TYPES.GOLIATH, SHIPS_TYPES.COPTER, SHIPS_TYPES.TORNADO, SHIPS_TYPES.PROWLER]) {\r\n    lowresAircraftMaps[shipType] = new ShipAwareMapRepresentation(LOW_RES, AircraftSize.getSize(shipType).width);\r\n    highresAircraftMaps[shipType] = new ShipAwareMapRepresentation(HIGH_RES, AircraftSize.getSize(shipType).width);\r\n    lowestresMaps[shipType] = lowestresMap;\r\n}\r\n\r\nexport { lowestresMaps, lowresAircraftMaps, highresAircraftMaps }","import { PLAYERS_POSITION } from \"../ab-assets/map-constants\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { IFindPathConfig } from \"./ifindpath-config\";\r\nimport { IShipAwareMapRepresentation } from \"./ishipaware-maprepresentation\";\r\nimport { highresAircraftMaps, lowestresMaps, lowresAircraftMaps } from \"./maprepresentation\";\r\n\r\nconst PATH_LENGTH_THRESHOLD_FOR_HIGHRES = 2000;\r\nconst PATH_LENGTH_THRESHOLD_FOR_LOWRES = 80000;\r\n\r\ninterface ICalculatedPath {\r\n    isHighres: boolean;\r\n    path: IPos[];\r\n}\r\n\r\nexport class PathFinding {\r\n\r\n    public static initialize() {\r\n        // touch one of the maps to trigger initialize\r\n        const map = lowresAircraftMaps[2];\r\n        map.getScale();\r\n    }\r\n\r\n    public static findPath(config: IFindPathConfig): ICalculatedPath {\r\n        const pos1 = config.pos1;\r\n        const pos2 = config.pos2;\r\n        const aircraftType = config.aircraftType;\r\n        const pointsToAvoid = config.pointsToAvoid;\r\n\r\n        // if window is minimized, player position is unknown\r\n        if (Math.abs(pos1.x) === PLAYERS_POSITION.MAX_X || Math.abs(pos2.x) === PLAYERS_POSITION.MAX_X) {\r\n            return {\r\n                isHighres: false,\r\n                path: null\r\n            };\r\n        }\r\n\r\n        // tslint:disable-next-line: no-console\r\n        // console.log(\"pos: \", pos1.x, pos1.y, \" other: \", pos2.x, pos2.y);\r\n\r\n        let isHighres = false;\r\n\r\n        let map = lowestresMaps[aircraftType]\r\n        let path = PathFinding.tryFindPath(map, pos1, pos2, []);\r\n        if (!path || path.length * map.getScale() < PATH_LENGTH_THRESHOLD_FOR_LOWRES) {\r\n            map = lowresAircraftMaps[aircraftType];\r\n            path = PathFinding.tryFindPath(map, pos1, pos2, []);\r\n        }\r\n\r\n        // switch to highres if possible\r\n        if (!path || path.length * map.getScale() < PATH_LENGTH_THRESHOLD_FOR_HIGHRES) {\r\n            map = highresAircraftMaps[aircraftType];\r\n            path = PathFinding.tryFindPath(map, pos1, pos2, pointsToAvoid);\r\n            isHighres = true;\r\n        } else {\r\n            // otherwise calc the first segments as highres\r\n            const segmentLength = Math.round((PATH_LENGTH_THRESHOLD_FOR_HIGHRES / 2) / map.getScale());\r\n            if (path.length >= segmentLength) {\r\n                const refinedPath = this.tryFindPath(highresAircraftMaps[aircraftType], path[0], path[segmentLength - 1], pointsToAvoid);\r\n                if (refinedPath) {\r\n                    refinedPath.push(...path.slice(segmentLength));\r\n                    path = refinedPath;\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            isHighres,\r\n            path\r\n        }\r\n    }\r\n\r\n    private static tryFindPath(map: IShipAwareMapRepresentation, pos1: IPos, pos2: IPos, pointsToAvoid: IPos[]) {\r\n        try {\r\n            return map.findPath(pos1, pos2, pointsToAvoid);\r\n        } catch (error) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(\"error finding path\", error);\r\n            // tslint:disable-next-line: no-console\r\n            console.log(\"pos: \", pos1.x, pos1.y, \" other: \", pos2.x, pos2.y);\r\n        }\r\n    }\r\n}\r\n\r\n","import { IFindPathConfig } from \"./botting/ifindpath-config\";\r\nimport { PathFinding } from \"./botting/path-finding\";\r\n\r\ndeclare function postMessage(x: any): any;\r\n\r\nPathFinding.initialize();\r\n\r\npostMessage(\"ready\");\r\n\r\nonmessage = e => {\r\n    try {\r\n        const config = JSON.parse(e.data) as IFindPathConfig;\r\n        const path = PathFinding.findPath(config);\r\n\r\n        postMessage(JSON.stringify(path));\r\n    } catch (error) {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\"error in worker\", error);\r\n    }\r\n};\r\n"],"names":["parcelRequire","Grid","width","height","bytes","this","$a4b132d324fe7981$require$Buffer","isBuffer","Error","length","Math","ceil","bytesFrom2DArray","array2d","buf","byte","byteIndex","col","index","offset","row","x","y","_i","_j","_len","_len1","isNaN","Array","isArray","console","log","fill","Boolean","prototype","isWalkableAt","bytePos","setWalkableAt","walkable","getNeighbors","allowDiagonal","dontCrossCorners","d0","d1","d2","d3","neighbors","s0","s1","s2","s3","push","getARandomWalkableBrick","random","toString","startLoc","endLoc","path","arr","i","markpoints","result","_k","_ref","_ref1","join","module","exports","call","$0934e0939605d48c$export$a143d493d941bafc","$0934e0939605d48c$export$f99ded8fe4b79145","$0934e0939605d48c$var$customInspectSymbol","Symbol","$0934e0939605d48c$var$Buffer","$0934e0939605d48c$var$K_MAX_LENGTH","$0934e0939605d48c$var$createBuffer","RangeError","Uint8Array","Object","setPrototypeOf","arg","encodingOrOffset","TypeError","$0934e0939605d48c$var$allocUnsafe","$0934e0939605d48c$var$from","value","string","encoding","isEncoding","$0934e0939605d48c$var$byteLength","actual","write","slice","$0934e0939605d48c$var$fromString","ArrayBuffer","isView","arrayView","$0934e0939605d48c$var$isInstance","copy","$0934e0939605d48c$var$fromArrayBuffer","buffer","byteOffset","byteLength","$0934e0939605d48c$var$fromArrayLike","$0934e0939605d48c$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","obj","len","$0934e0939605d48c$var$checked","undefined","$0934e0939605d48c$var$numberIsNaN","type","data","$0934e0939605d48c$var$fromObject","toPrimitive","$0934e0939605d48c$var$assertSize","size","array","mustMatch","arguments","loweredCase","$0934e0939605d48c$var$utf8ToBytes","$0934e0939605d48c$var$base64ToBytes","toLowerCase","$0934e0939605d48c$var$slowToString","start","end","$0934e0939605d48c$var$hexSlice","$0934e0939605d48c$var$utf8Slice","$0934e0939605d48c$var$asciiSlice","$0934e0939605d48c$var$latin1Slice","$0934e0939605d48c$var$base64Slice","$0934e0939605d48c$var$utf16leSlice","$0934e0939605d48c$var$swap","n","m","$0934e0939605d48c$var$bidirectionalIndexOf","val","dir","$0934e0939605d48c$var$arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$0934e0939605d48c$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$0934e0939605d48c$var$utf8Write","$0934e0939605d48c$var$blitBuffer","$0934e0939605d48c$var$asciiWrite","str","byteArray","charCodeAt","$0934e0939605d48c$var$asciiToBytes","$0934e0939605d48c$var$base64Write","$0934e0939605d48c$var$ucs2Write","units","c","hi","lo","$0934e0939605d48c$var$utf16leToBytes","$bQMRt","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH","fromCharCode","apply","$0934e0939605d48c$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","$0934e0939605d48c$var$typedArraySupport","error","defineProperty","enumerable","get","poolSize","alloc","$0934e0939605d48c$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$0934e0939605d48c$var$hexSliceLookupTable","$0934e0939605d48c$var$checkOffset","ext","$0934e0939605d48c$var$checkInt","$0934e0939605d48c$var$checkIEEE754","$0934e0939605d48c$var$writeFloat","littleEndian","noAssert","$dbnIE","$0934e0939605d48c$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$0934e0939605d48c$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","$0934e0939605d48c$var$base64clean","src","dst","constructor","name","alphabet","table","i16","$8a0a73e6b73fd0c4$export$d622b2ad8d90c771","$8a0a73e6b73fd0c4$export$6100ba28696e12de","b64","tmp","lens","$8a0a73e6b73fd0c4$var$getLens","validLen","placeHoldersLen","$8a0a73e6b73fd0c4$var$Arr","$8a0a73e6b73fd0c4$var$_byteLength","curByte","$8a0a73e6b73fd0c4$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$8a0a73e6b73fd0c4$var$encodeChunk","$8a0a73e6b73fd0c4$var$lookup","$8a0a73e6b73fd0c4$var$code","$8a0a73e6b73fd0c4$var$i","$8a0a73e6b73fd0c4$var$len","num","output","$998eb38f4d082829$export$aafa59e2e03f2942","$998eb38f4d082829$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","floor","LN2","Heap","SQRT2","backtrace","grid","heuristic","locToClosed","locToF","locToG","locToH","locToOpen","locToParent","openList","syncfinder_astar","dx","dy","node","unshift","findPathByBrickLoc","theGrid","findPath","startX","startY","endX","endY","neighbor","neighborNode","ng","nodeX","nodeY","reset","isNotEmpty","pop","updateItem","nodes","_siftdown","startPos","newNode","parentNode","parentpos","_siftup","childPos","endPos","rightPos","lastelt","returnitem","$87af5b1ac654d440$export$fdf35536e9a0700c","WIDTH","HEIGHT","HALF_WIDTH","HALF_HEIGHT","$87af5b1ac654d440$export$9000cfdce9ac9444","MIN_X","MIN_Y","MAX_X","MAX_Y","$1f555963597ba593$exports","buildGrid","$e04a7dc61d37c5f1$export$2e2bcd8739ae039","LOGIN","BACKUP","HORIZON","ACK","PONG","KEY","COMMAND","SCOREDETAILED","CHAT","WHISPER","SAY","TEAMCHAT","VOTEMUTE","LOCALPING","$15f8799cbb9ebfe5$export$2e2bcd8739ae039","PING","PING_RESULT","ERROR","COMMAND_REPLY","PLAYER_NEW","PLAYER_LEAVE","PLAYER_UPDATE","PLAYER_FIRE","PLAYER_HIT","PLAYER_RESPAWN","PLAYER_FLAG","PLAYER_KILL","PLAYER_UPGRADE","PLAYER_TYPE","PLAYER_POWERUP","PLAYER_LEVEL","PLAYER_RETEAM","GAME_FLAG","GAME_SPECTATE","GAME_PLAYERSALIVE","GAME_FIREWALL","EVENT_REPEL","EVENT_BOOST","EVENT_BOUNCE","EVENT_STEALTH","EVENT_LEAVEHORIZON","MOB_UPDATE","MOB_UPDATE_STATIONARY","MOB_DESPAWN","MOB_DESPAWN_COORDS","CHAT_PUBLIC","CHAT_TEAM","CHAT_SAY","CHAT_WHISPER","CHAT_VOTEMUTEPASSED","CHAT_VOTEMUTED","SCORE_UPDATE","SCORE_BOARD","SCORE_DETAILED","SCORE_DETAILED_CTF","SCORE_DETAILED_BTR","SERVER_MESSAGE","SERVER_CUSTOM","$b7e01e2d61bb1b28$export$68317eef4cf08696","DATA_TYPES","text","textbig","arraysmall","uint16","uint24","uint32","float32","float64","boolean","speed","accel","coordx","coordy","coord24","rotation","healthenergy","regen","DataView","setUint8","storage","last","put","shift","flush","$61fb81f7808c6615$export$5fb656eb8279cede","KEY_CODES","assign","entries","map","$e4ad34ea523e3171$export$e9ee844dcc7f0271","SERVER_ERRORS","$e4ad34ea523e3171$export$42a822ee93e68ea","SERVER_MESSAGE_TYPES","$e4ad34ea523e3171$export$37c60925b115eafe","COMMAND_REPLY_TYPES","$e4ad34ea523e3171$export$acf2bb14e0f91565","LEAVE_HORIZON_TYPES","$e4ad34ea523e3171$export$696edb37a517566d","MOB_TYPES","$e4ad34ea523e3171$export$a1106979a67ebdb7","MOB_DESPAWN_TYPES","$e4ad34ea523e3171$export$b46071ccfafa6f3d","PLAYER_LEVEL_UPDATE_TYPES","$e4ad34ea523e3171$export$757f4d82d38e44cb","PLAYER_STATUS","$e4ad34ea523e3171$export$1adcfbf43f9c9a1f","PLAYER_UPGRADE_TYPES","SERVER_CUSTOM_TYPES","PLAYER_POWERUP_TYPES","CTF_TEAMS","$e4ad34ea523e3171$export$dc70d30ea27a9c84","CTF_FLAG_STATE","$e4ad34ea523e3171$export$2e3eef2b8eccf7df","CTF_CAPTURE_BOUNTY","$e4ad34ea523e3171$export$2da22006ffea76d","BTR_FIREWALL_STATUS","$e4ad34ea523e3171$export$8c774bfef34b3c59","CTF_WIN_BOUNTY","$e4ad34ea523e3171$export$617502ab31fc951c","BTR_WIN_BOUNTY","$e4ad34ea523e3171$export$8b45ddaeb7c31e28","GAME_TYPES","$e4ad34ea523e3171$export$92da91fbfb7b66aa","$e4ad34ea523e3171$export$91e7ecb6780caa5e","$e4ad34ea523e3171$export$d26f8cc6b574a220","numCode","charCode","$ad11f6fc34bb1cfa$export$aa1d7fff11452d37","PREDATOR","GOLIATH","COPTER","TORNADO","PROWLER","$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6","$ad11f6fc34bb1cfa$export$637dcfd116ceec58","$ad11f6fc34bb1cfa$var$missileTemplate","rot","alt","$ad11f6fc34bb1cfa$var$missileFireTemplate","def","special","$ad11f6fc34bb1cfa$export$637dcfd116ceec58_DEFAULT","$ad11f6fc34bb1cfa$export$637dcfd116ceec58_SPECIAL","$ad11f6fc34bb1cfa$export$de794ad9b3d6afb7","turnFactor","accelFactor","brakeFactor","boostFactor","infernoFactor","maxSpeed","minSpeed","flagSpeed","healthRegen","energyRegen","fireEnergy","specialEnergy","specialEnergyRegen","specialDelay","fireDelay","damageFactor","energyLight","collisions","repelEnergy","$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6_FIRE","PREDATOR_MISSILE","$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6_INFERNO","GOLIATH_MISSILE","COPTER_MISSILE","TORNADO_MISSILE","TORNADO_SMALL_MISSILE","PROWLER_MISSILE","$35cddcdef3a819e4$export$538e3d9fdc6b7eea","$a6571f70560d3626$var$sizes","$a6571f70560d3626$export$d77a2bc8f6628f42","_width","_height","static","shipType","hitCircles","leftX","rightX","topY","bottomY","circle","r","$ca76cabc7d32feff$var$ShipAwareMapRepresentation","scale","shipWidth","mapArray","y1","x1","wall","translateToInternalRepresentation","radius","round","x2","y2","sqrt","translateBack","internalPos","getScale","pos1","pos2","pointsToAvoid","tpos1","tpos2","restoreWalkability","p","mapPoint","bit","bits","p1","$ca76cabc7d32feff$export$c71ae647ae0b22b8","$ca76cabc7d32feff$export$1991dc3812003de4","$ca76cabc7d32feff$export$7a869ce99deb324e","$ca76cabc7d32feff$var$lowestresMap","getSize","$2fa72ef06efcb071$export$cd51d8d84d256df6","config","aircraftType","isHighres","tryFindPath","segmentLength","$2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_HIGHRES","refinedPath","initialize","postMessage","onmessage","JSON","parse","stringify"],"version":3,"file":"browser-worker.js.map"}