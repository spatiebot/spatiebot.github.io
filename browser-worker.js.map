{"mappings":"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GAAG,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,GAAG,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,KAAM,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,OAAQ,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,KAAM,MAAO,GAAG,CAAE,CAAC,KAAM,KAAM,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,KAAM,KAAM,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,KAAM,MAAO,GAAG,CAAE,CAAC,KAAM,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,KAAM,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,IAAI,CAAE,CAAC,MAAO,MAAO,GAAG,CAAE,CAAC,MAAO,MAAO,GAAG,CAAC,CC1Dh1J,EAAwB,EAAE,AAEzB,OAAM,EAET,YAAoB,CAAc,CAAE,CAAuB,CAAE,CAAzC,IAAA,CAAA,MAAA,CAAA,EAAwB,IAAA,CAAA,OAAA,CAAA,CAC5C,CAEA,IAAI,OAAgB,CAChB,OAAO,IAAI,CAAC,MAAM,AACtB,CAEA,IAAI,QAAiB,CACjB,OAAO,IAAI,CAAC,OAAO,AACvB,CAEA,OAAO,QAAQ,CAAY,CAAgB,CACvC,OAAO,CAAK,CAAC,EAAK,AACtB,CACJ,CAEA,IAAK,IAAM,IAAY,CxBhBX,EACD,EACD,EACC,EACA,EwBYqH,CAAE,CAC9H,IAAM,EAAa,AAAA,CAAW,CAAC,EAAS,CAAC,UAAU,CAE/C,EAAgB,IAChB,EAAiB,EACjB,EAAe,IACf,EAAkB,EACtB,IAAK,IAAM,KAAU,EAAY,CAC7B,IAAM,EAAI,CAAM,CAAC,EAAE,CACb,EAAI,CAAM,CAAC,EAAE,CACb,EAAI,CAAM,CAAC,EAAE,CACf,EAAI,EAAI,GACR,CAAA,EAAQ,EAAI,CAAA,EAEZ,EAAI,EAAI,GACR,CAAA,EAAS,EAAI,CAAA,EAEb,EAAI,EAAI,GACR,CAAA,EAAO,EAAI,CAAA,EAEX,EAAI,EAAI,GACR,CAAA,EAAU,EAAI,CAAA,CAEtB,CAGA,IAAM,EAAO,IAAI,EAFC,EAAS,EACR,EAAU,EAE7B,CAAA,CAAK,CAAC,EAAS,CAAG,CACtB,C1BhCA,MAAM,EAGF,YAAY,CAAqB,CAAE,CAAiB,CAAE,CAAlC,IAAA,CAAA,KAAA,CAAA,EAEhB,IAAM,EAAuB,CAAC,EAAE,CAAC,CAEjC,IAAK,IAAI,EAAI,EAAG,EAAI,AAAA,EAAS,MAAM,CAAG,EAAO,IAAK,CAC9C,CAAQ,CAAC,EAAE,CAAG,EAAE,CAChB,IAAK,IAAI,EAAI,EAAG,EAAI,AAAA,EAAS,KAAK,CAAG,EAAO,IACxC,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAG,CAEzB,CACA,IAAK,IAAI,EAAI,EAAG,EAAI,AAAA,EAAS,MAAM,CAAG,EAAO,IAAK,CAC9C,CAAQ,CAAC,EAAE,CAAG,EAAE,CAChB,IAAK,IAAI,EAAI,EAAG,EAAI,AAAA,EAAS,KAAK,CAAG,EAAO,IACxC,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAG,CAEzB,CAEA,IAAK,IAAM,KAAQ,EAAS,CACxB,IAAM,EAAM,IAAI,CAAC,iCAAiC,CAAC,CAAE,EAAG,CAAI,CAAC,EAAE,CAAE,EAAG,CAAI,CAAC,EAAE,AAAC,GAGtE,EAAS,KAAK,KAAK,CAAC,AAAC,CAAA,CAAI,CAAC,EAAE,CAAG,AAAY,GAAZ,CAAY,EAAO,GAExD,IAAK,IAAI,EAAI,EAAI,CAAC,CAAG,EAAQ,EAAI,EAAI,CAAC,CAAG,EAAQ,IAAK,CAClD,IAAM,EAAK,EAAI,CAAC,CAAG,EACnB,IAAK,IAAI,EAAI,EAAI,CAAC,CAAG,EAAQ,EAAI,EAAI,CAAC,CAAG,EAAQ,IAAK,CAClD,IAAM,EAAK,EAAI,CAAC,CAAG,EACF,KAAK,IAAI,CAAC,EAAK,EAAK,EAAK,IAC1B,GACZ,CAAA,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAG,CAAA,CAEzB,CACJ,CACJ,CAEA,IAAM,EAAQ,CAAQ,CAAC,EAAE,CAAC,MAAM,CAC1B,EAAS,EAAS,MAAM,CAExB,EAAM,EAAA,gBAAA,CAA6B,EAAO,EAAQ,EACxD,CAAA,IAAI,CAAC,IAAI,CAAG,EAAA,SAAA,CAAsB,EAAO,EAAQ,EACrD,CAEQ,kCAAkC,CAAS,CAAQ,CACvD,MAAO,CACH,EAAG,KAAK,KAAK,CAAE,AAAA,CAAA,EAAI,CAAC,CAAG,AAAA,EAAS,UAAS,AAAT,EAAc,IAAI,CAAC,KAAK,EACxD,EAAG,KAAK,KAAK,CAAE,AAAA,CAAA,EAAI,CAAC,CAAG,AAAA,EAAS,WAAU,AAAV,EAAe,IAAI,CAAC,KAAK,CAC7D,CACJ,CAEQ,cAAc,CAAiB,CAAQ,CAC3C,MAAO,CACH,EAAG,EAAY,CAAC,CAAG,IAAI,CAAC,KAAK,CAAG,AAAA,EAAS,UAAU,CACnD,EAAG,EAAY,CAAC,CAAG,IAAI,CAAC,KAAK,CAAG,AAAA,EAAS,WAAW,AACxD,CACJ,CAEO,UAAmB,CACtB,OAAO,IAAI,CAAC,KAAK,AACrB,CAEO,SAAS,CAAU,CAAE,CAAU,CAAE,CAAqB,CAAU,CACnE,IAAM,EAAQ,IAAI,CAAC,iCAAiC,CAAC,GAC/C,EAAQ,IAAI,CAAC,iCAAiC,CAAC,GAE/C,EAA6B,EAAE,CACrC,IAAK,IAAM,KAAK,EAAe,CAC3B,IAAM,EAAW,IAAI,CAAC,iCAAiC,CAAC,GACxD,IAAK,IAAI,EAAI,EAAS,CAAC,CAAG,EAAG,GAAK,EAAS,CAAC,CAAG,EAAG,IAC9C,IAAK,IAAI,EAAI,EAAS,CAAC,CAAG,EAAG,GAAK,EAAS,CAAC,CAAG,EAAG,IAC1C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAG,KAC1B,EAAmB,IAAI,CAAC,CAAC,EAAA,EAAG,EAAA,CAAC,GAC7B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAG,EAAG,CAAA,GAI9C,CAEA,IAAM,EAAiB,EAAE,CAEzB,GAAI,CACA,IAAM,EAAO,EAAA,QAAA,CAAqB,EAAM,CAAC,CAAE,EAAM,CAAC,CAAE,EAAM,CAAC,CAAE,EAAM,CAAC,CAAE,IAAI,CAAC,IAAI,EAE/E,GAAI,EACA,IAAK,IAAM,KAAO,EACd,EAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CA3FvC,CAAE,EAAG,AA2FiD,IA3FxC,GAAI,EAAG,AAAO,KA2F0B,CA3FpB,GA8FrC,QAAU,CACN,IAAK,IAAM,KAAK,EACZ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAA,EAE1C,CAEA,OAAO,CACX,CACJ,CAEA,IAAM,EAAoD,EAAE,CACtD,EAAqD,EAAE,CACvD,EAA+C,EAAE,CAEjD,EAAe,IAAI,EAhHN,IAgH6C,AAAA,EAAa,OAAO,CEnHzE,GFmH+F,KAAK,EAE/G,IAAK,IAAM,IAAY,CEtHX,EACD,EACD,EACC,EACA,EFkHqH,CAC5H,CAAkB,CAAC,EAAS,CAAG,IAAI,EApHvB,IAoH2D,AAAA,EAAa,OAAO,CAAC,GAAU,KAAK,EAC3G,CAAmB,CAAC,EAAS,CAAG,IAAI,EAtHvB,GAsH4D,AAAA,EAAa,OAAO,CAAC,GAAU,KAAK,EAC7G,CAAa,CAAC,EAAS,CAAG,CFjHvB,OAAM,EAET,OAAc,YAAa,CAGvB,AADY,AAAA,CAAkB,CAAC,EAAE,CAC7B,QAAQ,EAChB,CAEA,OAAc,SAAS,CAAuB,CAAmB,CAC7D,IAAM,EAAO,EAAO,IAAI,CAClB,EAAO,EAAO,IAAI,CAClB,EAAe,EAAO,YAAY,CAClC,EAAgB,EAAO,aAAa,CAG1C,GAAI,KAAK,GAAG,CAAC,EAAK,CAAC,IAAM,AAAA,EAAiB,KAAK,EAAI,KAAK,GAAG,CAAC,EAAK,CAAC,IAAM,AAAA,EAAiB,KAAK,CAC1F,MAAO,CACH,UAAW,CAAA,EACX,KAAM,IACV,EAMJ,IAAI,EAAY,CAAA,EAEZ,EAAM,AAAA,CAAa,CAAC,EAAa,CACjC,EAAO,EAAY,WAAW,CAAC,EAAK,EAAM,EAAM,EAAE,EAOtD,GANI,CAAA,CAAC,GAAQ,EAAK,MAAM,CAAG,EAAI,QAAQ,GApCN,GAoCW,IACxC,EAAM,AAAA,CAAkB,CAAC,EAAa,CACtC,EAAO,EAAY,WAAW,CAAC,EAAK,EAAM,EAAM,EAAE,GAIlD,CAAC,GAAQ,EAAK,MAAM,CAAG,EAAI,QAAQ,GA3CL,IA4C9B,EAAM,AAAA,CAAmB,CAAC,EAAa,CACvC,EAAO,EAAY,WAAW,CAAC,EAAK,EAAM,EAAM,GAChD,EAAY,CAAA,MACT,CAEH,IAAM,EAAgB,KAAK,KAAK,CAAC,IAA0C,EAAI,QAAQ,IACvF,GAAI,EAAK,MAAM,EAAI,EAAe,CAC9B,IAAM,EAAc,IAAI,CAAC,WAAW,CAAC,AAAA,CAAmB,CAAC,EAAa,CAAE,CAAI,CAAC,EAAE,CAAE,CAAI,CAAC,EAAgB,EAAE,CAAE,GACtG,IACA,EAAY,IAAI,IAAI,EAAK,KAAK,CAAC,IAC/B,EAAO,EAEf,CACJ,CAEA,MAAO,CACH,UAAA,EACA,KAAA,CACJ,CACJ,CAEA,OAAe,YAAY,CAAgC,CAAE,CAAU,CAAE,CAAU,CAAE,CAAqB,CAAE,CACxG,GAAI,CACA,OAAO,EAAI,QAAQ,CAAC,EAAM,EAAM,EACpC,CAAE,MAAO,EAAO,CAEZ,QAAQ,GAAG,CAAC,qBAAsB,GAElC,QAAQ,GAAG,CAAC,QAAS,EAAK,CAAC,CAAE,EAAK,CAAC,CAAE,WAAY,EAAK,CAAC,CAAE,EAAK,CAAC,CACnE,CACJ,CACJ,CD5EA,AAAA,EAAY,UAAU,GAEtB,YAAY,SAEZ,UAAY,AAAA,IACR,GAAI,CACA,IAAM,EAAS,KAAK,KAAK,CAAC,EAAE,IAAI,EAC1B,EAAO,AAAA,EAAY,QAAQ,CAAC,GAElC,YAAY,KAAK,SAAS,CAAC,GAC/B,CAAE,MAAO,EAAO,CAEZ,QAAQ,GAAG,CAAC,kBAAmB,EACnC,CACJ,C,C","sources":["<anon>","node_modules/node-pathfinding/lib/grid.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/node-pathfinding/lib/syncfinder_astar.js","node_modules/node-pathfinding/lib/heap.js","src/browser-worker.ts","src/botting/path-finding.ts","src/ab-assets/map-constants.ts","src/botting/maprepresentation.ts","node_modules/node-pathfinding/index.js","src/ab-assets/ships-constants.ts","src/ab-protocol/src/lib.ts","src/ab-protocol/src/types/packets-client.ts","src/ab-protocol/src/types/packets-server.ts","src/ab-protocol/src/support/errors.ts","src/ab-protocol/src/packets/index.ts","src/ab-protocol/src/packets/client.ts","src/ab-protocol/src/packets/server.ts","src/ab-protocol/src/schemas/client.ts","src/ab-protocol/src/types/data.ts","src/ab-protocol/src/schemas/server.ts","src/ab-protocol/src/marshaling/index.ts","src/ab-protocol/src/support/utils.ts","src/ab-protocol/src/marshaling/client.ts","src/ab-protocol/src/marshaling/server.ts","src/ab-protocol/src/unmarshaling/index.ts","src/ab-protocol/src/unmarshaling/client.ts","src/ab-protocol/src/unmarshaling/server.ts","src/ab-protocol/src/types/client.ts","src/ab-protocol/src/types/server.ts","src/ab-protocol/src/types/flags.ts","src/ab-protocol/src/decoding/index.ts","src/ab-protocol/src/encoding/index.ts","src/ab-assets/walls.ts","src/botting/aircraft-size.ts"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"e8EsF\", function(module, exports) {\n\nvar $N0o3H = parcelRequire(\"N0o3H\");\nvar $a4b132d324fe7981$require$Buffer = $N0o3H.Buffer;\n// Generated by CoffeeScript 1.6.3\n(function() {\n    var Grid;\n    Grid = function() {\n        Grid.bytesFrom2DArray = function(width, height, array2d) {\n            var buf, byte, byteIndex, col, index, offset, row, x, y, _i, _j, _len, _len1;\n            if (isNaN(width) || width <= 0 || isNaN(height) || height <= 0 || !Array.isArray(array2d)) {\n                console.log(\"ERROR [grid$::bytesFrom2DArray] bad arguments, width:\" + width + \", height:\" + height + \", array2d:\" + array2d);\n                return null;\n            }\n            buf = new $a4b132d324fe7981$require$Buffer(Math.ceil(width * height / 8));\n            buf.fill(255);\n            for(y = _i = 0, _len = array2d.length; _i < _len; y = ++_i){\n                row = array2d[y];\n                for(x = _j = 0, _len1 = row.length; _j < _len1; x = ++_j){\n                    col = row[x];\n                    if (!Boolean(col)) {\n                        index = y * width + x;\n                        byteIndex = index >>> 3;\n                        offset = 7 - index % 8;\n                        byte = buf[byteIndex];\n                        byte = byte ^ 1 << offset;\n                        buf[byteIndex] = byte;\n                    }\n                }\n            }\n            return buf;\n        };\n        function Grid(width, height, bytes) {\n            this.width = width;\n            this.height = height;\n            this.bytes = bytes;\n            if (!(width > 0 && height > 0 && $a4b132d324fe7981$require$Buffer.isBuffer(bytes))) throw new Error(\"bad arguments, width:\" + width + \", height:\" + height + \", bytes:\" + bytes);\n            if (bytes.length !== Math.ceil(width * height / 8)) throw new Error(\"bytes length mismatch, width:\" + width + \", height:\" + height + \", bytes.length:\" + bytes.length);\n        }\n        Grid.prototype.isWalkableAt = function(x, y) {\n            var byte, bytePos, index, offset;\n            if (x < 0 || y < 0 || x >= this.width || y >= this.height) return false;\n            index = y * this.width + x;\n            bytePos = index >>> 3;\n            offset = 7 - index % 8;\n            byte = this.bytes[bytePos];\n            return !Boolean(byte >>> offset & 1);\n        };\n        Grid.prototype.setWalkableAt = function(x, y, walkable) {\n            var byte, bytePos, index, offset;\n            if (x < 0 || y < 0 || x >= this.width || y >= this.height) return false;\n            index = y * this.width + x;\n            bytePos = index >>> 3;\n            offset = 7 - index % 8;\n            byte = this.bytes[bytePos];\n            if (walkable !== this.isWalkableAt(x, y)) return this.bytes[bytePos] = byte ^ 1 << offset;\n        };\n        Grid.prototype.getNeighbors = function(x, y, allowDiagonal, dontCrossCorners) {\n            var d0, d1, d2, d3, neighbors, s0, s1, s2, s3;\n            if (allowDiagonal == null) allowDiagonal = false;\n            if (dontCrossCorners == null) dontCrossCorners = false;\n            if (x < 0 || y < 0 || x >= this.width || y >= this.height) return null;\n            neighbors = [];\n            if (this.isWalkableAt(x, y - 1)) {\n                neighbors.push(x << 16 | y - 1);\n                s0 = true;\n            }\n            if (this.isWalkableAt(x + 1, y)) {\n                neighbors.push(x + 1 << 16 | y);\n                s1 = true;\n            }\n            if (this.isWalkableAt(x, y + 1)) {\n                neighbors.push(x << 16 | y + 1);\n                s2 = true;\n            }\n            if (this.isWalkableAt(x - 1, y)) {\n                neighbors.push(x - 1 << 16 | y);\n                s3 = true;\n            }\n            if (!allowDiagonal) return neighbors;\n            if (dontCrossCorners) {\n                d0 = s3 && s0;\n                d1 = s0 && s1;\n                d2 = s1 && s2;\n                d3 = s2 && s3;\n            } else {\n                d0 = s3 || s0;\n                d1 = s0 || s1;\n                d2 = s1 || s2;\n                d3 = s2 || s3;\n            }\n            if (d0 && this.isWalkableAt(x - 1, y - 1)) neighbors.push(x - 1 << 16 | y - 1);\n            if (d1 && this.isWalkableAt(x + 1, y - 1)) neighbors.push(x + 1 << 16 | y - 1);\n            if (d2 && this.isWalkableAt(x + 1, y + 1)) neighbors.push(x + 1 << 16 | y + 1);\n            if (d3 && this.isWalkableAt(x - 1, y + 1)) neighbors.push(x - 1 << 16 | y + 1);\n            return neighbors;\n        };\n        Grid.prototype.getARandomWalkableBrick = function() {\n            var x, y;\n            while(true){\n                x = Math.random() * this.width >>> 0;\n                y = Math.random() * this.height >>> 0;\n                if (this.isWalkableAt(x, y)) return x << 16 | y;\n            }\n        };\n        Grid.prototype.toString = function(startLoc, endLoc, path) {\n            var arr, brickLoc, i, markpoints, result, x, y, _i, _j, _k, _len, _ref, _ref1;\n            markpoints = {};\n            if (Array.isArray(path)) for(i = _i = 0, _len = path.length; _i < _len; i = ++_i){\n                brickLoc = path[i];\n                markpoints[brickLoc] = i % 10;\n            }\n            if (!isNaN(startLoc)) markpoints[startLoc] = \"S\";\n            if (!isNaN(endLoc)) markpoints[endLoc] = \"E\";\n            result = \"[Grid(width=\" + this.width + \", height=\" + this.height + \")]\\nDump: \\u2591=walkable, \\u2593=blocked\";\n            for(y = _j = 0, _ref = this.height; _j < _ref; y = _j += 1){\n                arr = [];\n                for(x = _k = 0, _ref1 = this.width; _k < _ref1; x = _k += 1)if (markpoints[x << 16 | y] !== void 0) arr.push(markpoints[x << 16 | y]);\n                else arr.push(this.isWalkableAt(x, y) ? \"\\u2591\" : \"\\u2593\");\n                result = result + (\"\\n\" + arr.join(''));\n            }\n            return result;\n        };\n        return Grid;\n    }();\n    module.exports = Grid;\n}).call(module.exports);\n\n});\nparcelRegister(\"N0o3H\", function(module, exports) {\n\n$parcel$export(module.exports, \"Buffer\", () => $0934e0939605d48c$export$a143d493d941bafc, (v) => $0934e0939605d48c$export$a143d493d941bafc = v);\n$parcel$export(module.exports, \"INSPECT_MAX_BYTES\", () => $0934e0939605d48c$export$f99ded8fe4b79145, (v) => $0934e0939605d48c$export$f99ded8fe4b79145 = v);\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $0934e0939605d48c$export$a143d493d941bafc;\nvar $0934e0939605d48c$export$e4cf37d7f6fb9e0a;\nvar $0934e0939605d48c$export$f99ded8fe4b79145;\nvar $0934e0939605d48c$export$599f31c3813fae4d;\n'use strict';\n\nvar $bQMRt = parcelRequire(\"bQMRt\");\n\nvar $dbnIE = parcelRequire(\"dbnIE\");\nvar $0934e0939605d48c$var$customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n : null;\n$0934e0939605d48c$export$a143d493d941bafc = $0934e0939605d48c$var$Buffer;\n$0934e0939605d48c$export$e4cf37d7f6fb9e0a = $0934e0939605d48c$var$SlowBuffer;\n$0934e0939605d48c$export$f99ded8fe4b79145 = 50;\nvar $0934e0939605d48c$var$K_MAX_LENGTH = 0x7fffffff;\n$0934e0939605d48c$export$599f31c3813fae4d = $0934e0939605d48c$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $0934e0939605d48c$var$Buffer.TYPED_ARRAY_SUPPORT = $0934e0939605d48c$var$typedArraySupport();\nif (!$0934e0939605d48c$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $0934e0939605d48c$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        var proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($0934e0939605d48c$var$Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function() {\n        if (!$0934e0939605d48c$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($0934e0939605d48c$var$Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function() {\n        if (!$0934e0939605d48c$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $0934e0939605d48c$var$createBuffer(length) {\n    if (length > $0934e0939605d48c$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $0934e0939605d48c$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $0934e0939605d48c$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $0934e0939605d48c$var$allocUnsafe(arg);\n    }\n    return $0934e0939605d48c$var$from(arg, encodingOrOffset, length);\n}\n$0934e0939605d48c$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $0934e0939605d48c$var$from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') return $0934e0939605d48c$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $0934e0939605d48c$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($0934e0939605d48c$var$isInstance(value, ArrayBuffer) || value && $0934e0939605d48c$var$isInstance(value.buffer, ArrayBuffer)) return $0934e0939605d48c$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== 'undefined' && ($0934e0939605d48c$var$isInstance(value, SharedArrayBuffer) || value && $0934e0939605d48c$var$isInstance(value.buffer, SharedArrayBuffer))) return $0934e0939605d48c$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === 'number') throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    var valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $0934e0939605d48c$var$Buffer.from(valueOf, encodingOrOffset, length);\n    var b = $0934e0939605d48c$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') return $0934e0939605d48c$var$Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $0934e0939605d48c$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $0934e0939605d48c$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($0934e0939605d48c$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($0934e0939605d48c$var$Buffer, Uint8Array);\nfunction $0934e0939605d48c$var$assertSize(size) {\n    if (typeof size !== 'number') throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $0934e0939605d48c$var$alloc(size, fill, encoding) {\n    $0934e0939605d48c$var$assertSize(size);\n    if (size <= 0) return $0934e0939605d48c$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? $0934e0939605d48c$var$createBuffer(size).fill(fill, encoding) : $0934e0939605d48c$var$createBuffer(size).fill(fill);\n    return $0934e0939605d48c$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $0934e0939605d48c$var$Buffer.alloc = function(size, fill, encoding) {\n    return $0934e0939605d48c$var$alloc(size, fill, encoding);\n};\nfunction $0934e0939605d48c$var$allocUnsafe(size) {\n    $0934e0939605d48c$var$assertSize(size);\n    return $0934e0939605d48c$var$createBuffer(size < 0 ? 0 : $0934e0939605d48c$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $0934e0939605d48c$var$Buffer.allocUnsafe = function(size) {\n    return $0934e0939605d48c$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $0934e0939605d48c$var$Buffer.allocUnsafeSlow = function(size) {\n    return $0934e0939605d48c$var$allocUnsafe(size);\n};\nfunction $0934e0939605d48c$var$fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';\n    if (!$0934e0939605d48c$var$Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);\n    var length = $0934e0939605d48c$var$byteLength(string, encoding) | 0;\n    var buf = $0934e0939605d48c$var$createBuffer(length);\n    var actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : $0934e0939605d48c$var$checked(array.length) | 0;\n    var buf = $0934e0939605d48c$var$createBuffer(length);\n    for(var i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromArrayView(arrayView) {\n    if ($0934e0939605d48c$var$isInstance(arrayView, Uint8Array)) {\n        var copy = new Uint8Array(arrayView);\n        return $0934e0939605d48c$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $0934e0939605d48c$var$fromArrayLike(arrayView);\n}\nfunction $0934e0939605d48c$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    var buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $0934e0939605d48c$var$Buffer.prototype);\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromObject(obj) {\n    if ($0934e0939605d48c$var$Buffer.isBuffer(obj)) {\n        var len = $0934e0939605d48c$var$checked(obj.length) | 0;\n        var buf = $0934e0939605d48c$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== 'number' || $0934e0939605d48c$var$numberIsNaN(obj.length)) return $0934e0939605d48c$var$createBuffer(0);\n        return $0934e0939605d48c$var$fromArrayLike(obj);\n    }\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) return $0934e0939605d48c$var$fromArrayLike(obj.data);\n}\nfunction $0934e0939605d48c$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $0934e0939605d48c$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $0934e0939605d48c$var$K_MAX_LENGTH.toString(16) + ' bytes');\n    return length | 0;\n}\nfunction $0934e0939605d48c$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $0934e0939605d48c$var$Buffer.alloc(+length);\n}\n$0934e0939605d48c$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $0934e0939605d48c$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$0934e0939605d48c$var$Buffer.compare = function compare(a, b) {\n    if ($0934e0939605d48c$var$isInstance(a, Uint8Array)) a = $0934e0939605d48c$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($0934e0939605d48c$var$isInstance(b, Uint8Array)) b = $0934e0939605d48c$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(a) || !$0934e0939605d48c$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n    for(var i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$0934e0939605d48c$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return true;\n        default:\n            return false;\n    }\n};\n$0934e0939605d48c$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $0934e0939605d48c$var$Buffer.alloc(0);\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    var buffer = $0934e0939605d48c$var$Buffer.allocUnsafe(length);\n    var pos = 0;\n    for(i = 0; i < list.length; ++i){\n        var buf = list[i];\n        if ($0934e0939605d48c$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) $0934e0939605d48c$var$Buffer.from(buf).copy(buffer, pos);\n            else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $0934e0939605d48c$var$byteLength(string, encoding) {\n    if ($0934e0939605d48c$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $0934e0939605d48c$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== 'string') throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    var loweredCase = false;\n    for(;;)switch(encoding){\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n            return len;\n        case 'utf8':\n        case 'utf-8':\n            return $0934e0939605d48c$var$utf8ToBytes(string).length;\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return len * 2;\n        case 'hex':\n            return len >>> 1;\n        case 'base64':\n            return $0934e0939605d48c$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $0934e0939605d48c$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$0934e0939605d48c$var$Buffer.byteLength = $0934e0939605d48c$var$byteLength;\nfunction $0934e0939605d48c$var$slowToString(encoding, start, end) {\n    var loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return '';\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return '';\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return '';\n    if (!encoding) encoding = 'utf8';\n    while(true)switch(encoding){\n        case 'hex':\n            return $0934e0939605d48c$var$hexSlice(this, start, end);\n        case 'utf8':\n        case 'utf-8':\n            return $0934e0939605d48c$var$utf8Slice(this, start, end);\n        case 'ascii':\n            return $0934e0939605d48c$var$asciiSlice(this, start, end);\n        case 'latin1':\n        case 'binary':\n            return $0934e0939605d48c$var$latin1Slice(this, start, end);\n        case 'base64':\n            return $0934e0939605d48c$var$base64Slice(this, start, end);\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return $0934e0939605d48c$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$0934e0939605d48c$var$Buffer.prototype._isBuffer = true;\nfunction $0934e0939605d48c$var$swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$0934e0939605d48c$var$Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n    if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits');\n    for(var i = 0; i < len; i += 2)$0934e0939605d48c$var$swap(this, i, i + 1);\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n    if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits');\n    for(var i = 0; i < len; i += 4){\n        $0934e0939605d48c$var$swap(this, i, i + 3);\n        $0934e0939605d48c$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n    if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits');\n    for(var i = 0; i < len; i += 8){\n        $0934e0939605d48c$var$swap(this, i, i + 7);\n        $0934e0939605d48c$var$swap(this, i + 1, i + 6);\n        $0934e0939605d48c$var$swap(this, i + 2, i + 5);\n        $0934e0939605d48c$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return $0934e0939605d48c$var$utf8Slice(this, 0, length);\n    return $0934e0939605d48c$var$slowToString.apply(this, arguments);\n};\n$0934e0939605d48c$var$Buffer.prototype.toLocaleString = $0934e0939605d48c$var$Buffer.prototype.toString;\n$0934e0939605d48c$var$Buffer.prototype.equals = function equals(b) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return $0934e0939605d48c$var$Buffer.compare(this, b) === 0;\n};\n$0934e0939605d48c$var$Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = $0934e0939605d48c$export$f99ded8fe4b79145;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n};\nif ($0934e0939605d48c$var$customInspectSymbol) $0934e0939605d48c$var$Buffer.prototype[$0934e0939605d48c$var$customInspectSymbol] = $0934e0939605d48c$var$Buffer.prototype.inspect;\n$0934e0939605d48c$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($0934e0939605d48c$var$isInstance(target, Uint8Array)) target = $0934e0939605d48c$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError('out of range index');\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n    for(var i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $0934e0939605d48c$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($0934e0939605d48c$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === 'string') val = $0934e0939605d48c$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($0934e0939605d48c$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $0934e0939605d48c$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === 'function') {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $0934e0939605d48c$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError('val must be string, number or Buffer');\n}\nfunction $0934e0939605d48c$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    var i;\n    if (dir) {\n        var foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            var found = true;\n            for(var j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$0934e0939605d48c$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$0934e0939605d48c$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $0934e0939605d48c$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$0934e0939605d48c$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $0934e0939605d48c$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $0934e0939605d48c$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    var strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    for(var i = 0; i < length; ++i){\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($0934e0939605d48c$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $0934e0939605d48c$var$utf8Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$asciiWrite(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$base64Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$ucs2Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$0934e0939605d48c$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = 'utf8';\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError('Attempt to write outside buffer bounds');\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n    for(;;)switch(encoding){\n        case 'hex':\n            return $0934e0939605d48c$var$hexWrite(this, string, offset, length);\n        case 'utf8':\n        case 'utf-8':\n            return $0934e0939605d48c$var$utf8Write(this, string, offset, length);\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n            return $0934e0939605d48c$var$asciiWrite(this, string, offset, length);\n        case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return $0934e0939605d48c$var$base64Write(this, string, offset, length);\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return $0934e0939605d48c$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$0934e0939605d48c$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $0934e0939605d48c$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $bQMRt.fromByteArray(buf);\n    else return $bQMRt.fromByteArray(buf.slice(start, end));\n}\nfunction $0934e0939605d48c$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n    while(i < end){\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $0934e0939605d48c$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $0934e0939605d48c$var$decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n    if (len <= $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = '';\n    var i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $0934e0939605d48c$var$asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $0934e0939605d48c$var$latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $0934e0939605d48c$var$hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n    for(var i = start; i < end; ++i)out += $0934e0939605d48c$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $0934e0939605d48c$var$utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(var i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$0934e0939605d48c$var$Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $0934e0939605d48c$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $0934e0939605d48c$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n$0934e0939605d48c$var$Buffer.prototype.readUintLE = $0934e0939605d48c$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUintBE = $0934e0939605d48c$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset + --byteLength];\n    var mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint8 = $0934e0939605d48c$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint16LE = $0934e0939605d48c$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint16BE = $0934e0939605d48c$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint32LE = $0934e0939605d48c$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint32BE = $0934e0939605d48c$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$0934e0939605d48c$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$0934e0939605d48c$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return $dbnIE.read(this, offset, true, 23, 4);\n};\n$0934e0939605d48c$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return $dbnIE.read(this, offset, false, 23, 4);\n};\n$0934e0939605d48c$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 8, this.length);\n    return $dbnIE.read(this, offset, true, 52, 8);\n};\n$0934e0939605d48c$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 8, this.length);\n    return $dbnIE.read(this, offset, false, 52, 8);\n};\nfunction $0934e0939605d48c$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n$0934e0939605d48c$var$Buffer.prototype.writeUintLE = $0934e0939605d48c$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUintBE = $0934e0939605d48c$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint8 = $0934e0939605d48c$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint16LE = $0934e0939605d48c$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint16BE = $0934e0939605d48c$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint32LE = $0934e0939605d48c$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint32BE = $0934e0939605d48c$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $0934e0939605d48c$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction $0934e0939605d48c$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $dbnIE.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeFloat(this, value, offset, true, noAssert);\n};\n$0934e0939605d48c$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $0934e0939605d48c$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $dbnIE.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeDouble(this, value, offset, true, noAssert);\n};\n$0934e0939605d48c$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$0934e0939605d48c$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError('targetStart out of bounds');\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds');\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    var len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$0934e0939605d48c$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === 'string') {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') throw new TypeError('encoding must be a string');\n        if (typeof encoding === 'string' && !$0934e0939605d48c$var$Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === 'number') val = val & 255;\n    else if (typeof val === 'boolean') val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError('Out of range index');\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n    if (typeof val === 'number') for(i = start; i < end; ++i)this[i] = val;\n    else {\n        var bytes = $0934e0939605d48c$var$Buffer.isBuffer(val) ? val : $0934e0939605d48c$var$Buffer.from(val, encoding);\n        var len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// HELPER FUNCTIONS\n// ================\nvar $0934e0939605d48c$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $0934e0939605d48c$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($0934e0939605d48c$var$INVALID_BASE64_RE, '');\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return '';\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + '=';\n    return str;\n}\nfunction $0934e0939605d48c$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for(var i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error('Invalid code point');\n    }\n    return bytes;\n}\nfunction $0934e0939605d48c$var$asciiToBytes(str) {\n    var byteArray = [];\n    for(var i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $0934e0939605d48c$var$utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n    for(var i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $0934e0939605d48c$var$base64ToBytes(str) {\n    return $bQMRt.toByteArray($0934e0939605d48c$var$base64clean(str));\n}\nfunction $0934e0939605d48c$var$blitBuffer(src, dst, offset, length) {\n    for(var i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $0934e0939605d48c$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $0934e0939605d48c$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar $0934e0939605d48c$var$hexSliceLookupTable = function() {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n    for(var i = 0; i < 16; ++i){\n        var i16 = i * 16;\n        for(var j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n\n});\nparcelRegister(\"bQMRt\", function(module, exports) {\n\n$parcel$export(module.exports, \"toByteArray\", () => $8a0a73e6b73fd0c4$export$d622b2ad8d90c771, (v) => $8a0a73e6b73fd0c4$export$d622b2ad8d90c771 = v);\n$parcel$export(module.exports, \"fromByteArray\", () => $8a0a73e6b73fd0c4$export$6100ba28696e12de, (v) => $8a0a73e6b73fd0c4$export$6100ba28696e12de = v);\nvar $8a0a73e6b73fd0c4$export$a48f0734ac7c2329;\nvar $8a0a73e6b73fd0c4$export$d622b2ad8d90c771;\nvar $8a0a73e6b73fd0c4$export$6100ba28696e12de;\n'use strict';\n$8a0a73e6b73fd0c4$export$a48f0734ac7c2329 = $8a0a73e6b73fd0c4$var$byteLength;\n$8a0a73e6b73fd0c4$export$d622b2ad8d90c771 = $8a0a73e6b73fd0c4$var$toByteArray;\n$8a0a73e6b73fd0c4$export$6100ba28696e12de = $8a0a73e6b73fd0c4$var$fromByteArray;\nvar $8a0a73e6b73fd0c4$var$lookup = [];\nvar $8a0a73e6b73fd0c4$var$revLookup = [];\nvar $8a0a73e6b73fd0c4$var$Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar $8a0a73e6b73fd0c4$var$code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor(var $8a0a73e6b73fd0c4$var$i = 0, $8a0a73e6b73fd0c4$var$len = $8a0a73e6b73fd0c4$var$code.length; $8a0a73e6b73fd0c4$var$i < $8a0a73e6b73fd0c4$var$len; ++$8a0a73e6b73fd0c4$var$i){\n    $8a0a73e6b73fd0c4$var$lookup[$8a0a73e6b73fd0c4$var$i] = $8a0a73e6b73fd0c4$var$code[$8a0a73e6b73fd0c4$var$i];\n    $8a0a73e6b73fd0c4$var$revLookup[$8a0a73e6b73fd0c4$var$code.charCodeAt($8a0a73e6b73fd0c4$var$i)] = $8a0a73e6b73fd0c4$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$8a0a73e6b73fd0c4$var$revLookup['-'.charCodeAt(0)] = 62;\n$8a0a73e6b73fd0c4$var$revLookup['_'.charCodeAt(0)] = 63;\nfunction $8a0a73e6b73fd0c4$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf('=');\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $8a0a73e6b73fd0c4$var$byteLength(b64) {\n    var lens = $8a0a73e6b73fd0c4$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $8a0a73e6b73fd0c4$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $8a0a73e6b73fd0c4$var$toByteArray(b64) {\n    var tmp;\n    var lens = $8a0a73e6b73fd0c4$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $8a0a73e6b73fd0c4$var$Arr($8a0a73e6b73fd0c4$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 18 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 2 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 10 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $8a0a73e6b73fd0c4$var$tripletToBase64(num) {\n    return $8a0a73e6b73fd0c4$var$lookup[num >> 18 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num >> 12 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num >> 6 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num & 0x3F];\n}\nfunction $8a0a73e6b73fd0c4$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($8a0a73e6b73fd0c4$var$tripletToBase64(tmp));\n    }\n    return output.join('');\n}\nfunction $8a0a73e6b73fd0c4$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($8a0a73e6b73fd0c4$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($8a0a73e6b73fd0c4$var$lookup[tmp >> 2] + $8a0a73e6b73fd0c4$var$lookup[tmp << 4 & 0x3F] + '==');\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($8a0a73e6b73fd0c4$var$lookup[tmp >> 10] + $8a0a73e6b73fd0c4$var$lookup[tmp >> 4 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[tmp << 2 & 0x3F] + '=');\n    }\n    return parts.join('');\n}\n\n});\n\nparcelRegister(\"dbnIE\", function(module, exports) {\n\n$parcel$export(module.exports, \"read\", () => $998eb38f4d082829$export$aafa59e2e03f2942, (v) => $998eb38f4d082829$export$aafa59e2e03f2942 = v);\n$parcel$export(module.exports, \"write\", () => $998eb38f4d082829$export$68d8715fc104d294, (v) => $998eb38f4d082829$export$68d8715fc104d294 = v);\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $998eb38f4d082829$export$aafa59e2e03f2942;\nvar $998eb38f4d082829$export$68d8715fc104d294;\n$998eb38f4d082829$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$998eb38f4d082829$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n});\n\n\n\nparcelRegister(\"7ZUgS\", function(module, exports) {\n\n// Generated by CoffeeScript 1.6.3\n(function() {\n    var Heap, SQRT2, backtrace, endLoc, grid, heuristic, locToClosed, locToF, locToG, locToH, locToOpen, locToParent, openList, startLoc, syncfinder_astar;\n    Heap = (parcelRequire(\"2rbhW\"));\n    openList = new Heap();\n    startLoc = 0;\n    endLoc = 0;\n    grid = null;\n    locToClosed = null;\n    locToOpen = null;\n    locToG = null;\n    locToH = null;\n    locToF = null;\n    locToParent = null;\n    SQRT2 = Math.SQRT2;\n    heuristic = function(dx, dy) {\n        return dx + dy;\n    };\n    backtrace = function(node) {\n        var path;\n        path = [];\n        path.push(node);\n        while(locToParent[node]){\n            node = locToParent[node];\n            path.unshift(node);\n        }\n        return path;\n    };\n    syncfinder_astar = {\n        findPathByBrickLoc: function(start, end, theGrid) {\n            return syncfinder_astar.findPath(start >>> 16, start & 0xffff, end >>> 16, end & 0xffff, theGrid);\n        },\n        findPath: function(startX, startY, endX, endY, theGrid, allowDiagonal, dontCrossCorners) {\n            var neighbor, neighborNode, neighbors, ng, node, nodeX, nodeY, x, y, _i, _len;\n            if (allowDiagonal == null) allowDiagonal = false;\n            if (dontCrossCorners == null) dontCrossCorners = false;\n            if (isNaN(startX) || startX < 0 || isNaN(startY) || startY < 0 || isNaN(endX) || endX < 0 || isNaN(endY) || endY < 0 || !theGrid) {\n                console.log(\"ERROR [syncfinder_astar::findPath] bad arguments, startX:\" + startX + \", startY:\" + startY + \", endX:\" + endX + \", endY:\" + endY + \", theGrid:\" + theGrid);\n                return null;\n            }\n            startLoc = startX << 16 | startY;\n            endLoc = endX << 16 | endY;\n            grid = theGrid;\n            locToClosed = {};\n            locToOpen = {};\n            locToG = {};\n            locToF = {};\n            locToH = {};\n            locToParent = {};\n            locToG[startLoc] = 0;\n            locToF[startLoc] = 0;\n            openList.reset(locToF);\n            openList.push(startLoc);\n            locToOpen[startLoc] = true;\n            while(openList.isNotEmpty()){\n                node = openList.pop();\n                locToClosed[node] = true;\n                if (node === endLoc) return backtrace(node);\n                nodeX = node >>> 16;\n                nodeY = node & 0xffff;\n                neighbors = grid.getNeighbors(nodeX, nodeY, allowDiagonal, dontCrossCorners);\n                for(_i = 0, _len = neighbors.length; _i < _len; _i++){\n                    neighbor = neighbors[_i];\n                    if (locToClosed[neighbor]) continue;\n                    x = neighbor >>> 16;\n                    y = neighbor & 0xffff;\n                    ng = locToG[node] + (x === nodeX || y === nodeY ? 1 : SQRT2);\n                    if (!locToOpen[neighbor] || ng < locToG[neighbor]) {\n                        locToG[neighbor] = ng;\n                        locToH[neighbor] = locToH[neighbor] || heuristic(Math.abs(x - endX), Math.abs(y - endY));\n                        locToF[neighbor] = locToG[neighbor] + locToH[neighbor];\n                        neighborNode = x << 16 | y;\n                        locToParent[neighborNode] = node;\n                        if (!locToOpen[neighbor]) {\n                            openList.push(neighborNode);\n                            locToOpen[neighbor] = true;\n                        } else openList.updateItem(neighborNode);\n                    }\n                }\n            }\n            return null;\n        }\n    };\n    module.exports = syncfinder_astar;\n}).call(module.exports);\n\n});\nparcelRegister(\"2rbhW\", function(module, exports) {\n// Generated by CoffeeScript 1.6.3\n(function() {\n    var Heap;\n    Heap = function() {\n        function Heap(locToF) {\n            this.locToF = locToF;\n            this.nodes = [];\n        }\n        Heap.prototype.isNotEmpty = function() {\n            return this.nodes.length > 0;\n        };\n        Heap.prototype._siftdown = function(startPos, pos) {\n            var newNode, parentNode, parentpos;\n            newNode = this.nodes[pos];\n            while(pos > startPos){\n                parentpos = pos - 1 >>> 1;\n                parentNode = this.nodes[parentpos];\n                if (this.locToF[newNode] < this.locToF[parentNode]) {\n                    this.nodes[pos] = parentNode;\n                    pos = parentpos;\n                    continue;\n                }\n                break;\n            }\n            this.nodes[pos] = newNode;\n        };\n        Heap.prototype._siftup = function(pos) {\n            var childPos, endPos, newNode, rightPos, startPos;\n            endPos = this.nodes.length;\n            startPos = pos;\n            newNode = this.nodes[pos];\n            childPos = (pos << 1) + 1;\n            while(childPos < endPos){\n                rightPos = childPos + 1;\n                if (rightPos < endPos && this.locToF[this.nodes[childPos]] > this.locToF[this.nodes[rightPos]]) childPos = rightPos;\n                this.nodes[pos] = this.nodes[childPos];\n                pos = childPos;\n                childPos = (pos << 1) + 1;\n            }\n            this.nodes[pos] = newNode;\n            this._siftdown(startPos, pos);\n        };\n        Heap.prototype.updateItem = function(node) {\n            var pos;\n            pos = this.nodes.indexOf(node);\n            if (pos < 0) return;\n            this._siftdown(0, pos);\n            this._siftup(pos);\n        };\n        Heap.prototype.push = function(node) {\n            this.nodes.push(node);\n            return this._siftdown(0, this.nodes.length - 1);\n        };\n        Heap.prototype.pop = function() {\n            var lastelt, returnitem;\n            lastelt = this.nodes.pop();\n            if (this.nodes.length) {\n                returnitem = this.nodes[0];\n                this.nodes[0] = lastelt;\n                this._siftup(0);\n            } else return lastelt;\n            return returnitem;\n        };\n        Heap.prototype.reset = function(locToF) {\n            this.nodes.length = 0;\n            this.locToF = locToF;\n        };\n        return Heap;\n    }();\n    module.exports = Heap;\n}).call(module.exports);\n\n});\n\n\n// this file is a partial copy of ab-server\\src\\constants\\collisions.ts and players.ts\n/* tslint:disable */ // rules are different\nconst $87af5b1ac654d440$export$fdf35536e9a0700c = {\n    WIDTH: 32768,\n    HEIGHT: 16384,\n    HALF_WIDTH: 16384,\n    HALF_HEIGHT: 8192\n};\nconst $87af5b1ac654d440$export$4748fae0954bb8cb = {\n    MIN_X: -$87af5b1ac654d440$export$fdf35536e9a0700c.WIDTH / 2,\n    MIN_Y: -$87af5b1ac654d440$export$fdf35536e9a0700c.HEIGHT / 2,\n    MAX_X: $87af5b1ac654d440$export$fdf35536e9a0700c.WIDTH / 2,\n    MAX_Y: $87af5b1ac654d440$export$fdf35536e9a0700c.HEIGHT / 2\n};\nconst $87af5b1ac654d440$export$9000cfdce9ac9444 = {\n    MIN_X: -16352,\n    MIN_Y: -8160,\n    MAX_X: 16352,\n    MAX_Y: 8160\n};\n\n\nvar $1f555963597ba593$exports = {};\n\nGrid = (parcelRequire(\"e8EsF\"));\n\nsyncfinder_astar = (parcelRequire(\"7ZUgS\"));\n$1f555963597ba593$exports = {\n    bytesFrom2DArray: Grid.bytesFrom2DArray,\n    findPath: syncfinder_astar.findPath,\n    findPathByBrickLoc: syncfinder_astar.findPathByBrickLoc,\n    buildGrid: function(width, height, buf) {\n        return new Grid(width, height, buf);\n    }\n};\n\n\n\n// this file is a copy of ab-server\\src\\constants\\ships.ts\n/* tslint:disable */ // rules are different\n\n\n\n\n/* eslint-disable max-classes-per-file */ class $ce1896ec5a34bc57$export$49cb77d19e897fe6 {\n    constructor(message = ''){\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\nclass $ce1896ec5a34bc57$export$bd6a5472535ccab5 extends $ce1896ec5a34bc57$export$49cb77d19e897fe6 {\n}\nclass $ce1896ec5a34bc57$export$e16542dee1cf1467 extends $ce1896ec5a34bc57$export$49cb77d19e897fe6 {\n}\n\n\n\n\nvar $e04a7dc61d37c5f1$export$2e2bcd8739ae039 = {\n    LOGIN: 0,\n    BACKUP: 1,\n    HORIZON: 2,\n    ACK: 5,\n    PONG: 6,\n    KEY: 10,\n    COMMAND: 11,\n    SCOREDETAILED: 12,\n    CHAT: 20,\n    WHISPER: 21,\n    SAY: 22,\n    TEAMCHAT: 23,\n    VOTEMUTE: 24,\n    LOCALPING: 255\n};\n\n\nvar $15f8799cbb9ebfe5$export$2e2bcd8739ae039 = {\n    LOGIN: 0,\n    BACKUP: 1,\n    PING: 5,\n    PING_RESULT: 6,\n    ACK: 7,\n    ERROR: 8,\n    COMMAND_REPLY: 9,\n    PLAYER_NEW: 10,\n    PLAYER_LEAVE: 11,\n    PLAYER_UPDATE: 12,\n    PLAYER_FIRE: 13,\n    PLAYER_HIT: 14,\n    PLAYER_RESPAWN: 15,\n    PLAYER_FLAG: 16,\n    PLAYER_KILL: 17,\n    PLAYER_UPGRADE: 18,\n    PLAYER_TYPE: 19,\n    PLAYER_POWERUP: 20,\n    PLAYER_LEVEL: 21,\n    PLAYER_RETEAM: 22,\n    GAME_FLAG: 30,\n    GAME_SPECTATE: 31,\n    GAME_PLAYERSALIVE: 32,\n    GAME_FIREWALL: 33,\n    EVENT_REPEL: 40,\n    EVENT_BOOST: 41,\n    EVENT_BOUNCE: 42,\n    EVENT_STEALTH: 43,\n    EVENT_LEAVEHORIZON: 44,\n    MOB_UPDATE: 60,\n    MOB_UPDATE_STATIONARY: 61,\n    MOB_DESPAWN: 62,\n    MOB_DESPAWN_COORDS: 63,\n    CHAT_PUBLIC: 70,\n    CHAT_TEAM: 71,\n    CHAT_SAY: 72,\n    CHAT_WHISPER: 73,\n    CHAT_VOTEMUTEPASSED: 78,\n    CHAT_VOTEMUTED: 79,\n    SCORE_UPDATE: 80,\n    SCORE_BOARD: 81,\n    SCORE_DETAILED: 82,\n    SCORE_DETAILED_CTF: 83,\n    SCORE_DETAILED_BTR: 84,\n    SERVER_MESSAGE: 90,\n    SERVER_CUSTOM: 91\n};\n\n\n/* eslint-disable @typescript-eslint/no-empty-interface */ \nvar $b7e01e2d61bb1b28$export$68317eef4cf08696 = /*#__PURE__*/ function(DATA_TYPES) {\n    DATA_TYPES[DATA_TYPES[\"text\"] = 1] = \"text\";\n    DATA_TYPES[DATA_TYPES[\"textbig\"] = 2] = \"textbig\";\n    DATA_TYPES[DATA_TYPES[\"arraysmall\"] = 4] = \"arraysmall\";\n    DATA_TYPES[DATA_TYPES[\"array\"] = 3] = \"array\";\n    DATA_TYPES[DATA_TYPES[\"uint8\"] = 5] = \"uint8\";\n    DATA_TYPES[DATA_TYPES[\"uint16\"] = 6] = \"uint16\";\n    DATA_TYPES[DATA_TYPES[\"uint24\"] = 7] = \"uint24\";\n    DATA_TYPES[DATA_TYPES[\"uint32\"] = 8] = \"uint32\";\n    DATA_TYPES[DATA_TYPES[\"float32\"] = 9] = \"float32\";\n    DATA_TYPES[DATA_TYPES[\"float64\"] = 10] = \"float64\";\n    DATA_TYPES[DATA_TYPES[\"boolean\"] = 11] = \"boolean\";\n    DATA_TYPES[DATA_TYPES[\"speed\"] = 12] = \"speed\";\n    DATA_TYPES[DATA_TYPES[\"accel\"] = 13] = \"accel\";\n    DATA_TYPES[DATA_TYPES[\"coordx\"] = 14] = \"coordx\";\n    DATA_TYPES[DATA_TYPES[\"coordy\"] = 15] = \"coordy\";\n    DATA_TYPES[DATA_TYPES[\"coord24\"] = 16] = \"coord24\";\n    DATA_TYPES[DATA_TYPES[\"rotation\"] = 17] = \"rotation\";\n    DATA_TYPES[DATA_TYPES[\"healthenergy\"] = 18] = \"healthenergy\";\n    DATA_TYPES[DATA_TYPES[\"regen\"] = 19] = \"regen\";\n    return DATA_TYPES;\n}({});\nconst $b7e01e2d61bb1b28$var$MAX_UINT8 = 255;\nconst $b7e01e2d61bb1b28$var$MAX_UINT16 = 65535;\nconst $b7e01e2d61bb1b28$var$CHAR_BITS = 8;\nconst $b7e01e2d61bb1b28$export$fe2576e2220e22c4 = {\n    [1]: 8 + $b7e01e2d61bb1b28$var$MAX_UINT8 * $b7e01e2d61bb1b28$var$CHAR_BITS,\n    [2]: 16 + $b7e01e2d61bb1b28$var$MAX_UINT16 * $b7e01e2d61bb1b28$var$CHAR_BITS,\n    [4]: 8,\n    [3]: 16,\n    [5]: 8,\n    [6]: 16,\n    [7]: 24,\n    [8]: 32,\n    [9]: 64,\n    [10]: 64,\n    [11]: 8,\n    [12]: 16,\n    [13]: 16,\n    [14]: 16,\n    [15]: 16,\n    [16]: 24,\n    [17]: 16,\n    [18]: 8,\n    [19]: 16\n};\n\n\nvar $5294d0de949a4df2$export$2e2bcd8739ae039 = {\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).LOGIN]: [\n        [\n            'protocol',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'name',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ],\n        [\n            'session',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ],\n        [\n            'horizonX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'horizonY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'flag',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).BACKUP]: [\n        [\n            'token',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).HORIZON]: [\n        [\n            'horizonX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'horizonY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).ACK]: [],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).PONG]: [\n        [\n            'num',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).KEY]: [\n        [\n            'seq',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'key',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'state',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).COMMAND]: [\n        [\n            'com',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ],\n        [\n            'data',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).SCOREDETAILED]: [],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).CHAT]: [\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).WHISPER]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).SAY]: [\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).TEAMCHAT]: [\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).VOTEMUTE]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).LOCALPING]: [\n        [\n            'auth',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ]\n    ]\n};\n\n\n/* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar $aeca51e6f75cc14b$export$2e2bcd8739ae039 = {\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).LOGIN]: [\n        [\n            'success',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'team',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'token',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'room',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ],\n        [\n            'players',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'status',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'level',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'name',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n                ],\n                [\n                    'type',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'team',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'posX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n                ],\n                [\n                    'posY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n                ],\n                [\n                    'rot',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n                ],\n                [\n                    'flag',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'upgrades',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ]\n            ]\n        ],\n        [\n            'serverConfiguration',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig\n        ],\n        [\n            'bots',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).BACKUP]: [],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PING]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'num',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PING_RESULT]: [\n        [\n            'ping',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'playerstotal',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'playersgame',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).ACK]: [],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).ERROR]: [\n        [\n            'error',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).COMMAND_REPLY]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_NEW]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'status',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'name',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'team',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ],\n        [\n            'rot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n        ],\n        [\n            'flag',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'upgrades',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'isBot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_LEAVE]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_UPDATE]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'keystate',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'upgrades',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'rot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n        ],\n        [\n            'speedX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'speedY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_FIRE]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'energy',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n        ],\n        [\n            'energyRegen',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n        ],\n        [\n            'projectiles',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'type',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'posX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n                ],\n                [\n                    'posY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n                ],\n                [\n                    'speedX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ],\n                [\n                    'speedY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ],\n                [\n                    'accelX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel\n                ],\n                [\n                    'accelY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel\n                ],\n                [\n                    'maxSpeed',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ]\n            ]\n        ]\n    ],\n    // [packet.PLAYER_SAY]: [['id', types.uint16], ['text', types.text]],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_RESPAWN]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'rot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n        ],\n        [\n            'upgrades',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_FLAG]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'flag',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_HIT]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ],\n        [\n            'owner',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'players',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'health',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n                ],\n                [\n                    'healthRegen',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_KILL]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'killer',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_UPGRADE]: [\n        [\n            'upgrades',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'speed',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'defense',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'energy',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'missile',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_TYPE]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_POWERUP]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'duration',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_LEVEL]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'level',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_RETEAM]: [\n        [\n            'players',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'team',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_FLAG]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'flag',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'blueteam',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'redteam',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_SPECTATE]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_PLAYERSALIVE]: [\n        [\n            'players',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_FIREWALL]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'status',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ],\n        [\n            'radius',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n        ],\n        [\n            'speed',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_REPEL]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ],\n        [\n            'rot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n        ],\n        [\n            'speedX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'speedY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'energy',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n        ],\n        [\n            'energyRegen',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n        ],\n        [\n            'players',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'keystate',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'posX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n                ],\n                [\n                    'posY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n                ],\n                [\n                    'rot',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n                ],\n                [\n                    'speedX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ],\n                [\n                    'speedY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ],\n                [\n                    'energy',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n                ],\n                [\n                    'energyRegen',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n                ],\n                [\n                    'playerHealth',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n                ],\n                [\n                    'playerHealthRegen',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n                ]\n            ]\n        ],\n        [\n            'mobs',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'type',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'posX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n                ],\n                [\n                    'posY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n                ],\n                [\n                    'speedX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ],\n                [\n                    'speedY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ],\n                [\n                    'accelX',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel\n                ],\n                [\n                    'accelY',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel\n                ],\n                [\n                    'maxSpeed',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_BOOST]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'boost',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'rot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n        ],\n        [\n            'speedX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'speedY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'energy',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n        ],\n        [\n            'energyRegen',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_BOUNCE]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'keystate',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24\n        ],\n        [\n            'rot',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation\n        ],\n        [\n            'speedX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'speedY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_STEALTH]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'state',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean\n        ],\n        [\n            'energy',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy\n        ],\n        [\n            'energyRegen',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_LEAVEHORIZON]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_UPDATE]: [\n        [\n            'clock',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ],\n        [\n            'speedX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'speedY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ],\n        [\n            'accelX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel\n        ],\n        [\n            'accelY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel\n        ],\n        [\n            'maxSpeed',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_UPDATE_STATIONARY]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_DESPAWN]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_DESPAWN_COORDS]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'posX',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx\n        ],\n        [\n            'posY',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_UPDATE]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'score',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'earnings',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'upgrades',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'totalkills',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'totaldeaths',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_BOARD]: [\n        [\n            'data',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'score',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n                ],\n                [\n                    'level',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ]\n            ]\n        ],\n        [\n            'rankings',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'x',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'y',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED]: [\n        [\n            'scores',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'level',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'score',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n                ],\n                [\n                    'kills',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'deaths',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'damage',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n                ],\n                [\n                    'ping',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED_CTF]: [\n        [\n            'scores',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'level',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'captures',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'score',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n                ],\n                [\n                    'kills',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'deaths',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'damage',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n                ],\n                [\n                    'ping',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED_BTR]: [\n        [\n            'scores',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array,\n            [\n                [\n                    'id',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'level',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n                ],\n                [\n                    'alive',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean\n                ],\n                [\n                    'wins',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'score',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n                ],\n                [\n                    'kills',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'deaths',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ],\n                [\n                    'damage',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32\n                ],\n                [\n                    'ping',\n                    (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n                ]\n            ]\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_TEAM]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_PUBLIC]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_SAY]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_WHISPER]: [\n        [\n            'from',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'to',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_VOTEMUTEPASSED]: [\n        [\n            'id',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_VOTEMUTED]: [],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SERVER_MESSAGE]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'duration',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32\n        ],\n        [\n            'text',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig\n        ]\n    ],\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SERVER_CUSTOM]: [\n        [\n            'type',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8\n        ],\n        [\n            'data',\n            (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig\n        ]\n    ]\n};\n\n\n\n\n\n/* eslint-disable no-plusplus */ /* eslint-disable no-bitwise */ \n/**\r\n * Marshals a string to an Uint8Array.\r\n * https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\r\n *\r\n * @param s\r\n */ const $abefb3832826fe70$export$fcabffea81927cf1 = (s)=>{\n    let i = 0;\n    const bytes = new Uint8Array(s.length * 4);\n    for(let ci = 0; ci !== s.length; ci += 1){\n        let c = s.charCodeAt(ci);\n        if (c < 128) {\n            bytes[i++] = c;\n            continue;\n        }\n        if (c < 2048) bytes[i++] = c >> 6 | 192;\n        else {\n            if (c > 0xd7ff && c < 0xdc00) {\n                if (++ci >= s.length) throw new (0, $ce1896ec5a34bc57$export$bd6a5472535ccab5)('UTF-8 encode: incomplete surrogate pair');\n                const c2 = s.charCodeAt(ci);\n                if (c2 < 0xdc00 || c2 > 0xdfff) throw new (0, $ce1896ec5a34bc57$export$bd6a5472535ccab5)(`UTF-8 encode: second surrogate character 0x${c2.toString(16)} at index ${ci} out of range`);\n                c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n                bytes[i++] = c >> 18 | 240;\n                bytes[i++] = c >> 12 & 63 | 128;\n            } else bytes[i++] = c >> 12 | 224;\n            bytes[i++] = c >> 6 & 63 | 128;\n        }\n        bytes[i++] = c & 63 | 128;\n    }\n    return bytes.subarray(0, i);\n};\n/**\r\n * Unmarshals a string from an Uint8Array.\r\n *\r\n * @param bytes\r\n */ const $abefb3832826fe70$export$2a3384f9191ce613 = (bytes)=>{\n    let i = 0;\n    let s = '';\n    while(i < bytes.length){\n        let c = bytes[i++];\n        if (c > 127) {\n            if (c > 191 && c < 224) {\n                if (i >= bytes.length) throw new (0, $ce1896ec5a34bc57$export$e16542dee1cf1467)('UTF-8 decode: incomplete 2-byte sequence');\n                c = (c & 31) << 6 | bytes[i++] & 63;\n            } else if (c > 223 && c < 240) {\n                if (i + 1 >= bytes.length) throw new (0, $ce1896ec5a34bc57$export$e16542dee1cf1467)('UTF-8 decode: incomplete 3-byte sequence');\n                c = (c & 15) << 12 | (bytes[i++] & 63) << 6 | bytes[i++] & 63;\n            } else if (c > 239 && c < 248) {\n                if (i + 2 >= bytes.length) throw new (0, $ce1896ec5a34bc57$export$e16542dee1cf1467)('UTF-8 decode: incomplete 4-byte sequence');\n                c = (c & 7) << 18 | (bytes[i++] & 63) << 12 | (bytes[i++] & 63) << 6 | bytes[i++] & 63;\n            } else throw new (0, $ce1896ec5a34bc57$export$e16542dee1cf1467)(`UTF-8 decode: unknown multibyte start 0x${c.toString(16)} at index ${i - 1}`);\n        }\n        if (c <= 0xffff) s += String.fromCharCode(c);\n        else if (c <= 0x10ffff) {\n            c -= 0x10000;\n            s += String.fromCharCode(c >> 10 | 0xd800);\n            s += String.fromCharCode(c & 0x3ff | 0xdc00);\n        } else throw new (0, $ce1896ec5a34bc57$export$e16542dee1cf1467)(`UTF-8 decode: code point 0x${c.toString(16)} exceeds UTF-16 reach`);\n    }\n    return s;\n};\n\n\n/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */ \n\nconst $e084167b81e4dde3$var$staticAckPacket = (()=>{\n    const buffer = new ArrayBuffer(1);\n    const dataView = new DataView(buffer);\n    dataView.setUint8(0, 5);\n    return buffer;\n})();\nconst $e084167b81e4dde3$var$staticScoredetailedPacket = (()=>{\n    const buffer = new ArrayBuffer(1);\n    const dataView = new DataView(buffer);\n    dataView.setUint8(0, 12);\n    return buffer;\n})();\nvar $e084167b81e4dde3$export$2e2bcd8739ae039 = {\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).LOGIN]: (msg)=>{\n        // Root strings size calculation\n        const name = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.name);\n        const session = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.session);\n        const flag = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.flag);\n        const buffer = new ArrayBuffer(9 + name.length + session.length + flag.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // protocol, uint8\n        dataView.setUint8(offset, msg.protocol);\n        offset += 1;\n        // name, text\n        dataView.setUint8(offset, name.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < name.length; charOffset += 1)dataView.setUint8(offset + charOffset, name[charOffset]);\n        offset += name.length;\n        // session, text\n        dataView.setUint8(offset, session.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < session.length; charOffset += 1)dataView.setUint8(offset + charOffset, session[charOffset]);\n        offset += session.length;\n        // horizonX, uint16\n        dataView.setUint16(offset, msg.horizonX, true);\n        offset += 2;\n        // horizonY, uint16\n        dataView.setUint16(offset, msg.horizonY, true);\n        offset += 2;\n        // flag, text\n        dataView.setUint8(offset, flag.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < flag.length; charOffset += 1)dataView.setUint8(offset + charOffset, flag[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).BACKUP]: (msg)=>{\n        // Root strings size calculation\n        const token = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.token);\n        const buffer = new ArrayBuffer(2 + token.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // token, text\n        dataView.setUint8(offset, token.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < token.length; charOffset += 1)dataView.setUint8(offset + charOffset, token[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).HORIZON]: (msg)=>{\n        const buffer = new ArrayBuffer(5);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // horizonX, uint16\n        dataView.setUint16(offset, msg.horizonX, true);\n        offset += 2;\n        // horizonY, uint16\n        dataView.setUint16(offset, msg.horizonY, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).ACK]: ()=>$e084167b81e4dde3$var$staticAckPacket,\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).PONG]: (msg)=>{\n        const buffer = new ArrayBuffer(5);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // num, uint32\n        dataView.setUint32(offset, msg.num, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).KEY]: (msg)=>{\n        const buffer = new ArrayBuffer(7);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // seq, uint32\n        dataView.setUint32(offset, msg.seq, true);\n        offset += 4;\n        // key, uint8\n        dataView.setUint8(offset, msg.key);\n        offset += 1;\n        // state, boolean\n        dataView.setUint8(offset, msg.state === false ? 0 : 1);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).COMMAND]: (msg)=>{\n        // Root strings size calculation\n        const com = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.com);\n        const data = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.data);\n        const buffer = new ArrayBuffer(3 + com.length + data.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // com, text\n        dataView.setUint8(offset, com.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < com.length; charOffset += 1)dataView.setUint8(offset + charOffset, com[charOffset]);\n        offset += com.length;\n        // data, text\n        dataView.setUint8(offset, data.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < data.length; charOffset += 1)dataView.setUint8(offset + charOffset, data[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).SCOREDETAILED]: ()=>$e084167b81e4dde3$var$staticScoredetailedPacket,\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).CHAT]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(2 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).WHISPER]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(4 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).SAY]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(2 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).TEAMCHAT]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(2 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).VOTEMUTE]: (msg)=>{\n        const buffer = new ArrayBuffer(3);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).LOCALPING]: (msg)=>{\n        const buffer = new ArrayBuffer(5);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // auth, uint32\n        dataView.setUint32(offset, msg.auth, true);\n        offset += 4;\n        return buffer;\n    }\n};\n\n\n/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */ \n\nconst $99701d5ca39b3d93$var$staticBackupPacket = (()=>{\n    const buffer = new ArrayBuffer(1);\n    const dataView = new DataView(buffer);\n    dataView.setUint8(0, 1);\n    return buffer;\n})();\nconst $99701d5ca39b3d93$var$staticAckPacket = (()=>{\n    const buffer = new ArrayBuffer(1);\n    const dataView = new DataView(buffer);\n    dataView.setUint8(0, 7);\n    return buffer;\n})();\nconst $99701d5ca39b3d93$var$staticChatVotemutedPacket = (()=>{\n    const buffer = new ArrayBuffer(1);\n    const dataView = new DataView(buffer);\n    dataView.setUint8(0, 79);\n    return buffer;\n})();\nvar $99701d5ca39b3d93$export$2e2bcd8739ae039 = {\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).LOGIN]: (msg)=>{\n        // Arrays size calculation\n        const arrStrings = [];\n        let arrStringsOffset = 0;\n        let arraysSize = 0;\n        // Array \"players\" size calculation\n        for(let i = 0; i < msg.players.length; i += 1){\n            arraysSize += 17;\n            // String \"name\" size calculation\n            arrStrings[arrStringsOffset] = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.players[i].name);\n            arraysSize += arrStrings[arrStringsOffset].length;\n            arrStringsOffset += 1;\n        }\n        // Array \"bots\" size calculation\n        for(let i = 0; i < msg.bots.length; i += 1)arraysSize += 2;\n        // Root strings size calculation\n        const token = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.token);\n        const room = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.room);\n        const serverConfiguration = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.serverConfiguration);\n        const buffer = new ArrayBuffer(19 + token.length + room.length + serverConfiguration.length + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        arrStringsOffset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // success, boolean\n        dataView.setUint8(offset, msg.success === false ? 0 : 1);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // team, uint16\n        dataView.setUint16(offset, msg.team, true);\n        offset += 2;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // token, text\n        dataView.setUint8(offset, token.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < token.length; charOffset += 1)dataView.setUint8(offset + charOffset, token[charOffset]);\n        offset += token.length;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // room, text\n        dataView.setUint8(offset, room.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < room.length; charOffset += 1)dataView.setUint8(offset + charOffset, room[charOffset]);\n        offset += room.length;\n        // players, array\n        {\n            const { players: players } = msg;\n            dataView.setUint16(offset, players.length, true);\n            offset += 2;\n            for(let i = 0; i < players.length; i += 1){\n                // players[id], uint16\n                dataView.setUint16(offset, players[i].id, true);\n                offset += 2;\n                // players[status], uint8\n                dataView.setUint8(offset, players[i].status);\n                offset += 1;\n                // players[level], uint8\n                dataView.setUint8(offset, players[i].level);\n                offset += 1;\n                // players[name], text\n                dataView.setUint8(offset, arrStrings[arrStringsOffset].length);\n                offset += 1;\n                for(let charOffset = 0; charOffset < arrStrings[arrStringsOffset].length; charOffset += 1)dataView.setUint8(offset + charOffset, arrStrings[arrStringsOffset][charOffset]);\n                offset += arrStrings[arrStringsOffset].length;\n                arrStringsOffset += 1;\n                // players[type], uint8\n                dataView.setUint8(offset, players[i].type);\n                offset += 1;\n                // players[team], uint16\n                dataView.setUint16(offset, players[i].team, true);\n                offset += 2;\n                // players[posX], coordx\n                dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\n                offset += 2;\n                // players[posY], coordy\n                dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\n                offset += 2;\n                // players[rot], rotation\n                dataView.setUint16(offset, players[i].rot * 6553.6, true);\n                offset += 2;\n                // players[flag], uint16\n                dataView.setUint16(offset, players[i].flag, true);\n                offset += 2;\n                // players[upgrades], uint8\n                dataView.setUint8(offset, players[i].upgrades);\n                offset += 1;\n            }\n        }\n        // serverConfiguration, textbig\n        dataView.setUint16(offset, serverConfiguration.length, true);\n        offset += 2;\n        for(let charOffset = 0; charOffset < serverConfiguration.length; charOffset += 1)dataView.setUint8(offset + charOffset, serverConfiguration[charOffset]);\n        offset += serverConfiguration.length;\n        // bots, array\n        {\n            const { bots: bots } = msg;\n            dataView.setUint16(offset, bots.length, true);\n            offset += 2;\n            for(let i = 0; i < bots.length; i += 1){\n                // bots[id], uint16\n                dataView.setUint16(offset, bots[i].id, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).BACKUP]: ()=>$99701d5ca39b3d93$var$staticBackupPacket,\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PING]: (msg)=>{\n        const buffer = new ArrayBuffer(9);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // num, uint32\n        dataView.setUint32(offset, msg.num, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PING_RESULT]: (msg)=>{\n        const buffer = new ArrayBuffer(11);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // ping, uint16\n        dataView.setUint16(offset, msg.ping, true);\n        offset += 2;\n        // playerstotal, uint32\n        dataView.setUint32(offset, msg.playerstotal, true);\n        offset += 4;\n        // playersgame, uint32\n        dataView.setUint32(offset, msg.playersgame, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).ACK]: ()=>$99701d5ca39b3d93$var$staticAckPacket,\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).ERROR]: (msg)=>{\n        const buffer = new ArrayBuffer(2);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // error, uint8\n        dataView.setUint8(offset, msg.error);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).COMMAND_REPLY]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(4 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // text, textbig\n        dataView.setUint16(offset, text.length, true);\n        offset += 2;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_NEW]: (msg)=>{\n        // Root strings size calculation\n        const name = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.name);\n        const buffer = new ArrayBuffer(18 + name.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // status, uint8\n        dataView.setUint8(offset, msg.status);\n        offset += 1;\n        // name, text\n        dataView.setUint8(offset, name.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < name.length; charOffset += 1)dataView.setUint8(offset + charOffset, name[charOffset]);\n        offset += name.length;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // team, uint16\n        dataView.setUint16(offset, msg.team, true);\n        offset += 2;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        // rot, rotation\n        dataView.setUint16(offset, msg.rot * 6553.6, true);\n        offset += 2;\n        // flag, uint16\n        dataView.setUint16(offset, msg.flag, true);\n        offset += 2;\n        // upgrades, uint8\n        dataView.setUint8(offset, msg.upgrades);\n        offset += 1;\n        // isBot, boolean\n        dataView.setUint8(offset, msg.isBot === false ? 0 : 1);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_LEAVE]: (msg)=>{\n        const buffer = new ArrayBuffer(3);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_UPDATE]: (msg)=>{\n        const buffer = new ArrayBuffer(21);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // keystate, uint8\n        dataView.setUint8(offset, msg.keystate);\n        offset += 1;\n        // upgrades, uint8\n        dataView.setUint8(offset, msg.upgrades);\n        offset += 1;\n        // posX, coord24\n        {\n            const value = msg.posX * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // posY, coord24\n        {\n            const value = msg.posY * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // rot, rotation\n        dataView.setUint16(offset, msg.rot * 6553.6, true);\n        offset += 2;\n        // speedX, speed\n        dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\n        offset += 2;\n        // speedY, speed\n        dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_FIRE]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"projectiles\" size calculation\n        for(let i = 0; i < msg.projectiles.length; i += 1)arraysSize += 17;\n        const buffer = new ArrayBuffer(11 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // energy, healthenergy\n        dataView.setUint8(offset, msg.energy * 255);\n        offset += 1;\n        // energyRegen, regen\n        dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\n        offset += 2;\n        // projectiles, arraysmall\n        {\n            const { projectiles: projectiles } = msg;\n            dataView.setUint8(offset, projectiles.length);\n            offset += 1;\n            for(let i = 0; i < projectiles.length; i += 1){\n                // projectiles[id], uint16\n                dataView.setUint16(offset, projectiles[i].id, true);\n                offset += 2;\n                // projectiles[type], uint8\n                dataView.setUint8(offset, projectiles[i].type);\n                offset += 1;\n                // projectiles[posX], coordx\n                dataView.setUint16(offset, projectiles[i].posX * 2 + 32768, true);\n                offset += 2;\n                // projectiles[posY], coordy\n                dataView.setUint16(offset, projectiles[i].posY * 4 + 32768, true);\n                offset += 2;\n                // projectiles[speedX], speed\n                dataView.setUint16(offset, projectiles[i].speedX * 1638.4 + 32768, true);\n                offset += 2;\n                // projectiles[speedY], speed\n                dataView.setUint16(offset, projectiles[i].speedY * 1638.4 + 32768, true);\n                offset += 2;\n                // projectiles[accelX], accel\n                dataView.setUint16(offset, projectiles[i].accelX * 32768 + 32768, true);\n                offset += 2;\n                // projectiles[accelY], accel\n                dataView.setUint16(offset, projectiles[i].accelY * 32768 + 32768, true);\n                offset += 2;\n                // projectiles[maxSpeed], speed\n                dataView.setUint16(offset, projectiles[i].maxSpeed * 1638.4 + 32768, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_HIT]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"players\" size calculation\n        for(let i = 0; i < msg.players.length; i += 1)arraysSize += 5;\n        const buffer = new ArrayBuffer(11 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        // owner, uint16\n        dataView.setUint16(offset, msg.owner, true);\n        offset += 2;\n        // players, arraysmall\n        {\n            const { players: players } = msg;\n            dataView.setUint8(offset, players.length);\n            offset += 1;\n            for(let i = 0; i < players.length; i += 1){\n                // players[id], uint16\n                dataView.setUint16(offset, players[i].id, true);\n                offset += 2;\n                // players[health], healthenergy\n                dataView.setUint8(offset, players[i].health * 255);\n                offset += 1;\n                // players[healthRegen], regen\n                dataView.setUint16(offset, players[i].healthRegen * 1e6 + 32768, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_RESPAWN]: (msg)=>{\n        const buffer = new ArrayBuffer(12);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // posX, coord24\n        {\n            const value = msg.posX * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // posY, coord24\n        {\n            const value = msg.posY * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // rot, rotation\n        dataView.setUint16(offset, msg.rot * 6553.6, true);\n        offset += 2;\n        // upgrades, uint8\n        dataView.setUint8(offset, msg.upgrades);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_FLAG]: (msg)=>{\n        const buffer = new ArrayBuffer(5);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // flag, uint16\n        dataView.setUint16(offset, msg.flag, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_KILL]: (msg)=>{\n        const buffer = new ArrayBuffer(9);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // killer, uint16\n        dataView.setUint16(offset, msg.killer, true);\n        offset += 2;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_UPGRADE]: (msg)=>{\n        const buffer = new ArrayBuffer(8);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // upgrades, uint16\n        dataView.setUint16(offset, msg.upgrades, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // speed, uint8\n        dataView.setUint8(offset, msg.speed);\n        offset += 1;\n        // defense, uint8\n        dataView.setUint8(offset, msg.defense);\n        offset += 1;\n        // energy, uint8\n        dataView.setUint8(offset, msg.energy);\n        offset += 1;\n        // missile, uint8\n        dataView.setUint8(offset, msg.missile);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_TYPE]: (msg)=>{\n        const buffer = new ArrayBuffer(4);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_POWERUP]: (msg)=>{\n        const buffer = new ArrayBuffer(6);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // duration, uint32\n        dataView.setUint32(offset, msg.duration, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_LEVEL]: (msg)=>{\n        const buffer = new ArrayBuffer(5);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // level, uint8\n        dataView.setUint8(offset, msg.level);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_RETEAM]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"players\" size calculation\n        for(let i = 0; i < msg.players.length; i += 1)arraysSize += 4;\n        const buffer = new ArrayBuffer(3 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // players, array\n        {\n            const { players: players } = msg;\n            dataView.setUint16(offset, players.length, true);\n            offset += 2;\n            for(let i = 0; i < players.length; i += 1){\n                // players[id], uint16\n                dataView.setUint16(offset, players[i].id, true);\n                offset += 2;\n                // players[team], uint16\n                dataView.setUint16(offset, players[i].team, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_FLAG]: (msg)=>{\n        const buffer = new ArrayBuffer(13);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // flag, uint8\n        dataView.setUint8(offset, msg.flag);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // posX, coord24\n        {\n            const value = msg.posX * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // posY, coord24\n        {\n            const value = msg.posY * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // blueteam, uint8\n        dataView.setUint8(offset, msg.blueteam);\n        offset += 1;\n        // redteam, uint8\n        dataView.setUint8(offset, msg.redteam);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_SPECTATE]: (msg)=>{\n        const buffer = new ArrayBuffer(3);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_PLAYERSALIVE]: (msg)=>{\n        const buffer = new ArrayBuffer(3);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // players, uint16\n        dataView.setUint16(offset, msg.players, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_FIREWALL]: (msg)=>{\n        const buffer = new ArrayBuffer(15);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // status, uint8\n        dataView.setUint8(offset, msg.status);\n        offset += 1;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        // radius, float32\n        dataView.setFloat32(offset, msg.radius, true);\n        offset += 4;\n        // speed, float32\n        dataView.setFloat32(offset, msg.speed, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_REPEL]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"players\" size calculation\n        for(let i = 0; i < msg.players.length; i += 1)arraysSize += 19;\n        // Array \"mobs\" size calculation\n        for(let i = 0; i < msg.mobs.length; i += 1)arraysSize += 17;\n        const buffer = new ArrayBuffer(22 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        // rot, rotation\n        dataView.setUint16(offset, msg.rot * 6553.6, true);\n        offset += 2;\n        // speedX, speed\n        dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\n        offset += 2;\n        // speedY, speed\n        dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\n        offset += 2;\n        // energy, healthenergy\n        dataView.setUint8(offset, msg.energy * 255);\n        offset += 1;\n        // energyRegen, regen\n        dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\n        offset += 2;\n        // players, arraysmall\n        {\n            const { players: players } = msg;\n            dataView.setUint8(offset, players.length);\n            offset += 1;\n            for(let i = 0; i < players.length; i += 1){\n                // players[id], uint16\n                dataView.setUint16(offset, players[i].id, true);\n                offset += 2;\n                // players[keystate], uint8\n                dataView.setUint8(offset, players[i].keystate);\n                offset += 1;\n                // players[posX], coordx\n                dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\n                offset += 2;\n                // players[posY], coordy\n                dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\n                offset += 2;\n                // players[rot], rotation\n                dataView.setUint16(offset, players[i].rot * 6553.6, true);\n                offset += 2;\n                // players[speedX], speed\n                dataView.setUint16(offset, players[i].speedX * 1638.4 + 32768, true);\n                offset += 2;\n                // players[speedY], speed\n                dataView.setUint16(offset, players[i].speedY * 1638.4 + 32768, true);\n                offset += 2;\n                // players[energy], healthenergy\n                dataView.setUint8(offset, players[i].energy * 255);\n                offset += 1;\n                // players[energyRegen], regen\n                dataView.setUint16(offset, players[i].energyRegen * 1e6 + 32768, true);\n                offset += 2;\n                // players[playerHealth], healthenergy\n                dataView.setUint8(offset, players[i].playerHealth * 255);\n                offset += 1;\n                // players[playerHealthRegen], regen\n                dataView.setUint16(offset, players[i].playerHealthRegen * 1e6 + 32768, true);\n                offset += 2;\n            }\n        }\n        // mobs, arraysmall\n        {\n            const { mobs: mobs } = msg;\n            dataView.setUint8(offset, mobs.length);\n            offset += 1;\n            for(let i = 0; i < mobs.length; i += 1){\n                // mobs[id], uint16\n                dataView.setUint16(offset, mobs[i].id, true);\n                offset += 2;\n                // mobs[type], uint8\n                dataView.setUint8(offset, mobs[i].type);\n                offset += 1;\n                // mobs[posX], coordx\n                dataView.setUint16(offset, mobs[i].posX * 2 + 32768, true);\n                offset += 2;\n                // mobs[posY], coordy\n                dataView.setUint16(offset, mobs[i].posY * 4 + 32768, true);\n                offset += 2;\n                // mobs[speedX], speed\n                dataView.setUint16(offset, mobs[i].speedX * 1638.4 + 32768, true);\n                offset += 2;\n                // mobs[speedY], speed\n                dataView.setUint16(offset, mobs[i].speedY * 1638.4 + 32768, true);\n                offset += 2;\n                // mobs[accelX], accel\n                dataView.setUint16(offset, mobs[i].accelX * 32768 + 32768, true);\n                offset += 2;\n                // mobs[accelY], accel\n                dataView.setUint16(offset, mobs[i].accelY * 32768 + 32768, true);\n                offset += 2;\n                // mobs[maxSpeed], speed\n                dataView.setUint16(offset, mobs[i].maxSpeed * 1638.4 + 32768, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_BOOST]: (msg)=>{\n        const buffer = new ArrayBuffer(23);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // boost, boolean\n        dataView.setUint8(offset, msg.boost === false ? 0 : 1);\n        offset += 1;\n        // posX, coord24\n        {\n            const value = msg.posX * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // posY, coord24\n        {\n            const value = msg.posY * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // rot, rotation\n        dataView.setUint16(offset, msg.rot * 6553.6, true);\n        offset += 2;\n        // speedX, speed\n        dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\n        offset += 2;\n        // speedY, speed\n        dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\n        offset += 2;\n        // energy, healthenergy\n        dataView.setUint8(offset, msg.energy * 255);\n        offset += 1;\n        // energyRegen, regen\n        dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_BOUNCE]: (msg)=>{\n        const buffer = new ArrayBuffer(20);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // keystate, uint8\n        dataView.setUint8(offset, msg.keystate);\n        offset += 1;\n        // posX, coord24\n        {\n            const value = msg.posX * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // posY, coord24\n        {\n            const value = msg.posY * 512 + 8388608;\n            const u8 = value % 256;\n            const u16 = (value - u8) / 256;\n            dataView.setUint16(offset, u16, true);\n            offset += 2;\n            dataView.setUint8(offset, u8);\n            offset += 1;\n        }\n        // rot, rotation\n        dataView.setUint16(offset, msg.rot * 6553.6, true);\n        offset += 2;\n        // speedX, speed\n        dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\n        offset += 2;\n        // speedY, speed\n        dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_STEALTH]: (msg)=>{\n        const buffer = new ArrayBuffer(7);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // state, boolean\n        dataView.setUint8(offset, msg.state === false ? 0 : 1);\n        offset += 1;\n        // energy, healthenergy\n        dataView.setUint8(offset, msg.energy * 255);\n        offset += 1;\n        // energyRegen, regen\n        dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_LEAVEHORIZON]: (msg)=>{\n        const buffer = new ArrayBuffer(4);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_UPDATE]: (msg)=>{\n        const buffer = new ArrayBuffer(22);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // clock, uint32\n        dataView.setUint32(offset, msg.clock, true);\n        offset += 4;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        // speedX, speed\n        dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\n        offset += 2;\n        // speedY, speed\n        dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\n        offset += 2;\n        // accelX, accel\n        dataView.setUint16(offset, msg.accelX * 32768 + 32768, true);\n        offset += 2;\n        // accelY, accel\n        dataView.setUint16(offset, msg.accelY * 32768 + 32768, true);\n        offset += 2;\n        // maxSpeed, speed\n        dataView.setUint16(offset, msg.maxSpeed * 1638.4 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_UPDATE_STATIONARY]: (msg)=>{\n        const buffer = new ArrayBuffer(12);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // posX, float32\n        dataView.setFloat32(offset, msg.posX, true);\n        offset += 4;\n        // posY, float32\n        dataView.setFloat32(offset, msg.posY, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_DESPAWN]: (msg)=>{\n        const buffer = new ArrayBuffer(4);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_DESPAWN_COORDS]: (msg)=>{\n        const buffer = new ArrayBuffer(8);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // posX, coordx\n        dataView.setUint16(offset, msg.posX * 2 + 32768, true);\n        offset += 2;\n        // posY, coordy\n        dataView.setUint16(offset, msg.posY * 4 + 32768, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_PUBLIC]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(4 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_TEAM]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(4 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_SAY]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(4 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_WHISPER]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(6 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // from, uint16\n        dataView.setUint16(offset, msg.from, true);\n        offset += 2;\n        // to, uint16\n        dataView.setUint16(offset, msg.to, true);\n        offset += 2;\n        // text, text\n        dataView.setUint8(offset, text.length);\n        offset += 1;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_VOTEMUTEPASSED]: (msg)=>{\n        const buffer = new ArrayBuffer(3);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_VOTEMUTED]: ()=>$99701d5ca39b3d93$var$staticChatVotemutedPacket,\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_UPDATE]: (msg)=>{\n        const buffer = new ArrayBuffer(21);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // id, uint16\n        dataView.setUint16(offset, msg.id, true);\n        offset += 2;\n        // score, uint32\n        dataView.setUint32(offset, msg.score, true);\n        offset += 4;\n        // earnings, uint32\n        dataView.setUint32(offset, msg.earnings, true);\n        offset += 4;\n        // upgrades, uint16\n        dataView.setUint16(offset, msg.upgrades, true);\n        offset += 2;\n        // totalkills, uint32\n        dataView.setUint32(offset, msg.totalkills, true);\n        offset += 4;\n        // totaldeaths, uint32\n        dataView.setUint32(offset, msg.totaldeaths, true);\n        offset += 4;\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_BOARD]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"data\" size calculation\n        for(let i = 0; i < msg.data.length; i += 1)arraysSize += 7;\n        // Array \"rankings\" size calculation\n        for(let i = 0; i < msg.rankings.length; i += 1)arraysSize += 4;\n        const buffer = new ArrayBuffer(5 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // data, array\n        {\n            const { data: data } = msg;\n            dataView.setUint16(offset, data.length, true);\n            offset += 2;\n            for(let i = 0; i < data.length; i += 1){\n                // data[id], uint16\n                dataView.setUint16(offset, data[i].id, true);\n                offset += 2;\n                // data[score], uint32\n                dataView.setUint32(offset, data[i].score, true);\n                offset += 4;\n                // data[level], uint8\n                dataView.setUint8(offset, data[i].level);\n                offset += 1;\n            }\n        }\n        // rankings, array\n        {\n            const { rankings: rankings } = msg;\n            dataView.setUint16(offset, rankings.length, true);\n            offset += 2;\n            for(let i = 0; i < rankings.length; i += 1){\n                // rankings[id], uint16\n                dataView.setUint16(offset, rankings[i].id, true);\n                offset += 2;\n                // rankings[x], uint8\n                dataView.setUint8(offset, rankings[i].x);\n                offset += 1;\n                // rankings[y], uint8\n                dataView.setUint8(offset, rankings[i].y);\n                offset += 1;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"scores\" size calculation\n        for(let i = 0; i < msg.scores.length; i += 1)arraysSize += 17;\n        const buffer = new ArrayBuffer(3 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // scores, array\n        {\n            const { scores: scores } = msg;\n            dataView.setUint16(offset, scores.length, true);\n            offset += 2;\n            for(let i = 0; i < scores.length; i += 1){\n                // scores[id], uint16\n                dataView.setUint16(offset, scores[i].id, true);\n                offset += 2;\n                // scores[level], uint8\n                dataView.setUint8(offset, scores[i].level);\n                offset += 1;\n                // scores[score], uint32\n                dataView.setUint32(offset, scores[i].score, true);\n                offset += 4;\n                // scores[kills], uint16\n                dataView.setUint16(offset, scores[i].kills, true);\n                offset += 2;\n                // scores[deaths], uint16\n                dataView.setUint16(offset, scores[i].deaths, true);\n                offset += 2;\n                // scores[damage], float32\n                dataView.setFloat32(offset, scores[i].damage, true);\n                offset += 4;\n                // scores[ping], uint16\n                dataView.setUint16(offset, scores[i].ping, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED_CTF]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"scores\" size calculation\n        for(let i = 0; i < msg.scores.length; i += 1)arraysSize += 19;\n        const buffer = new ArrayBuffer(3 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // scores, array\n        {\n            const { scores: scores } = msg;\n            dataView.setUint16(offset, scores.length, true);\n            offset += 2;\n            for(let i = 0; i < scores.length; i += 1){\n                // scores[id], uint16\n                dataView.setUint16(offset, scores[i].id, true);\n                offset += 2;\n                // scores[level], uint8\n                dataView.setUint8(offset, scores[i].level);\n                offset += 1;\n                // scores[captures], uint16\n                dataView.setUint16(offset, scores[i].captures, true);\n                offset += 2;\n                // scores[score], uint32\n                dataView.setUint32(offset, scores[i].score, true);\n                offset += 4;\n                // scores[kills], uint16\n                dataView.setUint16(offset, scores[i].kills, true);\n                offset += 2;\n                // scores[deaths], uint16\n                dataView.setUint16(offset, scores[i].deaths, true);\n                offset += 2;\n                // scores[damage], float32\n                dataView.setFloat32(offset, scores[i].damage, true);\n                offset += 4;\n                // scores[ping], uint16\n                dataView.setUint16(offset, scores[i].ping, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED_BTR]: (msg)=>{\n        // Arrays size calculation\n        let arraysSize = 0;\n        // Array \"scores\" size calculation\n        for(let i = 0; i < msg.scores.length; i += 1)arraysSize += 20;\n        const buffer = new ArrayBuffer(3 + arraysSize);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // scores, array\n        {\n            const { scores: scores } = msg;\n            dataView.setUint16(offset, scores.length, true);\n            offset += 2;\n            for(let i = 0; i < scores.length; i += 1){\n                // scores[id], uint16\n                dataView.setUint16(offset, scores[i].id, true);\n                offset += 2;\n                // scores[level], uint8\n                dataView.setUint8(offset, scores[i].level);\n                offset += 1;\n                // scores[alive], boolean\n                dataView.setUint8(offset, scores[i].alive === false ? 0 : 1);\n                offset += 1;\n                // scores[wins], uint16\n                dataView.setUint16(offset, scores[i].wins, true);\n                offset += 2;\n                // scores[score], uint32\n                dataView.setUint32(offset, scores[i].score, true);\n                offset += 4;\n                // scores[kills], uint16\n                dataView.setUint16(offset, scores[i].kills, true);\n                offset += 2;\n                // scores[deaths], uint16\n                dataView.setUint16(offset, scores[i].deaths, true);\n                offset += 2;\n                // scores[damage], float32\n                dataView.setFloat32(offset, scores[i].damage, true);\n                offset += 4;\n                // scores[ping], uint16\n                dataView.setUint16(offset, scores[i].ping, true);\n                offset += 2;\n            }\n        }\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SERVER_MESSAGE]: (msg)=>{\n        // Root strings size calculation\n        const text = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.text);\n        const buffer = new ArrayBuffer(8 + text.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // duration, uint32\n        dataView.setUint32(offset, msg.duration, true);\n        offset += 4;\n        // text, textbig\n        dataView.setUint16(offset, text.length, true);\n        offset += 2;\n        for(let charOffset = 0; charOffset < text.length; charOffset += 1)dataView.setUint8(offset + charOffset, text[charOffset]);\n        return buffer;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SERVER_CUSTOM]: (msg)=>{\n        // Root strings size calculation\n        const data = (0, $abefb3832826fe70$export$fcabffea81927cf1)(msg.data);\n        const buffer = new ArrayBuffer(4 + data.length);\n        const dataView = new DataView(buffer);\n        let offset = 0;\n        dataView.setUint8(offset, msg.c);\n        offset += 1;\n        // type, uint8\n        dataView.setUint8(offset, msg.type);\n        offset += 1;\n        // data, textbig\n        dataView.setUint16(offset, data.length, true);\n        offset += 2;\n        for(let charOffset = 0; charOffset < data.length; charOffset += 1)dataView.setUint8(offset + charOffset, data[charOffset]);\n        return buffer;\n    }\n};\n\n\nconst $f0ba005495de6100$var$SERVER_MESSAGE = 0;\nconst $f0ba005495de6100$var$CLIENT_MESSAGE = 1;\nconst $f0ba005495de6100$var$encodedStrings = new class {\n    constructor(){\n        this.storage = [];\n    }\n    last() {\n        if (this.storage.length > 0) return this.storage[this.storage.length - 1];\n        return null;\n    }\n    put(str) {\n        this.storage.push(str);\n    }\n    shift() {\n        return this.storage.shift();\n    }\n    flush() {\n        this.storage = [];\n    }\n}();\nconst $f0ba005495de6100$var$flushVars = ()=>{\n    $f0ba005495de6100$var$encodedStrings.flush();\n};\nconst $f0ba005495de6100$var$calcBufferLength = (data, dataSchema)=>{\n    let length = 0;\n    for(let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1){\n        const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\n        const fieldData = data[fieldName];\n        switch(fieldType){\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig:\n                $f0ba005495de6100$var$encodedStrings.put((0, $abefb3832826fe70$export$fcabffea81927cf1)(fieldData));\n                if (fieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig) length += 2;\n                else length += 1;\n                length += $f0ba005495de6100$var$encodedStrings.last().length;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall:\n                if (fieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array) length += 2;\n                else length += 1;\n                for(let index = 0; index < fieldData.length; index += 1)length += $f0ba005495de6100$var$calcBufferLength(fieldData[index], subSchema);\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy:\n                length += 1;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen:\n                length += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint24:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24:\n                length += 3;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32:\n                length += 4;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float64:\n                length += 8;\n                break;\n            default:\n                break;\n        }\n    }\n    return length;\n};\nconst $f0ba005495de6100$var$fillBufferWithData = (dataView, startOffset, data, dataSchema)=>{\n    let offset = startOffset;\n    if (offset === 1) dataView.setUint8(0, data.c);\n    for(let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1){\n        const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\n        const fieldData = data[fieldName];\n        switch(fieldType){\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig:\n                {\n                    const encodedString = $f0ba005495de6100$var$encodedStrings.shift();\n                    if (fieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig) {\n                        dataView.setUint16(offset, encodedString.length, true);\n                        offset += 2;\n                    } else {\n                        dataView.setUint8(offset, encodedString.length);\n                        offset += 1;\n                    }\n                    for(let charOffset = 0; charOffset < encodedString.length; charOffset += 1)dataView.setUint8(offset + charOffset, encodedString[charOffset]);\n                    offset += encodedString.length;\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall:\n                if (fieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array) {\n                    dataView.setUint16(offset, fieldData.length, true);\n                    offset += 2;\n                } else {\n                    dataView.setUint8(offset, fieldData.length);\n                    offset += 1;\n                }\n                for(let arrayElementIndex = 0; arrayElementIndex < fieldData.length; arrayElementIndex += 1)offset = $f0ba005495de6100$var$fillBufferWithData(dataView, offset, fieldData[arrayElementIndex], subSchema);\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8:\n                dataView.setUint8(offset, fieldData);\n                offset += 1;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy:\n                dataView.setUint8(offset, fieldData * 255);\n                offset += 1;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16:\n                dataView.setUint16(offset, fieldData, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen:\n                dataView.setUint16(offset, fieldData * 1e6 + 32768, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation:\n                dataView.setUint16(offset, fieldData * 6553.6, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy:\n                dataView.setUint16(offset, fieldData * 4 + 32768, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx:\n                dataView.setUint16(offset, fieldData * 2 + 32768, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel:\n                dataView.setUint16(offset, fieldData * 32768 + 32768, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed:\n                dataView.setUint16(offset, fieldData * 1638.4 + 32768, true);\n                offset += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint24:\n                {\n                    const u8 = fieldData % 256;\n                    const u16 = (fieldData - u8) / 256;\n                    dataView.setUint16(offset, u16, true);\n                    offset += 2;\n                    dataView.setUint8(offset, u8);\n                    offset += 1;\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24:\n                {\n                    const value = fieldData * 512 + 8388608;\n                    const u8 = value % 256;\n                    const u16 = (value - u8) / 256;\n                    dataView.setUint16(offset, u16, true);\n                    offset += 2;\n                    dataView.setUint8(offset, u8);\n                    offset += 1;\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32:\n                dataView.setUint32(offset, fieldData, true);\n                offset += 4;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32:\n                dataView.setFloat32(offset, fieldData, true);\n                offset += 4;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float64:\n                dataView.setFloat64(offset, fieldData, true);\n                offset += 8;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean:\n                dataView.setUint8(offset, fieldData === false ? 0 : 1);\n                offset += 1;\n                break;\n            default:\n                break;\n        }\n    }\n    return offset;\n};\nconst $f0ba005495de6100$var$marshal = (message, type, usePredefinedMarshal)=>{\n    $f0ba005495de6100$var$flushVars();\n    const messageCode = message.c;\n    let schema = null;\n    let predefMarshal = null;\n    switch(type){\n        case $f0ba005495de6100$var$CLIENT_MESSAGE:\n            predefMarshal = (0, $e084167b81e4dde3$export$2e2bcd8739ae039)[messageCode];\n            schema = (0, $5294d0de949a4df2$export$2e2bcd8739ae039)[messageCode];\n            break;\n        case $f0ba005495de6100$var$SERVER_MESSAGE:\n            predefMarshal = (0, $99701d5ca39b3d93$export$2e2bcd8739ae039)[messageCode];\n            schema = (0, $aeca51e6f75cc14b$export$2e2bcd8739ae039)[messageCode];\n            break;\n        default:\n            return null;\n    }\n    if (schema === null) return null;\n    let buffer = null;\n    if (usePredefinedMarshal && predefMarshal) buffer = predefMarshal(message);\n    else {\n        let dataView = null;\n        let bufferLength = 0;\n        bufferLength = 1 + $f0ba005495de6100$var$calcBufferLength(message, schema);\n        buffer = new ArrayBuffer(bufferLength);\n        dataView = new DataView(buffer);\n        $f0ba005495de6100$var$fillBufferWithData(dataView, 1, message, schema);\n    }\n    return buffer;\n};\n/**\r\n * Marshal client message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */ const $f0ba005495de6100$export$97bc324abc99862e = (message, usePredefinedMarshal = true)=>{\n    return $f0ba005495de6100$var$marshal(message, $f0ba005495de6100$var$CLIENT_MESSAGE, usePredefinedMarshal);\n};\n/**\r\n * Marshal server message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */ const $f0ba005495de6100$export$6f9d8726e8f778ed = (message, usePredefinedMarshal = true)=>{\n    return $f0ba005495de6100$var$marshal(message, $f0ba005495de6100$var$SERVER_MESSAGE, usePredefinedMarshal);\n};\n\n\n\n\n\n\n/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */ \n\nconst $2b9f02d37d134742$var$staticAckPacket = {\n    c: 5\n};\nconst $2b9f02d37d134742$var$staticScoredetailedPacket = {\n    c: 12\n};\nvar $2b9f02d37d134742$export$2e2bcd8739ae039 = {\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).LOGIN]: (buffer)=>{\n        const msg = {\n            c: 0\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // protocol, uint8\n        msg.protocol = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // name, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.name = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // session, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.session = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // horizonX, uint16\n        msg.horizonX = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // horizonY, uint16\n        msg.horizonY = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // flag, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.flag = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).BACKUP]: (buffer)=>{\n        const msg = {\n            c: 1\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // token, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.token = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).HORIZON]: (buffer)=>{\n        const msg = {\n            c: 2\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // horizonX, uint16\n        msg.horizonX = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // horizonY, uint16\n        msg.horizonY = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).ACK]: ()=>$2b9f02d37d134742$var$staticAckPacket,\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).PONG]: (buffer)=>{\n        const msg = {\n            c: 6\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // num, uint32\n        msg.num = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).KEY]: (buffer)=>{\n        const msg = {\n            c: 10\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // seq, uint32\n        msg.seq = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // key, uint8\n        msg.key = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // state, boolean\n        msg.state = dataView.getUint8(readIndex) !== 0;\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).COMMAND]: (buffer)=>{\n        const msg = {\n            c: 11\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // com, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.com = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // data, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.data = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).SCOREDETAILED]: ()=>$2b9f02d37d134742$var$staticScoredetailedPacket,\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).CHAT]: (buffer)=>{\n        const msg = {\n            c: 20\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).WHISPER]: (buffer)=>{\n        const msg = {\n            c: 21\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).SAY]: (buffer)=>{\n        const msg = {\n            c: 22\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).TEAMCHAT]: (buffer)=>{\n        const msg = {\n            c: 23\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).VOTEMUTE]: (buffer)=>{\n        const msg = {\n            c: 24\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $e04a7dc61d37c5f1$export$2e2bcd8739ae039).LOCALPING]: (buffer)=>{\n        const msg = {\n            c: 255\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // auth, uint32\n        msg.auth = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    }\n};\n\n\n/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */ \n\nconst $9d3dc0acc192310a$var$staticBackupPacket = {\n    c: 1\n};\nconst $9d3dc0acc192310a$var$staticAckPacket = {\n    c: 7\n};\nconst $9d3dc0acc192310a$var$staticChatVotemutedPacket = {\n    c: 79\n};\nvar $9d3dc0acc192310a$export$2e2bcd8739ae039 = {\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).LOGIN]: (buffer)=>{\n        const msg = {\n            c: 0\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // success, boolean\n        msg.success = dataView.getUint8(readIndex) !== 0;\n        readIndex += 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // team, uint16\n        msg.team = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // token, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.token = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // room, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.room = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // players, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.players = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // status, uint8\n                arrayElement.status = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // level, uint8\n                arrayElement.level = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // name, text\n                {\n                    const stringLength = dataView.getUint8(readIndex);\n                    const encodedString = new Uint8Array(stringLength);\n                    readIndex += 1;\n                    for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n                    arrayElement.name = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n                    readIndex += stringLength;\n                }\n                // type, uint8\n                arrayElement.type = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // team, uint16\n                arrayElement.team = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // posX, coordx\n                arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n                readIndex += 2;\n                // posY, coordy\n                arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n                readIndex += 2;\n                // rot, rotation\n                arrayElement.rot = dataView.getUint16(readIndex, true) / 6553.6;\n                readIndex += 2;\n                // flag, uint16\n                arrayElement.flag = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // upgrades, uint8\n                arrayElement.upgrades = dataView.getUint8(readIndex);\n                readIndex += 1;\n                msg.players.push(arrayElement);\n            }\n        }\n        // serverConfiguration, textbig\n        {\n            const stringLength = dataView.getUint16(readIndex, true);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 2;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.serverConfiguration = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // bots, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.bots = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                msg.bots.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).BACKUP]: ()=>$9d3dc0acc192310a$var$staticBackupPacket,\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PING]: (buffer)=>{\n        const msg = {\n            c: 5\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // num, uint32\n        msg.num = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PING_RESULT]: (buffer)=>{\n        const msg = {\n            c: 6\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // ping, uint16\n        msg.ping = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // playerstotal, uint32\n        msg.playerstotal = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // playersgame, uint32\n        msg.playersgame = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).ACK]: ()=>$9d3dc0acc192310a$var$staticAckPacket,\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).ERROR]: (buffer)=>{\n        const msg = {\n            c: 8\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // error, uint8\n        msg.error = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).COMMAND_REPLY]: (buffer)=>{\n        const msg = {\n            c: 9\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // text, textbig\n        {\n            const stringLength = dataView.getUint16(readIndex, true);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 2;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_NEW]: (buffer)=>{\n        const msg = {\n            c: 10\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // status, uint8\n        msg.status = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // name, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.name = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // team, uint16\n        msg.team = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        // rot, rotation\n        msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\n        readIndex += 2;\n        // flag, uint16\n        msg.flag = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // upgrades, uint8\n        msg.upgrades = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // isBot, boolean\n        msg.isBot = dataView.getUint8(readIndex) !== 0;\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_LEAVE]: (buffer)=>{\n        const msg = {\n            c: 11\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_UPDATE]: (buffer)=>{\n        const msg = {\n            c: 12\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // keystate, uint8\n        msg.keystate = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // upgrades, uint8\n        msg.upgrades = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // posY, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // rot, rotation\n        msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\n        readIndex += 2;\n        // speedX, speed\n        msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // speedY, speed\n        msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_FIRE]: (buffer)=>{\n        const msg = {\n            c: 13\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // energy, healthenergy\n        msg.energy = dataView.getUint8(readIndex) / 255;\n        readIndex += 1;\n        // energyRegen, regen\n        msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n        readIndex += 2;\n        // projectiles, arraysmall\n        {\n            const arrayLength = dataView.getUint8(readIndex);\n            readIndex += 1;\n            msg.projectiles = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // type, uint8\n                arrayElement.type = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // posX, coordx\n                arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n                readIndex += 2;\n                // posY, coordy\n                arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n                readIndex += 2;\n                // speedX, speed\n                arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                // speedY, speed\n                arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                // accelX, accel\n                arrayElement.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n                readIndex += 2;\n                // accelY, accel\n                arrayElement.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n                readIndex += 2;\n                // maxSpeed, speed\n                arrayElement.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                msg.projectiles.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_HIT]: (buffer)=>{\n        const msg = {\n            c: 14\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        // owner, uint16\n        msg.owner = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // players, arraysmall\n        {\n            const arrayLength = dataView.getUint8(readIndex);\n            readIndex += 1;\n            msg.players = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // health, healthenergy\n                arrayElement.health = dataView.getUint8(readIndex) / 255;\n                readIndex += 1;\n                // healthRegen, regen\n                arrayElement.healthRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n                readIndex += 2;\n                msg.players.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_RESPAWN]: (buffer)=>{\n        const msg = {\n            c: 15\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // posX, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // posY, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // rot, rotation\n        msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\n        readIndex += 2;\n        // upgrades, uint8\n        msg.upgrades = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_FLAG]: (buffer)=>{\n        const msg = {\n            c: 16\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // flag, uint16\n        msg.flag = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_KILL]: (buffer)=>{\n        const msg = {\n            c: 17\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // killer, uint16\n        msg.killer = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_UPGRADE]: (buffer)=>{\n        const msg = {\n            c: 18\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // upgrades, uint16\n        msg.upgrades = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // speed, uint8\n        msg.speed = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // defense, uint8\n        msg.defense = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // energy, uint8\n        msg.energy = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // missile, uint8\n        msg.missile = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_TYPE]: (buffer)=>{\n        const msg = {\n            c: 19\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_POWERUP]: (buffer)=>{\n        const msg = {\n            c: 20\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // duration, uint32\n        msg.duration = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_LEVEL]: (buffer)=>{\n        const msg = {\n            c: 21\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // level, uint8\n        msg.level = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).PLAYER_RETEAM]: (buffer)=>{\n        const msg = {\n            c: 22\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // players, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.players = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // team, uint16\n                arrayElement.team = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                msg.players.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_FLAG]: (buffer)=>{\n        const msg = {\n            c: 30\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // flag, uint8\n        msg.flag = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // posX, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // posY, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // blueteam, uint8\n        msg.blueteam = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // redteam, uint8\n        msg.redteam = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_SPECTATE]: (buffer)=>{\n        const msg = {\n            c: 31\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_PLAYERSALIVE]: (buffer)=>{\n        const msg = {\n            c: 32\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // players, uint16\n        msg.players = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).GAME_FIREWALL]: (buffer)=>{\n        const msg = {\n            c: 33\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // status, uint8\n        msg.status = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        // radius, float32\n        msg.radius = dataView.getFloat32(readIndex, true);\n        readIndex += 4;\n        // speed, float32\n        msg.speed = dataView.getFloat32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_REPEL]: (buffer)=>{\n        const msg = {\n            c: 40\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        // rot, rotation\n        msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\n        readIndex += 2;\n        // speedX, speed\n        msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // speedY, speed\n        msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // energy, healthenergy\n        msg.energy = dataView.getUint8(readIndex) / 255;\n        readIndex += 1;\n        // energyRegen, regen\n        msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n        readIndex += 2;\n        // players, arraysmall\n        {\n            const arrayLength = dataView.getUint8(readIndex);\n            readIndex += 1;\n            msg.players = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // keystate, uint8\n                arrayElement.keystate = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // posX, coordx\n                arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n                readIndex += 2;\n                // posY, coordy\n                arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n                readIndex += 2;\n                // rot, rotation\n                arrayElement.rot = dataView.getUint16(readIndex, true) / 6553.6;\n                readIndex += 2;\n                // speedX, speed\n                arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                // speedY, speed\n                arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                // energy, healthenergy\n                arrayElement.energy = dataView.getUint8(readIndex) / 255;\n                readIndex += 1;\n                // energyRegen, regen\n                arrayElement.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n                readIndex += 2;\n                // playerHealth, healthenergy\n                arrayElement.playerHealth = dataView.getUint8(readIndex) / 255;\n                readIndex += 1;\n                // playerHealthRegen, regen\n                arrayElement.playerHealthRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n                readIndex += 2;\n                msg.players.push(arrayElement);\n            }\n        }\n        // mobs, arraysmall\n        {\n            const arrayLength = dataView.getUint8(readIndex);\n            readIndex += 1;\n            msg.mobs = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // type, uint8\n                arrayElement.type = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // posX, coordx\n                arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n                readIndex += 2;\n                // posY, coordy\n                arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n                readIndex += 2;\n                // speedX, speed\n                arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                // speedY, speed\n                arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                // accelX, accel\n                arrayElement.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n                readIndex += 2;\n                // accelY, accel\n                arrayElement.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n                readIndex += 2;\n                // maxSpeed, speed\n                arrayElement.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                msg.mobs.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_BOOST]: (buffer)=>{\n        const msg = {\n            c: 41\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // boost, boolean\n        msg.boost = dataView.getUint8(readIndex) !== 0;\n        readIndex += 1;\n        // posX, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // posY, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // rot, rotation\n        msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\n        readIndex += 2;\n        // speedX, speed\n        msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // speedY, speed\n        msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // energy, healthenergy\n        msg.energy = dataView.getUint8(readIndex) / 255;\n        readIndex += 1;\n        // energyRegen, regen\n        msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_BOUNCE]: (buffer)=>{\n        const msg = {\n            c: 42\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // keystate, uint8\n        msg.keystate = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // posY, coord24\n        {\n            const u16 = 256 * dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n            readIndex += 1;\n        }\n        // rot, rotation\n        msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\n        readIndex += 2;\n        // speedX, speed\n        msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // speedY, speed\n        msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_STEALTH]: (buffer)=>{\n        const msg = {\n            c: 43\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // state, boolean\n        msg.state = dataView.getUint8(readIndex) !== 0;\n        readIndex += 1;\n        // energy, healthenergy\n        msg.energy = dataView.getUint8(readIndex) / 255;\n        readIndex += 1;\n        // energyRegen, regen\n        msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).EVENT_LEAVEHORIZON]: (buffer)=>{\n        const msg = {\n            c: 44\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_UPDATE]: (buffer)=>{\n        const msg = {\n            c: 60\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // clock, uint32\n        msg.clock = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        // speedX, speed\n        msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // speedY, speed\n        msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        // accelX, accel\n        msg.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n        readIndex += 2;\n        // accelY, accel\n        msg.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n        readIndex += 2;\n        // maxSpeed, speed\n        msg.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_UPDATE_STATIONARY]: (buffer)=>{\n        const msg = {\n            c: 61\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, float32\n        msg.posX = dataView.getFloat32(readIndex, true);\n        readIndex += 4;\n        // posY, float32\n        msg.posY = dataView.getFloat32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_DESPAWN]: (buffer)=>{\n        const msg = {\n            c: 62\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).MOB_DESPAWN_COORDS]: (buffer)=>{\n        const msg = {\n            c: 63\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // posX, coordx\n        msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\n        readIndex += 2;\n        // posY, coordy\n        msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_PUBLIC]: (buffer)=>{\n        const msg = {\n            c: 70\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_TEAM]: (buffer)=>{\n        const msg = {\n            c: 71\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_SAY]: (buffer)=>{\n        const msg = {\n            c: 72\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_WHISPER]: (buffer)=>{\n        const msg = {\n            c: 73\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // from, uint16\n        msg.from = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // to, uint16\n        msg.to = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // text, text\n        {\n            const stringLength = dataView.getUint8(readIndex);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 1;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_VOTEMUTEPASSED]: (buffer)=>{\n        const msg = {\n            c: 78\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).CHAT_VOTEMUTED]: ()=>$9d3dc0acc192310a$var$staticChatVotemutedPacket,\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_UPDATE]: (buffer)=>{\n        const msg = {\n            c: 80\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // id, uint16\n        msg.id = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // score, uint32\n        msg.score = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // earnings, uint32\n        msg.earnings = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // upgrades, uint16\n        msg.upgrades = dataView.getUint16(readIndex, true);\n        readIndex += 2;\n        // totalkills, uint32\n        msg.totalkills = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // totaldeaths, uint32\n        msg.totaldeaths = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_BOARD]: (buffer)=>{\n        const msg = {\n            c: 81\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // data, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.data = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // score, uint32\n                arrayElement.score = dataView.getUint32(readIndex, true);\n                readIndex += 4;\n                // level, uint8\n                arrayElement.level = dataView.getUint8(readIndex);\n                readIndex += 1;\n                msg.data.push(arrayElement);\n            }\n        }\n        // rankings, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.rankings = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // x, uint8\n                arrayElement.x = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // y, uint8\n                arrayElement.y = dataView.getUint8(readIndex);\n                readIndex += 1;\n                msg.rankings.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED]: (buffer)=>{\n        const msg = {\n            c: 82\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // scores, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.scores = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // level, uint8\n                arrayElement.level = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // score, uint32\n                arrayElement.score = dataView.getUint32(readIndex, true);\n                readIndex += 4;\n                // kills, uint16\n                arrayElement.kills = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // deaths, uint16\n                arrayElement.deaths = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // damage, float32\n                arrayElement.damage = dataView.getFloat32(readIndex, true);\n                readIndex += 4;\n                // ping, uint16\n                arrayElement.ping = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                msg.scores.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED_CTF]: (buffer)=>{\n        const msg = {\n            c: 83\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // scores, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.scores = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // level, uint8\n                arrayElement.level = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // captures, uint16\n                arrayElement.captures = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // score, uint32\n                arrayElement.score = dataView.getUint32(readIndex, true);\n                readIndex += 4;\n                // kills, uint16\n                arrayElement.kills = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // deaths, uint16\n                arrayElement.deaths = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // damage, float32\n                arrayElement.damage = dataView.getFloat32(readIndex, true);\n                readIndex += 4;\n                // ping, uint16\n                arrayElement.ping = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                msg.scores.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SCORE_DETAILED_BTR]: (buffer)=>{\n        const msg = {\n            c: 84\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // scores, array\n        {\n            const arrayLength = dataView.getUint16(readIndex, true);\n            readIndex += 2;\n            msg.scores = [];\n            for(let i = 0; i < arrayLength; i += 1){\n                const arrayElement = {};\n                // id, uint16\n                arrayElement.id = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // level, uint8\n                arrayElement.level = dataView.getUint8(readIndex);\n                readIndex += 1;\n                // alive, boolean\n                arrayElement.alive = dataView.getUint8(readIndex) !== 0;\n                readIndex += 1;\n                // wins, uint16\n                arrayElement.wins = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // score, uint32\n                arrayElement.score = dataView.getUint32(readIndex, true);\n                readIndex += 4;\n                // kills, uint16\n                arrayElement.kills = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // deaths, uint16\n                arrayElement.deaths = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                // damage, float32\n                arrayElement.damage = dataView.getFloat32(readIndex, true);\n                readIndex += 4;\n                // ping, uint16\n                arrayElement.ping = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                msg.scores.push(arrayElement);\n            }\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SERVER_MESSAGE]: (buffer)=>{\n        const msg = {\n            c: 90\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // duration, uint32\n        msg.duration = dataView.getUint32(readIndex, true);\n        readIndex += 4;\n        // text, textbig\n        {\n            const stringLength = dataView.getUint16(readIndex, true);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 2;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.text = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    },\n    [(0, $15f8799cbb9ebfe5$export$2e2bcd8739ae039).SERVER_CUSTOM]: (buffer)=>{\n        const msg = {\n            c: 91\n        };\n        const dataView = new DataView(buffer);\n        let readIndex = 1;\n        // type, uint8\n        msg.type = dataView.getUint8(readIndex);\n        readIndex += 1;\n        // data, textbig\n        {\n            const stringLength = dataView.getUint16(readIndex, true);\n            const encodedString = new Uint8Array(stringLength);\n            readIndex += 2;\n            for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n            msg.data = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n            readIndex += stringLength;\n        }\n        return msg;\n    }\n};\n\n\nconst $7c23563f68797418$var$SERVER_BUFFER = 0;\nconst $7c23563f68797418$var$CLIENT_BUFFER = 1;\nconst $7c23563f68797418$var$readBufferData = (dataView, startReadIndex = 0, schema)=>{\n    const message = {};\n    let readIndex = startReadIndex;\n    if (readIndex === 0) {\n        message.c = dataView.getUint8(0);\n        readIndex += 1;\n    }\n    for(let fieldIndex = 0; fieldIndex < schema.length; fieldIndex += 1){\n        const [fieldName, fieldType, subSchema] = schema[fieldIndex];\n        switch(fieldType){\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig:\n                {\n                    let stringLength = 0;\n                    if (fieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text) {\n                        stringLength = dataView.getUint8(readIndex);\n                        readIndex += 1;\n                    } else {\n                        stringLength = dataView.getUint16(readIndex, true);\n                        readIndex += 2;\n                    }\n                    const encodedString = new Uint8Array(stringLength);\n                    for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n                    message[fieldName] = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n                    readIndex += stringLength;\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).array:\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall:\n                {\n                    let arrayLength = 0;\n                    if (fieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).arraysmall) {\n                        arrayLength = dataView.getUint8(readIndex);\n                        readIndex += 1;\n                    } else {\n                        arrayLength = dataView.getUint16(readIndex, true);\n                        readIndex += 2;\n                    }\n                    message[fieldName] = [];\n                    for(let arrayElementIndex = 0; arrayElementIndex < arrayLength; arrayElementIndex += 1){\n                        const arrayElement = {};\n                        for(let subSchemaFieldIndex = 0; subSchemaFieldIndex < subSchema.length; subSchemaFieldIndex += 1){\n                            const [subFieldName, subFieldType] = subSchema[subSchemaFieldIndex];\n                            switch(subFieldType){\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text:\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).textbig:\n                                    {\n                                        let stringLength = 0;\n                                        if (subFieldType === (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).text) {\n                                            stringLength = dataView.getUint8(readIndex);\n                                            readIndex += 1;\n                                        } else {\n                                            stringLength = dataView.getUint16(readIndex, true);\n                                            readIndex += 2;\n                                        }\n                                        const encodedString = new Uint8Array(stringLength);\n                                        for(let charIndex = 0; charIndex < stringLength; charIndex += 1)encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\n                                        arrayElement[subFieldName] = (0, $abefb3832826fe70$export$2a3384f9191ce613)(encodedString);\n                                        readIndex += stringLength;\n                                    }\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8:\n                                    arrayElement[subFieldName] = dataView.getUint8(readIndex);\n                                    readIndex += 1;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16:\n                                    arrayElement[subFieldName] = dataView.getUint16(readIndex, true);\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint24:\n                                    {\n                                        const u16 = 256 * dataView.getUint16(readIndex, true);\n                                        readIndex += 2;\n                                        arrayElement[subFieldName] = u16 + dataView.getUint8(readIndex);\n                                        readIndex += 1;\n                                    }\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32:\n                                    arrayElement[subFieldName] = dataView.getUint32(readIndex, true);\n                                    readIndex += 4;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32:\n                                    arrayElement[subFieldName] = dataView.getFloat32(readIndex, true);\n                                    readIndex += 4;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float64:\n                                    arrayElement[subFieldName] = dataView.getFloat64(readIndex, true);\n                                    readIndex += 8;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean:\n                                    arrayElement[subFieldName] = dataView.getUint8(readIndex) !== 0;\n                                    readIndex += 1;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed:\n                                    arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel:\n                                    arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx:\n                                    arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 2;\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy:\n                                    arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 4;\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24:\n                                    {\n                                        const u16 = 256 * dataView.getUint16(readIndex, true);\n                                        readIndex += 2;\n                                        arrayElement[subFieldName] = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n                                        readIndex += 1;\n                                    }\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation:\n                                    arrayElement[subFieldName] = dataView.getUint16(readIndex, true) / 6553.6;\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen:\n                                    arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n                                    readIndex += 2;\n                                    break;\n                                case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy:\n                                    arrayElement[subFieldName] = dataView.getUint8(readIndex) / 255;\n                                    readIndex += 1;\n                                    break;\n                                default:\n                                    throw Error();\n                            }\n                        }\n                        message[fieldName].push(arrayElement);\n                    }\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint8:\n                message[fieldName] = dataView.getUint8(readIndex);\n                readIndex += 1;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint16:\n                message[fieldName] = dataView.getUint16(readIndex, true);\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint24:\n                {\n                    const u16 = 256 * dataView.getUint16(readIndex, true);\n                    readIndex += 2;\n                    message[fieldName] = u16 + dataView.getUint8(readIndex);\n                    readIndex += 1;\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).uint32:\n                message[fieldName] = dataView.getUint32(readIndex, true);\n                readIndex += 4;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float32:\n                message[fieldName] = dataView.getFloat32(readIndex, true);\n                readIndex += 4;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).float64:\n                message[fieldName] = dataView.getFloat64(readIndex, true);\n                readIndex += 8;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).boolean:\n                message[fieldName] = dataView.getUint8(readIndex) !== 0;\n                readIndex += 1;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).speed:\n                message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).accel:\n                message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 32768;\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordx:\n                message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 2;\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coordy:\n                message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 4;\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).coord24:\n                {\n                    const u16 = 256 * dataView.getUint16(readIndex, true);\n                    readIndex += 2;\n                    message[fieldName] = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\n                    readIndex += 1;\n                }\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).rotation:\n                message[fieldName] = dataView.getUint16(readIndex, true) / 6553.6;\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).regen:\n                message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\n                readIndex += 2;\n                break;\n            case (0, $b7e01e2d61bb1b28$export$68317eef4cf08696).healthenergy:\n                message[fieldName] = dataView.getUint8(readIndex) / 255;\n                readIndex += 1;\n                break;\n            default:\n                return null;\n        }\n    }\n    return message;\n};\nconst $7c23563f68797418$var$unmarshal = (buffer, type, usePredefinedMarshal)=>{\n    const dataView = new DataView(buffer);\n    const messageCode = dataView.getUint8(0);\n    let predefMarshal = null;\n    let message = null;\n    let schema = null;\n    switch(type){\n        case $7c23563f68797418$var$CLIENT_BUFFER:\n            predefMarshal = (0, $2b9f02d37d134742$export$2e2bcd8739ae039)[messageCode];\n            schema = (0, $5294d0de949a4df2$export$2e2bcd8739ae039)[messageCode];\n            break;\n        case $7c23563f68797418$var$SERVER_BUFFER:\n            predefMarshal = (0, $9d3dc0acc192310a$export$2e2bcd8739ae039)[messageCode];\n            schema = (0, $aeca51e6f75cc14b$export$2e2bcd8739ae039)[messageCode];\n            break;\n        default:\n            return null;\n    }\n    if (usePredefinedMarshal && predefMarshal) message = predefMarshal(buffer);\n    else {\n        if (schema === null) return null;\n        message = $7c23563f68797418$var$readBufferData(dataView, 0, schema);\n    }\n    return message;\n};\n/**\r\n * Unmarshal client binary packet to protocol message.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */ const $7c23563f68797418$export$a7c10bc5f9377d2e = (message, usePredefinedMarshal = true)=>{\n    return $7c23563f68797418$var$unmarshal(message, $7c23563f68797418$var$CLIENT_BUFFER, usePredefinedMarshal);\n};\n/**\r\n * Unmarshal server binary packet to protocol message.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */ const $7c23563f68797418$export$f0d21d16879ad2a0 = (message, usePredefinedMarshal = true)=>{\n    return $7c23563f68797418$var$unmarshal(message, $7c23563f68797418$var$SERVER_BUFFER, usePredefinedMarshal);\n};\n\n\n/**\r\n * CLIENT_PACKETS.KEY types\r\n */ var $61fb81f7808c6615$export$5fb656eb8279cede = /*#__PURE__*/ function(KEY_CODES) {\n    KEY_CODES[KEY_CODES[\"UP\"] = 1] = \"UP\";\n    KEY_CODES[KEY_CODES[\"DOWN\"] = 2] = \"DOWN\";\n    KEY_CODES[KEY_CODES[\"LEFT\"] = 3] = \"LEFT\";\n    KEY_CODES[KEY_CODES[\"RIGHT\"] = 4] = \"RIGHT\";\n    KEY_CODES[KEY_CODES[\"FIRE\"] = 5] = \"FIRE\";\n    KEY_CODES[KEY_CODES[\"SPECIAL\"] = 6] = \"SPECIAL\";\n    return KEY_CODES;\n}({});\nconst $61fb81f7808c6615$export$a17a5404c09fc646 = Object.assign({}, ...Object.entries($61fb81f7808c6615$export$5fb656eb8279cede).map(([name, code])=>({\n        [code]: name\n    })));\n\n\n/**\r\n * Protocol time, 10^-5 seconds.\r\n * Started from 0 at the moment of the server start.\r\n */ var $e4ad34ea523e3171$export$e9ee844dcc7f0271 = /*#__PURE__*/ function(SERVER_ERRORS) {\n    SERVER_ERRORS[SERVER_ERRORS[\"PACKET_FLOODING_DISCONNECT\"] = 1] = \"PACKET_FLOODING_DISCONNECT\";\n    SERVER_ERRORS[SERVER_ERRORS[\"PACKET_FLOODING_BAN\"] = 2] = \"PACKET_FLOODING_BAN\";\n    SERVER_ERRORS[SERVER_ERRORS[\"GLOBAL_BAN\"] = 3] = \"GLOBAL_BAN\";\n    SERVER_ERRORS[SERVER_ERRORS[\"UNKNOWN_ERROR\"] = 4] = \"UNKNOWN_ERROR\";\n    SERVER_ERRORS[SERVER_ERRORS[\"REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN\"] = 5] = \"REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN\";\n    SERVER_ERRORS[SERVER_ERRORS[\"AFK_DISCONNECT\"] = 6] = \"AFK_DISCONNECT\";\n    SERVER_ERRORS[SERVER_ERRORS[\"PLAYER_KICKED\"] = 7] = \"PLAYER_KICKED\";\n    SERVER_ERRORS[SERVER_ERRORS[\"INVALID_LOGIN_DATA\"] = 8] = \"INVALID_LOGIN_DATA\";\n    SERVER_ERRORS[SERVER_ERRORS[\"INCORRECT_PROTOCOL\"] = 9] = \"INCORRECT_PROTOCOL\";\n    SERVER_ERRORS[SERVER_ERRORS[\"ACCOUNT_BANNED\"] = 10] = \"ACCOUNT_BANNED\";\n    SERVER_ERRORS[SERVER_ERRORS[\"ALREADY_LOGGED_IN\"] = 11] = \"ALREADY_LOGGED_IN\";\n    SERVER_ERRORS[SERVER_ERRORS[\"FORBIDDEN_TO_CHANGE_PLANE_IN_BTR\"] = 12] = \"FORBIDDEN_TO_CHANGE_PLANE_IN_BTR\";\n    SERVER_ERRORS[SERVER_ERRORS[\"REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE\"] = 13] = \"REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE\";\n    SERVER_ERRORS[SERVER_ERRORS[\"NOT_ENOUGH_UPGRADES\"] = 20] = \"NOT_ENOUGH_UPGRADES\";\n    SERVER_ERRORS[SERVER_ERRORS[\"CHAT_SPAMMING\"] = 30] = \"CHAT_SPAMMING\";\n    SERVER_ERRORS[SERVER_ERRORS[\"FLAG_CHANGE_TOO_FAST\"] = 31] = \"FLAG_CHANGE_TOO_FAST\";\n    SERVER_ERRORS[SERVER_ERRORS[\"UNKNOWN_COMMAND\"] = 100] = \"UNKNOWN_COMMAND\";\n    return SERVER_ERRORS;\n}({});\nvar $e4ad34ea523e3171$export$42a822ee93e68ea = /*#__PURE__*/ function(SERVER_MESSAGE_TYPES) {\n    SERVER_MESSAGE_TYPES[SERVER_MESSAGE_TYPES[\"ALERT\"] = 1] = \"ALERT\";\n    SERVER_MESSAGE_TYPES[SERVER_MESSAGE_TYPES[\"INFO\"] = 2] = \"INFO\";\n    return SERVER_MESSAGE_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$37c60925b115eafe = /*#__PURE__*/ function(COMMAND_REPLY_TYPES) {\n    /**\r\n   * Special notification at the bottom of the chat.\r\n   */ COMMAND_REPLY_TYPES[COMMAND_REPLY_TYPES[\"CHAT\"] = 0] = \"CHAT\";\n    /**\r\n   * Popup. Use only for debug.\r\n   */ COMMAND_REPLY_TYPES[COMMAND_REPLY_TYPES[\"DEBUG\"] = 1] = \"DEBUG\";\n    return COMMAND_REPLY_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$acf2bb14e0f91565 = /*#__PURE__*/ function(LEAVE_HORIZON_TYPES) {\n    LEAVE_HORIZON_TYPES[LEAVE_HORIZON_TYPES[\"PLAYER\"] = 0] = \"PLAYER\";\n    LEAVE_HORIZON_TYPES[LEAVE_HORIZON_TYPES[\"MOB\"] = 1] = \"MOB\";\n    return LEAVE_HORIZON_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$696edb37a517566d = /*#__PURE__*/ function(MOB_TYPES) {\n    MOB_TYPES[MOB_TYPES[\"PLAYER\"] = 0] = \"PLAYER\";\n    // Projectiles\n    MOB_TYPES[MOB_TYPES[\"PREDATOR_MISSILE\"] = 1] = \"PREDATOR_MISSILE\";\n    MOB_TYPES[MOB_TYPES[\"GOLIATH_MISSILE\"] = 2] = \"GOLIATH_MISSILE\";\n    MOB_TYPES[MOB_TYPES[\"COPTER_MISSILE\"] = 3] = \"COPTER_MISSILE\";\n    MOB_TYPES[MOB_TYPES[\"TORNADO_MISSILE\"] = 5] = \"TORNADO_MISSILE\";\n    MOB_TYPES[MOB_TYPES[\"TORNADO_SMALL_MISSILE\"] = 6] = \"TORNADO_SMALL_MISSILE\";\n    MOB_TYPES[MOB_TYPES[\"PROWLER_MISSILE\"] = 7] = \"PROWLER_MISSILE\";\n    // Boxes\n    MOB_TYPES[MOB_TYPES[\"UPGRADE\"] = 4] = \"UPGRADE\";\n    MOB_TYPES[MOB_TYPES[\"SHIELD\"] = 8] = \"SHIELD\";\n    MOB_TYPES[MOB_TYPES[\"INFERNO\"] = 9] = \"INFERNO\";\n    // BTR\n    MOB_TYPES[MOB_TYPES[\"FIREWALL\"] = 200] = \"FIREWALL\";\n    return MOB_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$a1106979a67ebdb7 = /*#__PURE__*/ function(MOB_DESPAWN_TYPES) {\n    MOB_DESPAWN_TYPES[MOB_DESPAWN_TYPES[\"EXPIRED\"] = 0] = \"EXPIRED\";\n    MOB_DESPAWN_TYPES[MOB_DESPAWN_TYPES[\"PICKUP\"] = 1] = \"PICKUP\";\n    return MOB_DESPAWN_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$b46071ccfafa6f3d = /*#__PURE__*/ function(PLAYER_LEVEL_UPDATE_TYPES) {\n    PLAYER_LEVEL_UPDATE_TYPES[PLAYER_LEVEL_UPDATE_TYPES[\"INFORM\"] = 0] = \"INFORM\";\n    PLAYER_LEVEL_UPDATE_TYPES[PLAYER_LEVEL_UPDATE_TYPES[\"LEVELUP\"] = 1] = \"LEVELUP\";\n    return PLAYER_LEVEL_UPDATE_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$757f4d82d38e44cb = /*#__PURE__*/ function(PLAYER_STATUS) {\n    /**\r\n   * On the map.\r\n   */ PLAYER_STATUS[PLAYER_STATUS[\"ALIVE\"] = 0] = \"ALIVE\";\n    /**\r\n   * Dead or spectate\r\n   */ PLAYER_STATUS[PLAYER_STATUS[\"INACTIVE\"] = 1] = \"INACTIVE\";\n    return PLAYER_STATUS;\n}({});\nvar $e4ad34ea523e3171$export$1adcfbf43f9c9a1f = /*#__PURE__*/ function(PLAYER_UPGRADE_TYPES) {\n    PLAYER_UPGRADE_TYPES[PLAYER_UPGRADE_TYPES[\"LOST\"] = 0] = \"LOST\";\n    PLAYER_UPGRADE_TYPES[PLAYER_UPGRADE_TYPES[\"SPEED\"] = 1] = \"SPEED\";\n    PLAYER_UPGRADE_TYPES[PLAYER_UPGRADE_TYPES[\"DEFENSE\"] = 2] = \"DEFENSE\";\n    PLAYER_UPGRADE_TYPES[PLAYER_UPGRADE_TYPES[\"ENERGY\"] = 3] = \"ENERGY\";\n    PLAYER_UPGRADE_TYPES[PLAYER_UPGRADE_TYPES[\"MISSILE\"] = 4] = \"MISSILE\";\n    return PLAYER_UPGRADE_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$92da91fbfb7b66aa = /*#__PURE__*/ function(SERVER_CUSTOM_TYPES) {\n    SERVER_CUSTOM_TYPES[SERVER_CUSTOM_TYPES[\"BTR\"] = 1] = \"BTR\";\n    SERVER_CUSTOM_TYPES[SERVER_CUSTOM_TYPES[\"CTF\"] = 2] = \"CTF\";\n    return SERVER_CUSTOM_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$91e7ecb6780caa5e = /*#__PURE__*/ function(PLAYER_POWERUP_TYPES) {\n    PLAYER_POWERUP_TYPES[PLAYER_POWERUP_TYPES[\"SHIELD\"] = 1] = \"SHIELD\";\n    PLAYER_POWERUP_TYPES[PLAYER_POWERUP_TYPES[\"INFERNO\"] = 2] = \"INFERNO\";\n    return PLAYER_POWERUP_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$d26f8cc6b574a220 = /*#__PURE__*/ function(CTF_TEAMS) {\n    CTF_TEAMS[CTF_TEAMS[\"BLUE\"] = 1] = \"BLUE\";\n    CTF_TEAMS[CTF_TEAMS[\"RED\"] = 2] = \"RED\";\n    return CTF_TEAMS;\n}({});\nvar $e4ad34ea523e3171$export$dc70d30ea27a9c84 = /*#__PURE__*/ function(CTF_FLAG_STATE) {\n    /**\r\n   * Flag dropped.\r\n   */ CTF_FLAG_STATE[CTF_FLAG_STATE[\"STATIC\"] = 1] = \"STATIC\";\n    /**\r\n   * Frag currently owned by player.\r\n   */ CTF_FLAG_STATE[CTF_FLAG_STATE[\"DYNAMIC\"] = 2] = \"DYNAMIC\";\n    return CTF_FLAG_STATE;\n}({});\nvar $e4ad34ea523e3171$export$2e3eef2b8eccf7df = /*#__PURE__*/ function(CTF_CAPTURE_BOUNTY) {\n    CTF_CAPTURE_BOUNTY[CTF_CAPTURE_BOUNTY[\"BASE\"] = 100] = \"BASE\";\n    CTF_CAPTURE_BOUNTY[CTF_CAPTURE_BOUNTY[\"INCREMENT\"] = 100] = \"INCREMENT\";\n    CTF_CAPTURE_BOUNTY[CTF_CAPTURE_BOUNTY[\"MAX\"] = 1000] = \"MAX\";\n    return CTF_CAPTURE_BOUNTY;\n}({});\nvar $e4ad34ea523e3171$export$2da22006ffea76d = /*#__PURE__*/ function(BTR_FIREWALL_STATUS) {\n    BTR_FIREWALL_STATUS[BTR_FIREWALL_STATUS[\"INACTIVE\"] = 0] = \"INACTIVE\";\n    BTR_FIREWALL_STATUS[BTR_FIREWALL_STATUS[\"ACTIVE\"] = 1] = \"ACTIVE\";\n    return BTR_FIREWALL_STATUS;\n}({});\nvar $e4ad34ea523e3171$export$8c774bfef34b3c59 = /*#__PURE__*/ function(CTF_WIN_BOUNTY) {\n    CTF_WIN_BOUNTY[CTF_WIN_BOUNTY[\"BASE\"] = 100] = \"BASE\";\n    CTF_WIN_BOUNTY[CTF_WIN_BOUNTY[\"INCREMENT\"] = 100] = \"INCREMENT\";\n    CTF_WIN_BOUNTY[CTF_WIN_BOUNTY[\"MAX\"] = 1000] = \"MAX\";\n    return CTF_WIN_BOUNTY;\n}({});\nvar $e4ad34ea523e3171$export$617502ab31fc951c = /*#__PURE__*/ function(BTR_WIN_BOUNTY) {\n    BTR_WIN_BOUNTY[BTR_WIN_BOUNTY[\"BASE\"] = 500] = \"BASE\";\n    BTR_WIN_BOUNTY[BTR_WIN_BOUNTY[\"INCREMENT\"] = 500] = \"INCREMENT\";\n    BTR_WIN_BOUNTY[BTR_WIN_BOUNTY[\"MAX\"] = 5000] = \"MAX\";\n    return BTR_WIN_BOUNTY;\n}({});\nvar $e4ad34ea523e3171$export$8b45ddaeb7c31e28 = /*#__PURE__*/ function(GAME_TYPES) {\n    GAME_TYPES[GAME_TYPES[\"FFA\"] = 1] = \"FFA\";\n    GAME_TYPES[GAME_TYPES[\"CTF\"] = 2] = \"CTF\";\n    GAME_TYPES[GAME_TYPES[\"BTR\"] = 3] = \"BTR\";\n    return GAME_TYPES;\n}({});\nvar $e4ad34ea523e3171$export$944993ac0c2a9c3c = /*#__PURE__*/ function(GAME_STATE_CODES) {\n    GAME_STATE_CODES[GAME_STATE_CODES[\"LOGIN\"] = 1] = \"LOGIN\";\n    GAME_STATE_CODES[GAME_STATE_CODES[\"CONNECTING\"] = 2] = \"CONNECTING\";\n    GAME_STATE_CODES[GAME_STATE_CODES[\"PLAYING\"] = 3] = \"PLAYING\";\n    return GAME_STATE_CODES;\n}({});\nconst $e4ad34ea523e3171$export$cbb2a09efea8943b = Object.assign({}, ...Object.entries($e4ad34ea523e3171$export$944993ac0c2a9c3c).map(([name, code])=>({\n        [code]: name\n    })));\nconst $e4ad34ea523e3171$export$fdf35536e9a0700c = {\n    WIDTH: 32768,\n    HEIGHT: 16384\n};\n\n\n\n/**\r\n * Available texture to 2 letter ISO-3166-1 country codes\r\n *\r\n */ const $3973253d5c4ca34e$export$66d1dac76b8287de = {\n    '1': 'SY',\n    '2': 'TH',\n    '3': 'TM',\n    '4': 'TN',\n    '5': 'TR',\n    '6': 'TT',\n    '7': 'TW',\n    '8': 'TZ',\n    '9': 'UA',\n    '10': 'UN',\n    '11': 'US',\n    '12': 'UY',\n    '13': 'UZ',\n    '14': 'VE',\n    '15': 'VN',\n    '16': 'PR',\n    '17': 'PT',\n    '18': 'PY',\n    '19': 'QA',\n    '20': 'RAINBOW',\n    '21': 'RO',\n    '22': 'RS',\n    '23': 'RU',\n    '24': 'SA',\n    '25': 'SE',\n    '26': 'SG',\n    '27': 'SI',\n    '28': 'SK',\n    '29': 'SM',\n    '30': 'MK',\n    '31': 'MO',\n    '32': 'MT',\n    '33': 'MX',\n    '34': 'MY',\n    '35': 'NG',\n    '36': 'NL',\n    '37': 'NO',\n    '38': 'NP',\n    '39': 'NZ',\n    '40': 'OM',\n    '41': 'PA',\n    '42': 'PE',\n    '43': 'JP',\n    '44': 'KP',\n    '45': 'KR',\n    '46': 'KW',\n    '47': 'KZ',\n    '48': 'LB',\n    '49': 'LI',\n    '50': 'LK',\n    '51': 'LT',\n    '52': 'LU',\n    '53': 'LV',\n    '54': 'HN',\n    '55': 'HR',\n    '56': 'HU',\n    '57': 'ID',\n    '58': 'IE',\n    '59': 'IL',\n    '60': 'IM',\n    '61': 'IMPERIAL',\n    '62': 'IN',\n    '63': 'IQ',\n    '64': 'DE',\n    '65': 'DK',\n    '66': 'DO',\n    '67': 'DZ',\n    '68': 'EC',\n    '69': 'EE',\n    '70': 'EG',\n    '71': 'ES',\n    '72': 'EU',\n    '73': 'BH',\n    '74': 'BO',\n    '75': 'BR',\n    '76': 'BT',\n    '77': 'BY',\n    '78': 'CA',\n    '79': 'CH',\n    '80': 'AD',\n    '81': 'AE',\n    '82': 'AL',\n    '83': 'AM',\n    '84': 'CL',\n    '85': 'AQ',\n    '86': 'CN',\n    '87': 'AR',\n    '88': 'FI',\n    '89': 'CO',\n    '90': 'AT',\n    '91': 'IR',\n    '92': 'FR',\n    '93': 'COMMUNIST',\n    '94': 'AU',\n    '95': 'LY',\n    '96': 'IS',\n    '97': 'GB',\n    '98': 'CONFEDERATE',\n    '99': 'AZ',\n    '100': 'MA',\n    '101': 'IT',\n    '102': 'GE',\n    '103': 'CR',\n    '104': 'BA',\n    '105': 'PH',\n    '106': 'MC',\n    '107': 'JM',\n    '108': 'GR',\n    '109': 'CU',\n    '110': 'BD',\n    '111': 'SO',\n    '112': 'PK',\n    '113': 'MD',\n    '114': 'JO',\n    '115': 'GT',\n    '116': 'CY',\n    '117': 'BE',\n    '118': 'ZA',\n    '119': 'SV',\n    '120': 'PL',\n    '121': 'ME',\n    '122': 'JOLLY',\n    '123': 'HK',\n    '124': 'CZ',\n    '125': 'BG'\n};\nconst $3973253d5c4ca34e$export$7f6ac2f1e43b8d16 = Object.assign({}, ...Object.entries($3973253d5c4ca34e$export$66d1dac76b8287de).map(([numCode, charCode])=>({\n        [charCode]: ~~numCode\n    })));\n/**\r\n * Country by ISO 3166-2\r\n *\r\n */ const $3973253d5c4ca34e$export$c5279c2d460d3a22 = {\n    AL: 'Albania',\n    DZ: 'Algeria',\n    AD: 'Andorra',\n    AQ: 'Antarctica',\n    AR: 'Argentina',\n    AM: 'Armenia',\n    AU: 'Australia',\n    AT: 'Austria',\n    AZ: 'Azerbaijan',\n    BH: 'Bahrain',\n    BD: 'Bangladesh',\n    BY: 'Belarus',\n    BE: 'Belgium',\n    BT: 'Bhutan',\n    BO: 'Bolivia',\n    BA: 'Bosnia and Herzegovina',\n    BR: 'Brazil',\n    BG: 'Bulgaria',\n    CA: 'Canada',\n    CL: 'Chile',\n    CN: 'China',\n    CO: 'Colombia',\n    COMMUNIST: 'Communist',\n    CONFEDERATE: 'Confederate',\n    CR: 'CostaRica',\n    HR: 'Croatia',\n    CU: 'Cuba',\n    CY: 'Cyprus',\n    CZ: 'Czech Republic',\n    DK: 'Denmark',\n    DO: 'Dominican Republic',\n    KP: 'DPRK',\n    EC: 'Ecuador',\n    EG: 'Egypt',\n    SV: 'ElSalvador',\n    EE: 'Estonia',\n    EU: 'European Union',\n    FI: 'Finland',\n    FR: 'France',\n    GE: 'Georgia',\n    DE: 'Germany',\n    GR: 'Greece',\n    GT: 'Guatemala',\n    HN: 'Honduras',\n    HK: 'HongKong',\n    HU: 'Hungary',\n    IS: 'Iceland',\n    IMPERIAL: 'Imperial Japan',\n    IN: 'India',\n    ID: 'Indonesia',\n    IR: 'Iran',\n    IQ: 'Iraq',\n    IE: 'Ireland',\n    IM: 'Isle of Man',\n    IL: 'Israel',\n    IT: 'Italy',\n    JM: 'Jamaica',\n    JP: 'Japan',\n    JOLLY: 'Jolly Rogers',\n    JO: 'Jordan',\n    KZ: 'Kazakhstan',\n    KW: 'Kuwait',\n    LV: 'Latvia',\n    LB: 'Lebanon',\n    LY: 'Libyan Arab Jamahiriya',\n    LI: 'Liechtenstein',\n    LT: 'Lithuania',\n    LU: 'Luxembourg',\n    MO: 'Macao',\n    MK: 'Macedonia',\n    MY: 'Malaysia',\n    MT: 'Malta',\n    MX: 'Mexico',\n    MD: 'Moldova',\n    MC: 'Monaco',\n    ME: 'Montenegro',\n    MA: 'Morocco',\n    NP: 'Nepal',\n    NL: 'Netherlands',\n    NZ: 'New Zealand',\n    NG: 'Nigeria',\n    NO: 'Norway',\n    OM: 'Oman',\n    PK: 'Pakistan',\n    PA: 'Panama',\n    PY: 'Paraguay',\n    PE: 'Peru',\n    PH: 'Philippines',\n    PL: 'Poland',\n    PT: 'Portugal',\n    PR: 'PuertoRico',\n    QA: 'Qatar',\n    RAINBOW: 'Rainbow',\n    RO: 'Romania',\n    RU: 'Russian Federation',\n    SM: 'SanMarino',\n    SA: 'Saudi Arabia',\n    RS: 'Serbia',\n    SG: 'Singapore',\n    SK: 'Slovakia',\n    SI: 'Slovenia',\n    SO: 'Somalia',\n    ZA: 'South Africa',\n    KR: 'South Korea',\n    ES: 'Spain',\n    LK: 'Sri Lanka',\n    SE: 'Sweden',\n    CH: 'Switzerland',\n    SY: 'Syrian Arab Republic',\n    TW: 'Taiwan',\n    TZ: 'Tanzania',\n    TH: 'Thailand',\n    TT: 'Trinidad and Tobago',\n    TN: 'Tunisia',\n    TR: 'Turkey',\n    TM: 'Turkmenistan',\n    UA: 'Ukraine',\n    AE: 'United Arab Emirates',\n    GB: 'United Kingdom',\n    UN: 'United Nations',\n    US: 'United States',\n    UY: 'Uruguay',\n    UZ: 'Uzbekistan',\n    VE: 'Venezuela',\n    VN: 'Vietnam'\n};\n\n\n\n\nconst $1ad5ff131bcf5066$var$clamp = (value, lower, upper)=>{\n    if (value <= lower) return lower;\n    if (value >= upper) return upper;\n    return value;\n};\nconst $1ad5ff131bcf5066$export$b43b9a7a914dcf98 = (level)=>{\n    return ((level - 1) / 0.0111) ** 2;\n};\nconst $1ad5ff131bcf5066$export$1f1fdb6ace8bea22 = (x, y)=>{\n    return {\n        x: 128 * x - (0, $e4ad34ea523e3171$export$fdf35536e9a0700c).WIDTH / 2 + 64,\n        y: $1ad5ff131bcf5066$var$clamp(128 * y - (0, $e4ad34ea523e3171$export$fdf35536e9a0700c).HEIGHT, -(0, $e4ad34ea523e3171$export$fdf35536e9a0700c).HEIGHT / 2, (0, $e4ad34ea523e3171$export$fdf35536e9a0700c).HEIGHT / 2) + 64\n    };\n};\nconst $1ad5ff131bcf5066$export$81184b07be21e3c8 = (upgrades)=>{\n    const speed = upgrades & 7;\n    const shield = (upgrades & 8) >> 3;\n    const inferno = (upgrades & 16) >> 4;\n    return {\n        speed: speed,\n        shield: shield,\n        inferno: inferno\n    };\n};\nconst $1ad5ff131bcf5066$export$3a66bae294e393e3 = (keystate)=>{\n    return {\n        keystate: {\n            UP: (keystate & 1) === 1,\n            DOWN: (keystate & 2) === 2,\n            LEFT: (keystate & 4) === 4,\n            RIGHT: (keystate & 8) === 8\n        },\n        boost: (keystate & 16) === 16,\n        strafe: (keystate & 32) === 32,\n        stealthed: (keystate & 64) === 64,\n        flagspeed: (keystate & 128) === 128\n    };\n};\nvar $1ad5ff131bcf5066$export$2e2bcd8739ae039 = $1ad5ff131bcf5066$export$b43b9a7a914dcf98;\n\n\nconst $2f787509a25544d7$export$e298e77e784219b4 = (speed, shield, inferno)=>{\n    return speed & 7 | shield << 3 | inferno << 4;\n};\nconst $2f787509a25544d7$export$5de0767fc25e984 = (keystate, boost, strafe, stealthed, flagspeed)=>{\n    const down = keystate.DOWN === true ? 1 : 0;\n    return 0 | (keystate.UP === true ? 1 : 0) << 0 | (keystate.UP === true ? 0 : down) << 1 | (keystate.LEFT === true ? 1 : 0) << 2 | (keystate.RIGHT === true ? 1 : 0) << 3 | (boost === true ? 1 : 0) << 4 | (strafe === true ? 1 : 0) << 5 | (stealthed === true ? 1 : 0) << 6 | (flagspeed === true ? 1 : 0) << 7;\n};\n\n\n\n\nconst $ad11f6fc34bb1cfa$export$aa1d7fff11452d37 = {\n    PREDATOR: 1,\n    GOLIATH: 2,\n    COPTER: 3,\n    TORNADO: 4,\n    PROWLER: 5\n};\nconst $ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6 = {\n    FIRE: 'fire',\n    INFERNO: 'infernoFire'\n};\nconst $ad11f6fc34bb1cfa$export$637dcfd116ceec58 = {\n    DEFAULT: 'default',\n    SPECIAL: 'special'\n};\nconst $ad11f6fc34bb1cfa$export$6467c870d8dfa82c = {\n    PREDATOR: 32,\n    GOLIATH: 88,\n    COPTER: 34,\n    TORNADO: 38,\n    PROWLER: 36\n};\nconst $ad11f6fc34bb1cfa$var$missileTemplate = (type, x, y, rot, alt = false)=>{\n    return {\n        type: type,\n        x: x,\n        y: y,\n        rot: rot,\n        alt: alt\n    };\n};\nconst $ad11f6fc34bb1cfa$var$missileFireTemplate = (def = [], special = [])=>{\n    return {\n        [$ad11f6fc34bb1cfa$export$637dcfd116ceec58.DEFAULT]: def,\n        [$ad11f6fc34bb1cfa$export$637dcfd116ceec58.SPECIAL]: special\n    };\n};\nconst $ad11f6fc34bb1cfa$export$de794ad9b3d6afb7 = {\n    [$ad11f6fc34bb1cfa$export$aa1d7fff11452d37.PREDATOR]: {\n        name: 'raptor',\n        turnFactor: 0.065,\n        accelFactor: 0.225,\n        brakeFactor: 0.025,\n        boostFactor: 1.5,\n        infernoFactor: 0.75,\n        maxSpeed: 5.5,\n        minSpeed: 0.001,\n        flagSpeed: 5,\n        healthRegen: 0.001,\n        energyRegen: 0.008,\n        fireEnergy: 0.6,\n        specialEnergy: 0,\n        specialEnergyRegen: -0.01,\n        specialDelay: 0,\n        fireDelay: 550,\n        damageFactor: 2,\n        energyLight: 0.6,\n        collisions: [\n            [\n                0,\n                5,\n                23\n            ],\n            [\n                0,\n                -15,\n                15\n            ],\n            [\n                0,\n                -25,\n                12\n            ]\n        ],\n        repelEnergy: 2100,\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.FIRE]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PREDATOR_MISSILE, 0, 35, 0)\n        ]),\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.INFERNO]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PREDATOR_MISSILE, -20, 5, -0.05),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PREDATOR_MISSILE, 0, 35, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PREDATOR_MISSILE, 20, 5, 0.05)\n        ])\n    },\n    [$ad11f6fc34bb1cfa$export$aa1d7fff11452d37.GOLIATH]: {\n        name: 'spirit',\n        turnFactor: 0.04,\n        accelFactor: 0.15,\n        brakeFactor: 0.015,\n        boostFactor: 1,\n        infernoFactor: 0.75,\n        maxSpeed: 3.5,\n        minSpeed: 0.001,\n        flagSpeed: 5,\n        healthRegen: 0.0005,\n        energyRegen: 0.005,\n        fireEnergy: 0.9,\n        specialEnergy: 0.5,\n        specialEnergyRegen: 0,\n        specialDelay: 1000,\n        fireDelay: 300,\n        damageFactor: 1,\n        energyLight: 0.9,\n        collisions: [\n            [\n                0,\n                0,\n                35\n            ],\n            [\n                50,\n                14,\n                16\n            ],\n            [\n                74,\n                26,\n                14\n            ],\n            [\n                30,\n                8,\n                23\n            ],\n            [\n                63,\n                22,\n                15\n            ],\n            [\n                -50,\n                14,\n                16\n            ],\n            [\n                -74,\n                26,\n                14\n            ],\n            [\n                -30,\n                8,\n                23\n            ],\n            [\n                -63,\n                22,\n                15\n            ]\n        ],\n        repelEnergy: 7500,\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.FIRE]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).GOLIATH_MISSILE, 0, 35, 0)\n        ]),\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.INFERNO]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).GOLIATH_MISSILE, -30, 0, -0.05),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).GOLIATH_MISSILE, 0, 35, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).GOLIATH_MISSILE, 30, 0, 0.05)\n        ])\n    },\n    [$ad11f6fc34bb1cfa$export$aa1d7fff11452d37.COPTER]: {\n        name: 'mohawk',\n        turnFactor: 0.07,\n        accelFactor: 0.275,\n        brakeFactor: 0.025,\n        boostFactor: 1,\n        infernoFactor: 0.75,\n        maxSpeed: 6,\n        minSpeed: 0.001,\n        flagSpeed: 5,\n        healthRegen: 0.001,\n        energyRegen: 0.01,\n        fireEnergy: 0.3,\n        specialEnergy: 0,\n        specialEnergyRegen: 0,\n        specialDelay: 0,\n        fireDelay: 300,\n        damageFactor: 2.78,\n        energyLight: 0.3,\n        collisions: [\n            [\n                0,\n                -12,\n                15\n            ],\n            [\n                0,\n                0,\n                17\n            ],\n            [\n                0,\n                13,\n                15\n            ],\n            [\n                0,\n                26,\n                15\n            ]\n        ],\n        repelEnergy: 1800,\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.FIRE]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).COPTER_MISSILE, 15, 10, 0, true)\n        ]),\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.INFERNO]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).COPTER_MISSILE, -10, 5, -0.05),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).COPTER_MISSILE, 0, 10, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).COPTER_MISSILE, 10, 5, 0.05)\n        ])\n    },\n    [$ad11f6fc34bb1cfa$export$aa1d7fff11452d37.TORNADO]: {\n        name: 'tornado',\n        turnFactor: 0.055,\n        accelFactor: 0.2,\n        brakeFactor: 0.025,\n        boostFactor: 1,\n        infernoFactor: 0.75,\n        maxSpeed: 4.5,\n        minSpeed: 0.001,\n        flagSpeed: 5,\n        healthRegen: 0.001,\n        energyRegen: 0.006,\n        fireEnergy: 0.5,\n        specialEnergy: 0.9,\n        specialEnergyRegen: 0,\n        specialDelay: 0,\n        fireDelay: 500,\n        damageFactor: 5 / 3,\n        energyLight: 0.5,\n        collisions: [\n            [\n                0,\n                8,\n                18\n            ],\n            [\n                14,\n                12,\n                13\n            ],\n            [\n                -14,\n                12,\n                13\n            ],\n            [\n                0,\n                -12,\n                16\n            ],\n            [\n                0,\n                -26,\n                14\n            ],\n            [\n                0,\n                -35,\n                12\n            ]\n        ],\n        repelEnergy: 2400,\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.FIRE]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, 0, 40, 0)\n        ], [\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_SMALL_MISSILE, -15, 10, -0.05),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_SMALL_MISSILE, 0, 40, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_SMALL_MISSILE, 15, 10, 0.05)\n        ]),\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.INFERNO]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, -15, 10, -0.05),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, 0, 40, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, 15, 10, 0.05)\n        ], [\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, -30, 20, -0.06),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, -20, 15, -0.03),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, 0, 40, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, 20, 15, 0.03),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).TORNADO_MISSILE, 30, 20, 0.06)\n        ])\n    },\n    [$ad11f6fc34bb1cfa$export$aa1d7fff11452d37.PROWLER]: {\n        name: 'prowler',\n        turnFactor: 0.055,\n        accelFactor: 0.2,\n        brakeFactor: 0.025,\n        boostFactor: 1,\n        infernoFactor: 0.75,\n        maxSpeed: 4.5,\n        minSpeed: 0.001,\n        flagSpeed: 5,\n        healthRegen: 0.001,\n        energyRegen: 0.006,\n        fireEnergy: 0.75,\n        specialEnergy: 0.6,\n        specialEnergyRegen: 0,\n        specialDelay: 1500,\n        damageFactor: 5 / 3,\n        fireDelay: 300,\n        energyLight: 0.75,\n        collisions: [\n            [\n                0,\n                11,\n                25\n            ],\n            [\n                0,\n                -8,\n                18\n            ],\n            [\n                19,\n                20,\n                10\n            ],\n            [\n                -19,\n                20,\n                10\n            ],\n            [\n                0,\n                -20,\n                14\n            ]\n        ],\n        repelEnergy: 2600,\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.FIRE]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PROWLER_MISSILE, 0, 35, 0)\n        ]),\n        [$ad11f6fc34bb1cfa$export$25d724bb7d1b6bc6.INFERNO]: $ad11f6fc34bb1cfa$var$missileFireTemplate([\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PROWLER_MISSILE, -20, 0, -0.05),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PROWLER_MISSILE, 0, 35, 0),\n            $ad11f6fc34bb1cfa$var$missileTemplate((0, $e4ad34ea523e3171$export$696edb37a517566d).PROWLER_MISSILE, 20, 0, 0.05)\n        ])\n    }\n};\n\n\n/* tslint:disable */ /** some stats: the walls have 12 different radii,\r\n * distributed in steps of 12 like this:\r\n * \r\n * radius : number of walls\r\n  '36': 4,\r\n  '48': 24,\r\n  '60': 52,\r\n  '72': 53,\r\n  '84': 62,\r\n  '96': 50,\r\n  '108': 142,\r\n  '120': 77,\r\n  '132': 43,\r\n  '144': 9,\r\n  '156': 2,\r\n  '168': 2\r\n */ const $35cddcdef3a819e4$export$538e3d9fdc6b7eea = [\n    [\n        1009,\n        -2308,\n        108\n    ],\n    [\n        1241,\n        -2490,\n        60\n    ],\n    [\n        1157,\n        -2379,\n        84\n    ],\n    [\n        622,\n        -2126,\n        48\n    ],\n    [\n        669,\n        -2187,\n        72\n    ],\n    [\n        -392,\n        -1669,\n        132\n    ],\n    [\n        -273,\n        -1746,\n        60\n    ],\n    [\n        -252,\n        -1504,\n        120\n    ],\n    [\n        1553,\n        -2016,\n        48\n    ],\n    [\n        1637,\n        -1972,\n        60\n    ],\n    [\n        1736,\n        -1922,\n        60\n    ],\n    [\n        2150,\n        -2406,\n        72\n    ],\n    [\n        2238,\n        -2318,\n        108\n    ],\n    [\n        2364,\n        -2391,\n        72\n    ],\n    [\n        2491,\n        -2682,\n        72\n    ],\n    [\n        2596,\n        -2671,\n        108\n    ],\n    [\n        -150,\n        -3147,\n        48\n    ],\n    [\n        -155,\n        -3044,\n        84\n    ],\n    [\n        -427,\n        -3600,\n        48\n    ],\n    [\n        -259,\n        -2982,\n        60\n    ],\n    [\n        -379,\n        -3529,\n        72\n    ],\n    [\n        -665,\n        -3052,\n        60\n    ],\n    [\n        20,\n        -1816,\n        60\n    ],\n    [\n        127,\n        -1799,\n        60\n    ],\n    [\n        263,\n        -2572,\n        48\n    ],\n    [\n        405,\n        -2570,\n        108\n    ],\n    [\n        851,\n        -4183,\n        120\n    ],\n    [\n        754,\n        -3971,\n        108\n    ],\n    [\n        1757,\n        -5065,\n        132\n    ],\n    [\n        1169,\n        -4453,\n        108\n    ],\n    [\n        2054,\n        -5244,\n        108\n    ],\n    [\n        1631,\n        -4901,\n        108\n    ],\n    [\n        2305,\n        -5281,\n        108\n    ],\n    [\n        1007,\n        -4281,\n        96\n    ],\n    [\n        2766,\n        -5202,\n        96\n    ],\n    [\n        2927,\n        -5204,\n        84\n    ],\n    [\n        3206,\n        -5218,\n        36\n    ],\n    [\n        3099,\n        -5193,\n        72\n    ],\n    [\n        1417,\n        -4726,\n        120\n    ],\n    [\n        2844,\n        -1513,\n        60\n    ],\n    [\n        3206,\n        -1464,\n        120\n    ],\n    [\n        2881,\n        -1403,\n        108\n    ],\n    [\n        3804,\n        -2025,\n        84\n    ],\n    [\n        4116,\n        -1778,\n        108\n    ],\n    [\n        3715,\n        -1508,\n        72\n    ],\n    [\n        4247,\n        -1126,\n        72\n    ],\n    [\n        3860,\n        268,\n        60\n    ],\n    [\n        4334,\n        -1011,\n        132\n    ],\n    [\n        3849,\n        349,\n        72\n    ],\n    [\n        3956,\n        490,\n        96\n    ],\n    [\n        4073,\n        667,\n        108\n    ],\n    [\n        3583,\n        -864,\n        96\n    ],\n    [\n        4135,\n        836,\n        120\n    ],\n    [\n        4785,\n        -743,\n        120\n    ],\n    [\n        4993,\n        -839,\n        108\n    ],\n    [\n        5224,\n        -482,\n        84\n    ],\n    [\n        5235,\n        -1238,\n        132\n    ],\n    [\n        5419,\n        -1346,\n        72\n    ],\n    [\n        6075,\n        -5099,\n        96\n    ],\n    [\n        5767,\n        -4953,\n        108\n    ],\n    [\n        5896,\n        -4967,\n        108\n    ],\n    [\n        5384,\n        -4642,\n        108\n    ],\n    [\n        5704,\n        -4857,\n        108\n    ],\n    [\n        5563,\n        -4697,\n        108\n    ],\n    [\n        5406,\n        -4470,\n        132\n    ],\n    [\n        5352,\n        -3964,\n        108\n    ],\n    [\n        5309,\n        -3665,\n        132\n    ],\n    [\n        5247,\n        -3464,\n        108\n    ],\n    [\n        5300,\n        -3121,\n        108\n    ],\n    [\n        3524,\n        -3340,\n        132\n    ],\n    [\n        3661,\n        -3589,\n        108\n    ],\n    [\n        7236,\n        -1376,\n        72\n    ],\n    [\n        7624,\n        -1610,\n        96\n    ],\n    [\n        7403,\n        -1555,\n        84\n    ],\n    [\n        7514,\n        -1568,\n        108\n    ],\n    [\n        3660,\n        -2705,\n        108\n    ],\n    [\n        3374,\n        -2813,\n        96\n    ],\n    [\n        7347,\n        -1447,\n        108\n    ],\n    [\n        7236,\n        -775,\n        60\n    ],\n    [\n        7207,\n        -631,\n        108\n    ],\n    [\n        7303,\n        -468,\n        108\n    ],\n    [\n        7262,\n        -1263,\n        108\n    ],\n    [\n        7404,\n        -350,\n        120\n    ],\n    [\n        7589,\n        -305,\n        108\n    ],\n    [\n        7741,\n        -1589,\n        120\n    ],\n    [\n        7949,\n        -1594,\n        120\n    ],\n    [\n        8152,\n        -1599,\n        132\n    ],\n    [\n        8378,\n        -1602,\n        144\n    ],\n    [\n        7873,\n        -321,\n        72\n    ],\n    [\n        8543,\n        -1661,\n        84\n    ],\n    [\n        7790,\n        -259,\n        120\n    ],\n    [\n        8675,\n        -1573,\n        120\n    ],\n    [\n        8163,\n        -245,\n        84\n    ],\n    [\n        8329,\n        -311,\n        84\n    ],\n    [\n        8275,\n        -229,\n        120\n    ],\n    [\n        8447,\n        -277,\n        120\n    ],\n    [\n        8824,\n        -1447,\n        108\n    ],\n    [\n        7221,\n        -1140,\n        60\n    ],\n    [\n        8924,\n        -1273,\n        108\n    ],\n    [\n        6844,\n        -950,\n        120\n    ],\n    [\n        8949,\n        -1060,\n        132\n    ],\n    [\n        8904,\n        -920,\n        96\n    ],\n    [\n        8582,\n        -338,\n        84\n    ],\n    [\n        8963,\n        -803,\n        120\n    ],\n    [\n        8680,\n        -322,\n        108\n    ],\n    [\n        8811,\n        -449,\n        108\n    ],\n    [\n        8910,\n        -610,\n        108\n    ],\n    [\n        6855,\n        114,\n        96\n    ],\n    [\n        6971,\n        241,\n        120\n    ],\n    [\n        6852,\n        656,\n        60\n    ],\n    [\n        6980,\n        706,\n        108\n    ],\n    [\n        6946,\n        939,\n        120\n    ],\n    [\n        6027,\n        -560,\n        72\n    ],\n    [\n        7521,\n        425,\n        48\n    ],\n    [\n        7599,\n        389,\n        60\n    ],\n    [\n        5863,\n        -431,\n        108\n    ],\n    [\n        9392,\n        262,\n        108\n    ],\n    [\n        7521,\n        512,\n        72\n    ],\n    [\n        9807,\n        1027,\n        60\n    ],\n    [\n        9554,\n        237,\n        120\n    ],\n    [\n        9346,\n        392,\n        144\n    ],\n    [\n        9789,\n        1142,\n        84\n    ],\n    [\n        9747,\n        -532,\n        96\n    ],\n    [\n        8591,\n        347,\n        72\n    ],\n    [\n        9951,\n        -509,\n        120\n    ],\n    [\n        9308,\n        2417,\n        60\n    ],\n    [\n        10185,\n        -522,\n        108\n    ],\n    [\n        10330,\n        2147,\n        72\n    ],\n    [\n        9350,\n        2480,\n        84\n    ],\n    [\n        10503,\n        2124,\n        108\n    ],\n    [\n        12500,\n        2628,\n        60\n    ],\n    [\n        13188,\n        2864,\n        60\n    ],\n    [\n        12637,\n        2659,\n        84\n    ],\n    [\n        13262,\n        2899,\n        60\n    ],\n    [\n        13777,\n        5168,\n        60\n    ],\n    [\n        15709,\n        6399,\n        48\n    ],\n    [\n        13539,\n        5664,\n        60\n    ],\n    [\n        15660,\n        6474,\n        48\n    ],\n    [\n        13743,\n        5248,\n        84\n    ],\n    [\n        15482,\n        6600,\n        48\n    ],\n    [\n        15591,\n        6525,\n        36\n    ],\n    [\n        13487,\n        5738,\n        84\n    ],\n    [\n        15407,\n        6702,\n        72\n    ],\n    [\n        8171,\n        -2568,\n        60\n    ],\n    [\n        16001,\n        6015,\n        72\n    ],\n    [\n        16017,\n        6110,\n        48\n    ],\n    [\n        6496,\n        -1491,\n        60\n    ],\n    [\n        6626,\n        -1480,\n        84\n    ],\n    [\n        6190,\n        -1022,\n        96\n    ],\n    [\n        8325,\n        -2615,\n        120\n    ],\n    [\n        8222,\n        -2412,\n        120\n    ],\n    [\n        9204,\n        -2288,\n        108\n    ],\n    [\n        9279,\n        -2216,\n        120\n    ],\n    [\n        10375,\n        -1558,\n        96\n    ],\n    [\n        10309,\n        -1421,\n        108\n    ],\n    [\n        10247,\n        -1216,\n        144\n    ],\n    [\n        10079,\n        -2310,\n        108\n    ],\n    [\n        10320,\n        -2330,\n        120\n    ],\n    [\n        10942,\n        -2963,\n        108\n    ],\n    [\n        10807,\n        -2778,\n        132\n    ],\n    [\n        12989,\n        -1929,\n        72\n    ],\n    [\n        12613,\n        -1181,\n        48\n    ],\n    [\n        12559,\n        -1120,\n        60\n    ],\n    [\n        11642,\n        -1900,\n        84\n    ],\n    [\n        11558,\n        -1692,\n        108\n    ],\n    [\n        11509,\n        -1479,\n        60\n    ],\n    [\n        12559,\n        -2673,\n        96\n    ],\n    [\n        12446,\n        -2487,\n        120\n    ],\n    [\n        12375,\n        -2303,\n        108\n    ],\n    [\n        10363,\n        -3514,\n        84\n    ],\n    [\n        10290,\n        -3340,\n        108\n    ],\n    [\n        10162,\n        -3207,\n        84\n    ],\n    [\n        9003,\n        -3048,\n        108\n    ],\n    [\n        9161,\n        -3119,\n        72\n    ],\n    [\n        14550,\n        -3462,\n        108\n    ],\n    [\n        14407,\n        -3335,\n        108\n    ],\n    [\n        14366,\n        -4493,\n        108\n    ],\n    [\n        14477,\n        -4437,\n        120\n    ],\n    [\n        15305,\n        -4230,\n        108\n    ],\n    [\n        15481,\n        -4283,\n        108\n    ],\n    [\n        15349,\n        -5009,\n        48\n    ],\n    [\n        11874,\n        -4879,\n        72\n    ],\n    [\n        15453,\n        -4984,\n        84\n    ],\n    [\n        11907,\n        -4742,\n        96\n    ],\n    [\n        12440,\n        -4278,\n        60\n    ],\n    [\n        11980,\n        -4582,\n        108\n    ],\n    [\n        12131,\n        -4387,\n        132\n    ],\n    [\n        15681,\n        -4973,\n        120\n    ],\n    [\n        12591,\n        -4252,\n        96\n    ],\n    [\n        12777,\n        -4244,\n        108\n    ],\n    [\n        12969,\n        -4227,\n        108\n    ],\n    [\n        15897,\n        -5071,\n        108\n    ],\n    [\n        13204,\n        -4228,\n        120\n    ],\n    [\n        11592,\n        -5261,\n        84\n    ],\n    [\n        12743,\n        -4826,\n        48\n    ],\n    [\n        10102,\n        -5078,\n        84\n    ],\n    [\n        12854,\n        -4782,\n        108\n    ],\n    [\n        10191,\n        -5033,\n        84\n    ],\n    [\n        10523,\n        -5133,\n        120\n    ],\n    [\n        10336,\n        -4977,\n        132\n    ],\n    [\n        10667,\n        -5250,\n        96\n    ],\n    [\n        9665,\n        -6403,\n        84\n    ],\n    [\n        10798,\n        -5379,\n        60\n    ],\n    [\n        9670,\n        -5547,\n        108\n    ],\n    [\n        9834,\n        -6369,\n        120\n    ],\n    [\n        9864,\n        -5572,\n        132\n    ],\n    [\n        11362,\n        -3957,\n        108\n    ],\n    [\n        11162,\n        -3830,\n        120\n    ],\n    [\n        8922,\n        -6173,\n        120\n    ],\n    [\n        9003,\n        -5368,\n        60\n    ],\n    [\n        8453,\n        -6153,\n        72\n    ],\n    [\n        8954,\n        -5229,\n        108\n    ],\n    [\n        8905,\n        -5072,\n        96\n    ],\n    [\n        8704,\n        -3873,\n        108\n    ],\n    [\n        8578,\n        -6105,\n        96\n    ],\n    [\n        8508,\n        -3710,\n        84\n    ],\n    [\n        8614,\n        -5400,\n        60\n    ],\n    [\n        8788,\n        -4922,\n        132\n    ],\n    [\n        8936,\n        -3905,\n        72\n    ],\n    [\n        9701,\n        -4613,\n        108\n    ],\n    [\n        6973,\n        -4776,\n        72\n    ],\n    [\n        7016,\n        -4674,\n        108\n    ],\n    [\n        9124,\n        -3853,\n        108\n    ],\n    [\n        7253,\n        -4648,\n        96\n    ],\n    [\n        6602,\n        -4591,\n        72\n    ],\n    [\n        8510,\n        -5322,\n        108\n    ],\n    [\n        6687,\n        -3810,\n        84\n    ],\n    [\n        9525,\n        -4492,\n        132\n    ],\n    [\n        7461,\n        -4705,\n        108\n    ],\n    [\n        9280,\n        -3812,\n        96\n    ],\n    [\n        6467,\n        -2811,\n        36\n    ],\n    [\n        6842,\n        -3820,\n        96\n    ],\n    [\n        6483,\n        -2725,\n        72\n    ],\n    [\n        7675,\n        -4864,\n        132\n    ],\n    [\n        6991,\n        -2885,\n        108\n    ],\n    [\n        6610,\n        -2664,\n        108\n    ],\n    [\n        6822,\n        -2736,\n        108\n    ],\n    [\n        6763,\n        -4582,\n        108\n    ],\n    [\n        6509,\n        -2490,\n        108\n    ],\n    [\n        7216,\n        -3865,\n        132\n    ],\n    [\n        7018,\n        -3708,\n        120\n    ],\n    [\n        2254,\n        -3301,\n        96\n    ],\n    [\n        6378,\n        -2310,\n        96\n    ],\n    [\n        7197,\n        -2857,\n        108\n    ],\n    [\n        2609,\n        -3483,\n        60\n    ],\n    [\n        2449,\n        -3385,\n        108\n    ],\n    [\n        4585,\n        -2889,\n        84\n    ],\n    [\n        4470,\n        -2768,\n        96\n    ],\n    [\n        4083,\n        -4033,\n        108\n    ],\n    [\n        1568,\n        -2869,\n        48\n    ],\n    [\n        4336,\n        -4105,\n        144\n    ],\n    [\n        1977,\n        -1678,\n        60\n    ],\n    [\n        1412,\n        -3642,\n        60\n    ],\n    [\n        1570,\n        -2792,\n        72\n    ],\n    [\n        1932,\n        -1586,\n        72\n    ],\n    [\n        1310,\n        -3547,\n        72\n    ],\n    [\n        3611,\n        1391,\n        120\n    ],\n    [\n        3558,\n        2174,\n        108\n    ],\n    [\n        3431,\n        1563,\n        108\n    ],\n    [\n        3142,\n        2813,\n        84\n    ],\n    [\n        3330,\n        2296,\n        132\n    ],\n    [\n        3001,\n        2818,\n        72\n    ],\n    [\n        3703,\n        2044,\n        48\n    ],\n    [\n        2872,\n        3863,\n        108\n    ],\n    [\n        3125,\n        2942,\n        132\n    ],\n    [\n        2841,\n        4018,\n        132\n    ],\n    [\n        2402,\n        5140,\n        72\n    ],\n    [\n        2511,\n        5167,\n        96\n    ],\n    [\n        -14607,\n        -5112,\n        108\n    ],\n    [\n        -14430,\n        -5180,\n        108\n    ],\n    [\n        -14197,\n        -5222,\n        144\n    ],\n    [\n        -14895,\n        -4703,\n        60\n    ],\n    [\n        -14797,\n        -4728,\n        48\n    ],\n    [\n        -14697,\n        -4739,\n        48\n    ],\n    [\n        -13919,\n        -5281,\n        132\n    ],\n    [\n        -13646,\n        -5170,\n        84\n    ],\n    [\n        -13400,\n        -5068,\n        144\n    ],\n    [\n        -13099,\n        -5108,\n        132\n    ],\n    [\n        -12824,\n        -5092,\n        108\n    ],\n    [\n        -12631,\n        -5044,\n        108\n    ],\n    [\n        -12427,\n        -4914,\n        108\n    ],\n    [\n        -12270,\n        -4816,\n        84\n    ],\n    [\n        -11772,\n        -4983,\n        84\n    ],\n    [\n        -11940,\n        -4867,\n        108\n    ],\n    [\n        -12091,\n        -4699,\n        108\n    ],\n    [\n        -12270,\n        -4529,\n        84\n    ],\n    [\n        -12460,\n        -4396,\n        108\n    ],\n    [\n        -13058,\n        -4252,\n        108\n    ],\n    [\n        -12894,\n        -4096,\n        84\n    ],\n    [\n        -12738,\n        -4077,\n        84\n    ],\n    [\n        -13546,\n        -4341,\n        48\n    ],\n    [\n        -13428,\n        -4299,\n        108\n    ],\n    [\n        -14679,\n        -4192,\n        84\n    ],\n    [\n        -14368,\n        -4308,\n        84\n    ],\n    [\n        -14495,\n        -4133,\n        132\n    ],\n    [\n        -12072,\n        -3824,\n        96\n    ],\n    [\n        -11904,\n        -3648,\n        120\n    ],\n    [\n        -11654,\n        -3569,\n        84\n    ],\n    [\n        -11648,\n        -3357,\n        108\n    ],\n    [\n        -11420,\n        -3359,\n        108\n    ],\n    [\n        -11296,\n        -3135,\n        84\n    ],\n    [\n        -10782,\n        -2838,\n        96\n    ],\n    [\n        -11410,\n        -3039,\n        36\n    ],\n    [\n        -10581,\n        -2773,\n        132\n    ],\n    [\n        -11118,\n        -5114,\n        96\n    ],\n    [\n        -10675,\n        -5079,\n        108\n    ],\n    [\n        -10205,\n        -4890,\n        96\n    ],\n    [\n        -11543,\n        -4164,\n        96\n    ],\n    [\n        -11287,\n        -4244,\n        60\n    ],\n    [\n        -10018,\n        -4747,\n        120\n    ],\n    [\n        -9278,\n        419,\n        60\n    ],\n    [\n        -9341,\n        470,\n        60\n    ],\n    [\n        -9180,\n        496,\n        96\n    ],\n    [\n        -11365,\n        -4131,\n        120\n    ],\n    [\n        -9353,\n        0,\n        72\n    ],\n    [\n        -8975,\n        528,\n        120\n    ],\n    [\n        -9413,\n        89,\n        108\n    ],\n    [\n        -8230,\n        770,\n        48\n    ],\n    [\n        -9231,\n        17,\n        84\n    ],\n    [\n        -6808,\n        1667,\n        60\n    ],\n    [\n        -6694,\n        1622,\n        96\n    ],\n    [\n        -8285,\n        855,\n        72\n    ],\n    [\n        -6793,\n        1796,\n        96\n    ],\n    [\n        -6865,\n        1935,\n        60\n    ],\n    [\n        -7043,\n        2222,\n        72\n    ],\n    [\n        -7083,\n        2368,\n        72\n    ],\n    [\n        -7103,\n        2533,\n        84\n    ],\n    [\n        -7099,\n        2721,\n        96\n    ],\n    [\n        -7178,\n        2874,\n        48\n    ],\n    [\n        -6964,\n        3110,\n        84\n    ],\n    [\n        -6246,\n        4191,\n        72\n    ],\n    [\n        -6735,\n        3446,\n        48\n    ],\n    [\n        -6722,\n        3537,\n        84\n    ],\n    [\n        -6396,\n        3388,\n        108\n    ],\n    [\n        -6787,\n        3140,\n        108\n    ],\n    [\n        -6227,\n        4488,\n        84\n    ],\n    [\n        -6281,\n        3953,\n        72\n    ],\n    [\n        -6530,\n        3576,\n        132\n    ],\n    [\n        -6147,\n        3994,\n        132\n    ],\n    [\n        -6141,\n        4292,\n        144\n    ],\n    [\n        -6377,\n        5578,\n        84\n    ],\n    [\n        -6152,\n        4569,\n        108\n    ],\n    [\n        -6222,\n        4769,\n        84\n    ],\n    [\n        -6266,\n        4956,\n        72\n    ],\n    [\n        -6233,\n        5414,\n        108\n    ],\n    [\n        -6347,\n        5646,\n        84\n    ],\n    [\n        -6400,\n        6066,\n        84\n    ],\n    [\n        -6411,\n        6261,\n        96\n    ],\n    [\n        -6565,\n        7043,\n        72\n    ],\n    [\n        -6377,\n        6415,\n        108\n    ],\n    [\n        -6440,\n        6614,\n        84\n    ],\n    [\n        -5944,\n        1954,\n        60\n    ],\n    [\n        -6001,\n        2039,\n        96\n    ],\n    [\n        -6467,\n        7070,\n        108\n    ],\n    [\n        -4963,\n        3608,\n        72\n    ],\n    [\n        -4776,\n        3510,\n        48\n    ],\n    [\n        -5785,\n        1998,\n        132\n    ],\n    [\n        -3708,\n        3449,\n        72\n    ],\n    [\n        -3790,\n        3582,\n        108\n    ],\n    [\n        -4031,\n        3697,\n        84\n    ],\n    [\n        -4859,\n        3634,\n        120\n    ],\n    [\n        -3850,\n        3730,\n        120\n    ],\n    [\n        -4689,\n        4605,\n        108\n    ],\n    [\n        -3492,\n        2892,\n        72\n    ],\n    [\n        -4507,\n        4483,\n        72\n    ],\n    [\n        -4829,\n        2745,\n        108\n    ],\n    [\n        -4435,\n        4273,\n        108\n    ],\n    [\n        -3383,\n        2930,\n        108\n    ],\n    [\n        -4888,\n        2821,\n        108\n    ],\n    [\n        -5372,\n        5172,\n        60\n    ],\n    [\n        -5036,\n        2981,\n        108\n    ],\n    [\n        -9895,\n        -1942,\n        120\n    ],\n    [\n        -9371,\n        -2159,\n        72\n    ],\n    [\n        -9995,\n        -1773,\n        108\n    ],\n    [\n        -5280,\n        5218,\n        108\n    ],\n    [\n        -5079,\n        5183,\n        108\n    ],\n    [\n        -5149,\n        3079,\n        72\n    ],\n    [\n        -9695,\n        -2048,\n        120\n    ],\n    [\n        -5063,\n        5374,\n        108\n    ],\n    [\n        -9504,\n        -2059,\n        120\n    ],\n    [\n        -8948,\n        -2140,\n        84\n    ],\n    [\n        -9262,\n        -2081,\n        132\n    ],\n    [\n        -9068,\n        -2071,\n        120\n    ],\n    [\n        -8861,\n        -2045,\n        132\n    ],\n    [\n        -8654,\n        -2083,\n        120\n    ],\n    [\n        -8473,\n        -2048,\n        120\n    ],\n    [\n        -8283,\n        -1965,\n        120\n    ],\n    [\n        -8182,\n        -1863,\n        108\n    ],\n    [\n        -10037,\n        -1579,\n        108\n    ],\n    [\n        -10063,\n        -1365,\n        108\n    ],\n    [\n        -10074,\n        -1190,\n        108\n    ],\n    [\n        -8167,\n        -1225,\n        60\n    ],\n    [\n        -8188,\n        -1087,\n        96\n    ],\n    [\n        -9975,\n        -1022,\n        108\n    ],\n    [\n        -9835,\n        -910,\n        120\n    ],\n    [\n        -9709,\n        -848,\n        120\n    ],\n    [\n        -9532,\n        -792,\n        120\n    ],\n    [\n        -9348,\n        -779,\n        120\n    ],\n    [\n        -9131,\n        -784,\n        132\n    ],\n    [\n        -8754,\n        -795,\n        84\n    ],\n    [\n        -8587,\n        -797,\n        120\n    ],\n    [\n        -8424,\n        -856,\n        108\n    ],\n    [\n        -8246,\n        -921,\n        108\n    ],\n    [\n        -8153,\n        -1701,\n        84\n    ],\n    [\n        -6447,\n        -2137,\n        72\n    ],\n    [\n        -8153,\n        -1591,\n        60\n    ],\n    [\n        -7694,\n        -1393,\n        120\n    ],\n    [\n        -6541,\n        -2030,\n        84\n    ],\n    [\n        -7135,\n        -1547,\n        84\n    ],\n    [\n        -5885,\n        -2958,\n        72\n    ],\n    [\n        -7171,\n        -1440,\n        96\n    ],\n    [\n        -5620,\n        -3123,\n        72\n    ],\n    [\n        -6631,\n        -1866,\n        96\n    ],\n    [\n        -5882,\n        -3696,\n        96\n    ],\n    [\n        -5716,\n        -2944,\n        108\n    ],\n    [\n        -5949,\n        -3528,\n        60\n    ],\n    [\n        -6869,\n        -4052,\n        96\n    ],\n    [\n        -7081,\n        -2673,\n        60\n    ],\n    [\n        -6725,\n        -4069,\n        72\n    ],\n    [\n        -10487,\n        -2295,\n        60\n    ],\n    [\n        -7032,\n        -2749,\n        72\n    ],\n    [\n        -10769,\n        -3817,\n        72\n    ],\n    [\n        -6607,\n        -4081,\n        60\n    ],\n    [\n        -10849,\n        -1824,\n        84\n    ],\n    [\n        -10479,\n        -2146,\n        108\n    ],\n    [\n        -7003,\n        -2611,\n        108\n    ],\n    [\n        -10749,\n        -1511,\n        72\n    ],\n    [\n        -10697,\n        -1953,\n        120\n    ],\n    [\n        -10848,\n        -1330,\n        108\n    ],\n    [\n        -10912,\n        -1220,\n        60\n    ],\n    [\n        -9843,\n        -2685,\n        84\n    ],\n    [\n        -10823,\n        -3717,\n        84\n    ],\n    [\n        -9697,\n        -2713,\n        72\n    ],\n    [\n        -10080,\n        -3431,\n        48\n    ],\n    [\n        -10648,\n        -3844,\n        108\n    ],\n    [\n        -9530,\n        -2695,\n        120\n    ],\n    [\n        -2387,\n        -6791,\n        108\n    ],\n    [\n        -8465,\n        -5037,\n        84\n    ],\n    [\n        -2550,\n        -6627,\n        108\n    ],\n    [\n        -9325,\n        -2822,\n        84\n    ],\n    [\n        -10140,\n        -3346,\n        96\n    ],\n    [\n        -8461,\n        -4908,\n        108\n    ],\n    [\n        8116,\n        -1076,\n        96\n    ],\n    [\n        8115,\n        -940,\n        96\n    ],\n    [\n        -2503,\n        -6359,\n        168\n    ],\n    [\n        -9062,\n        -1580,\n        96\n    ],\n    [\n        8120,\n        -790,\n        96\n    ],\n    [\n        -9065,\n        -1444,\n        96\n    ],\n    [\n        -2615,\n        -6159,\n        120\n    ],\n    [\n        -2744,\n        -5943,\n        132\n    ],\n    [\n        -3713,\n        -4955,\n        108\n    ],\n    [\n        -9061,\n        -1292,\n        96\n    ],\n    [\n        -1551,\n        -4718,\n        60\n    ],\n    [\n        5251,\n        -6249,\n        60\n    ],\n    [\n        5192,\n        -6181,\n        48\n    ],\n    [\n        -2898,\n        -5732,\n        108\n    ],\n    [\n        -1705,\n        -4629,\n        96\n    ],\n    [\n        1618,\n        -7035,\n        60\n    ],\n    [\n        -3829,\n        -4776,\n        108\n    ],\n    [\n        -2851,\n        -5589,\n        132\n    ],\n    [\n        -2974,\n        -5399,\n        132\n    ],\n    [\n        -3952,\n        -4568,\n        108\n    ],\n    [\n        -4135,\n        -4368,\n        132\n    ],\n    [\n        -3428,\n        -5104,\n        132\n    ],\n    [\n        -3167,\n        -5254,\n        108\n    ],\n    [\n        -3049,\n        -6916,\n        120\n    ],\n    [\n        -3097,\n        -6722,\n        108\n    ],\n    [\n        -3190,\n        -6493,\n        120\n    ],\n    [\n        -3318,\n        -6284,\n        132\n    ],\n    [\n        -4672,\n        -5861,\n        132\n    ],\n    [\n        -4480,\n        -5668,\n        120\n    ],\n    [\n        -4294,\n        -5548,\n        108\n    ],\n    [\n        -3433,\n        -6072,\n        120\n    ],\n    [\n        -3568,\n        -5881,\n        120\n    ],\n    [\n        -3736,\n        -5698,\n        144\n    ],\n    [\n        -3978,\n        -7517,\n        108\n    ],\n    [\n        -3956,\n        -5572,\n        120\n    ],\n    [\n        -4103,\n        -5400,\n        120\n    ],\n    [\n        -4281,\n        -5240,\n        120\n    ],\n    [\n        -4409,\n        -5034,\n        120\n    ],\n    [\n        -4475,\n        -4808,\n        108\n    ],\n    [\n        -2777,\n        -7546,\n        120\n    ],\n    [\n        -2542,\n        -7502,\n        108\n    ],\n    [\n        -2398,\n        -7364,\n        108\n    ],\n    [\n        -2350,\n        -7151,\n        108\n    ],\n    [\n        -2315,\n        -6976,\n        96\n    ],\n    [\n        -3749,\n        -7488,\n        120\n    ],\n    [\n        -2995,\n        -7596,\n        144\n    ],\n    [\n        -3253,\n        -7558,\n        132\n    ],\n    [\n        -3468,\n        -7472,\n        120\n    ],\n    [\n        -5028,\n        -6473,\n        120\n    ],\n    [\n        -3604,\n        -7301,\n        132\n    ],\n    [\n        -3678,\n        -7078,\n        132\n    ],\n    [\n        -3835,\n        -6826,\n        132\n    ],\n    [\n        -3935,\n        -6595,\n        120\n    ],\n    [\n        -5214,\n        -7381,\n        120\n    ],\n    [\n        -4065,\n        -6416,\n        132\n    ],\n    [\n        -4174,\n        -6231,\n        84\n    ],\n    [\n        -4556,\n        -6940,\n        120\n    ],\n    [\n        -4663,\n        -6781,\n        120\n    ],\n    [\n        -4748,\n        -6548,\n        156\n    ],\n    [\n        -4847,\n        -6257,\n        132\n    ],\n    [\n        -4806,\n        -6016,\n        108\n    ],\n    [\n        -4950,\n        -7410,\n        168\n    ],\n    [\n        -5470,\n        -7251,\n        156\n    ],\n    [\n        -5637,\n        -7038,\n        120\n    ],\n    [\n        -5593,\n        -6819,\n        120\n    ],\n    [\n        -5406,\n        -6727,\n        120\n    ],\n    [\n        -5263,\n        -6580,\n        120\n    ],\n    [\n        -4636,\n        -7476,\n        120\n    ],\n    [\n        -4399,\n        -7496,\n        108\n    ],\n    [\n        -6769,\n        -7571,\n        108\n    ],\n    [\n        -6853,\n        -7377,\n        108\n    ],\n    [\n        -8273,\n        -7231,\n        60\n    ],\n    [\n        -4182,\n        -7512,\n        108\n    ],\n    [\n        -7525,\n        -5855,\n        108\n    ],\n    [\n        -7495,\n        -6329,\n        60\n    ],\n    [\n        -7297,\n        -6946,\n        108\n    ],\n    [\n        -8148,\n        -7137,\n        84\n    ],\n    [\n        -7030,\n        -7301,\n        84\n    ]\n];\n\n\n\nconst $a6571f70560d3626$var$sizes = [];\nclass $a6571f70560d3626$export$d77a2bc8f6628f42 {\n    constructor(_width, _height){\n        this._width = _width;\n        this._height = _height;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    static getSize(type) {\n        return $a6571f70560d3626$var$sizes[type];\n    }\n}\nfor (const shipType of [\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).PREDATOR,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).GOLIATH,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).COPTER,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).TORNADO,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).PROWLER\n]){\n    const hitCircles = (0, $ad11f6fc34bb1cfa$export$de794ad9b3d6afb7)[shipType].collisions;\n    let leftX = 999;\n    let rightX = 0;\n    let topY = 999;\n    let bottomY = 0;\n    for (const circle of hitCircles){\n        const x = circle[0];\n        const y = circle[1];\n        const r = circle[2];\n        if (x - r < leftX) leftX = x - r;\n        if (x + r > rightX) rightX = x + r;\n        if (y - r < topY) topY = y - r;\n        if (y + r > bottomY) bottomY = y + r;\n    }\n    const shipWidth = rightX - leftX;\n    const shipHeight = bottomY - topY;\n    const size = new $a6571f70560d3626$export$d77a2bc8f6628f42(shipWidth, shipHeight);\n    $a6571f70560d3626$var$sizes[shipType] = size;\n}\n\n\nconst $ca76cabc7d32feff$var$HIGH_RES = 10;\nconst $ca76cabc7d32feff$var$LOW_RES = 100;\nconst $ca76cabc7d32feff$var$LOWEST_RES = 500;\n/* tslint:disable:no-bitwise */ function $ca76cabc7d32feff$var$posFrom32bits(bits) {\n    return {\n        x: bits >>> 16,\n        y: bits & 0xFFF\n    };\n}\n/* tslint:enable:no-bitwise */ class $ca76cabc7d32feff$var$ShipAwareMapRepresentation {\n    constructor(scale, shipWidth){\n        this.scale = scale;\n        const mapArray = [\n            []\n        ];\n        for(let y = 0; y < (0, $87af5b1ac654d440$export$fdf35536e9a0700c).HEIGHT / scale; y++){\n            mapArray[y] = [];\n            for(let x = 0; x < (0, $87af5b1ac654d440$export$fdf35536e9a0700c).WIDTH / scale; x++)mapArray[y][x] = 0;\n        }\n        for(let y = 0; y < (0, $87af5b1ac654d440$export$fdf35536e9a0700c).HEIGHT / scale; y++){\n            mapArray[y] = [];\n            for(let x = 0; x < (0, $87af5b1ac654d440$export$fdf35536e9a0700c).WIDTH / scale; x++)mapArray[y][x] = 0;\n        }\n        for (const wall of (0, $35cddcdef3a819e4$export$538e3d9fdc6b7eea)){\n            const pos = this.translateToInternalRepresentation({\n                x: wall[0],\n                y: wall[1]\n            });\n            // add shipwidth / 2 (or a bit more) to the radius to account for the width of the ship in relation to the walls\n            const radius = Math.round((wall[2] + shipWidth * 0.8) / scale);\n            for(let x = pos.x - radius; x < pos.x + radius; x++){\n                const dx = pos.x - x;\n                for(let y = pos.y - radius; y < pos.y + radius; y++){\n                    const dy = pos.y - y;\n                    const distance = Math.sqrt(dx * dx + dy * dy);\n                    if (distance <= radius) mapArray[y][x] = 1;\n                }\n            }\n        }\n        const width = mapArray[0].length;\n        const height = mapArray.length;\n        const buf = $1f555963597ba593$exports.bytesFrom2DArray(width, height, mapArray);\n        this.grid = $1f555963597ba593$exports.buildGrid(width, height, buf);\n    }\n    translateToInternalRepresentation(pos) {\n        return {\n            x: Math.round((pos.x + (0, $87af5b1ac654d440$export$fdf35536e9a0700c).HALF_WIDTH) / this.scale),\n            y: Math.round((pos.y + (0, $87af5b1ac654d440$export$fdf35536e9a0700c).HALF_HEIGHT) / this.scale)\n        };\n    }\n    translateBack(internalPos) {\n        return {\n            x: internalPos.x * this.scale - (0, $87af5b1ac654d440$export$fdf35536e9a0700c).HALF_WIDTH,\n            y: internalPos.y * this.scale - (0, $87af5b1ac654d440$export$fdf35536e9a0700c).HALF_HEIGHT\n        };\n    }\n    getScale() {\n        return this.scale;\n    }\n    findPath(pos1, pos2, pointsToAvoid) {\n        const tpos1 = this.translateToInternalRepresentation(pos1);\n        const tpos2 = this.translateToInternalRepresentation(pos2);\n        const restoreWalkability = [];\n        for (const p of pointsToAvoid){\n            const mapPoint = this.translateToInternalRepresentation(p);\n            for(let x = mapPoint.x - 1; x <= mapPoint.x + 1; x++){\n                for(let y = mapPoint.y - 1; y <= mapPoint.y + 1; y++)if (this.grid.isWalkableAt(x, y)) {\n                    restoreWalkability.push({\n                        x: x,\n                        y: y\n                    });\n                    this.grid.setWalkableAt(x, y, false);\n                }\n            }\n        }\n        const result = [];\n        try {\n            const path = $1f555963597ba593$exports.findPath(tpos1.x, tpos1.y, tpos2.x, tpos2.y, this.grid);\n            if (path) for (const bit of path)result.push(this.translateBack($ca76cabc7d32feff$var$posFrom32bits(bit)));\n        } finally{\n            for (const p of restoreWalkability)this.grid.setWalkableAt(p.x, p.y, true);\n        }\n        return result;\n    }\n}\nconst $ca76cabc7d32feff$export$c71ae647ae0b22b8 = [];\nconst $ca76cabc7d32feff$export$1991dc3812003de4 = [];\nconst $ca76cabc7d32feff$export$7a869ce99deb324e = [];\nconst $ca76cabc7d32feff$var$lowestresMap = new $ca76cabc7d32feff$var$ShipAwareMapRepresentation($ca76cabc7d32feff$var$LOWEST_RES, (0, $a6571f70560d3626$export$d77a2bc8f6628f42).getSize((0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).GOLIATH).width);\nfor (const shipType of [\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).PREDATOR,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).GOLIATH,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).COPTER,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).TORNADO,\n    (0, $ad11f6fc34bb1cfa$export$aa1d7fff11452d37).PROWLER\n]){\n    $ca76cabc7d32feff$export$c71ae647ae0b22b8[shipType] = new $ca76cabc7d32feff$var$ShipAwareMapRepresentation($ca76cabc7d32feff$var$LOW_RES, (0, $a6571f70560d3626$export$d77a2bc8f6628f42).getSize(shipType).width);\n    $ca76cabc7d32feff$export$1991dc3812003de4[shipType] = new $ca76cabc7d32feff$var$ShipAwareMapRepresentation($ca76cabc7d32feff$var$HIGH_RES, (0, $a6571f70560d3626$export$d77a2bc8f6628f42).getSize(shipType).width);\n    $ca76cabc7d32feff$export$7a869ce99deb324e[shipType] = $ca76cabc7d32feff$var$lowestresMap;\n}\n\n\nconst $2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_HIGHRES = 2000;\nconst $2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_LOWRES = 80000;\nclass $2fa72ef06efcb071$export$cd51d8d84d256df6 {\n    static initialize() {\n        // touch one of the maps to trigger initialize\n        const map = (0, $ca76cabc7d32feff$export$c71ae647ae0b22b8)[2];\n        map.getScale();\n    }\n    static findPath(config) {\n        const pos1 = config.pos1;\n        const pos2 = config.pos2;\n        const aircraftType = config.aircraftType;\n        const pointsToAvoid = config.pointsToAvoid;\n        // if window is minimized, player position is unknown\n        if (Math.abs(pos1.x) === (0, $87af5b1ac654d440$export$9000cfdce9ac9444).MAX_X || Math.abs(pos2.x) === (0, $87af5b1ac654d440$export$9000cfdce9ac9444).MAX_X) return {\n            isHighres: false,\n            path: null\n        };\n        // tslint:disable-next-line: no-console\n        // console.log(\"pos: \", pos1.x, pos1.y, \" other: \", pos2.x, pos2.y);\n        let isHighres = false;\n        let map = (0, $ca76cabc7d32feff$export$7a869ce99deb324e)[aircraftType];\n        let path = $2fa72ef06efcb071$export$cd51d8d84d256df6.tryFindPath(map, pos1, pos2, []);\n        if (!path || path.length * map.getScale() < $2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_LOWRES) {\n            map = (0, $ca76cabc7d32feff$export$c71ae647ae0b22b8)[aircraftType];\n            path = $2fa72ef06efcb071$export$cd51d8d84d256df6.tryFindPath(map, pos1, pos2, []);\n        }\n        // switch to highres if possible\n        if (!path || path.length * map.getScale() < $2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_HIGHRES) {\n            map = (0, $ca76cabc7d32feff$export$1991dc3812003de4)[aircraftType];\n            path = $2fa72ef06efcb071$export$cd51d8d84d256df6.tryFindPath(map, pos1, pos2, pointsToAvoid);\n            isHighres = true;\n        } else {\n            // otherwise calc the first segments as highres\n            const segmentLength = Math.round($2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_HIGHRES / 2 / map.getScale());\n            if (path.length >= segmentLength) {\n                const refinedPath = this.tryFindPath((0, $ca76cabc7d32feff$export$1991dc3812003de4)[aircraftType], path[0], path[segmentLength - 1], pointsToAvoid);\n                if (refinedPath) {\n                    refinedPath.push(...path.slice(segmentLength));\n                    path = refinedPath;\n                }\n            }\n        }\n        return {\n            isHighres: isHighres,\n            path: path\n        };\n    }\n    static tryFindPath(map, pos1, pos2, pointsToAvoid) {\n        try {\n            return map.findPath(pos1, pos2, pointsToAvoid);\n        } catch (error) {\n            // tslint:disable-next-line: no-console\n            console.log(\"error finding path\", error);\n            // tslint:disable-next-line: no-console\n            console.log(\"pos: \", pos1.x, pos1.y, \" other: \", pos2.x, pos2.y);\n        }\n    }\n}\n\n\n(0, $2fa72ef06efcb071$export$cd51d8d84d256df6).initialize();\npostMessage(\"ready\");\nonmessage = (e)=>{\n    try {\n        const config = JSON.parse(e.data);\n        const path = (0, $2fa72ef06efcb071$export$cd51d8d84d256df6).findPath(config);\n        postMessage(JSON.stringify(path));\n    } catch (error) {\n        // tslint:disable-next-line: no-console\n        console.log(\"error in worker\", error);\n    }\n};\n\n})();\n//# sourceMappingURL=browser-worker.js.map\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var Grid;\n\n  Grid = (function() {\n    Grid.bytesFrom2DArray = function(width, height, array2d) {\n      var buf, byte, byteIndex, col, index, offset, row, x, y, _i, _j, _len, _len1;\n      if (isNaN(width) || width <= 0 || isNaN(height) || height <= 0 || !Array.isArray(array2d)) {\n        console.log(\"ERROR [grid$::bytesFrom2DArray] bad arguments, width:\" + width + \", height:\" + height + \", array2d:\" + array2d);\n        return null;\n      }\n      buf = new Buffer(Math.ceil(width * height / 8));\n      buf.fill(255);\n      for (y = _i = 0, _len = array2d.length; _i < _len; y = ++_i) {\n        row = array2d[y];\n        for (x = _j = 0, _len1 = row.length; _j < _len1; x = ++_j) {\n          col = row[x];\n          if (!Boolean(col)) {\n            index = y * width + x;\n            byteIndex = index >>> 3;\n            offset = 7 - (index % 8);\n            byte = buf[byteIndex];\n            byte = byte ^ 1 << offset;\n            buf[byteIndex] = byte;\n          }\n        }\n      }\n      return buf;\n    };\n\n    function Grid(width, height, bytes) {\n      this.width = width;\n      this.height = height;\n      this.bytes = bytes;\n      if (!(width > 0 && height > 0 && Buffer.isBuffer(bytes))) {\n        throw new Error(\"bad arguments, width:\" + width + \", height:\" + height + \", bytes:\" + bytes);\n      }\n      if (bytes.length !== Math.ceil(width * height / 8)) {\n        throw new Error(\"bytes length mismatch, width:\" + width + \", height:\" + height + \", bytes.length:\" + bytes.length);\n      }\n    }\n\n    Grid.prototype.isWalkableAt = function(x, y) {\n      var byte, bytePos, index, offset;\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) {\n        return false;\n      }\n      index = y * this.width + x;\n      bytePos = index >>> 3;\n      offset = 7 - index % 8;\n      byte = this.bytes[bytePos];\n      return !Boolean(byte >>> offset & 1);\n    };\n\n    Grid.prototype.setWalkableAt = function(x, y, walkable) {\n      var byte, bytePos, index, offset;\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) {\n        return false;\n      }\n      index = y * this.width + x;\n      bytePos = index >>> 3;\n      offset = 7 - index % 8;\n      byte = this.bytes[bytePos];\n      if (walkable !== this.isWalkableAt(x, y)) {\n        return this.bytes[bytePos] = byte ^ 1 << offset;\n      }\n    };\n\n    Grid.prototype.getNeighbors = function(x, y, allowDiagonal, dontCrossCorners) {\n      var d0, d1, d2, d3, neighbors, s0, s1, s2, s3;\n      if (allowDiagonal == null) {\n        allowDiagonal = false;\n      }\n      if (dontCrossCorners == null) {\n        dontCrossCorners = false;\n      }\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) {\n        return null;\n      }\n      neighbors = [];\n      if (this.isWalkableAt(x, y - 1)) {\n        neighbors.push(x << 16 | (y - 1));\n        s0 = true;\n      }\n      if (this.isWalkableAt(x + 1, y)) {\n        neighbors.push((x + 1) << 16 | y);\n        s1 = true;\n      }\n      if (this.isWalkableAt(x, y + 1)) {\n        neighbors.push(x << 16 | (y + 1));\n        s2 = true;\n      }\n      if (this.isWalkableAt(x - 1, y)) {\n        neighbors.push((x - 1) << 16 | y);\n        s3 = true;\n      }\n      if (!allowDiagonal) {\n        return neighbors;\n      }\n      if (dontCrossCorners) {\n        d0 = s3 && s0;\n        d1 = s0 && s1;\n        d2 = s1 && s2;\n        d3 = s2 && s3;\n      } else {\n        d0 = s3 || s0;\n        d1 = s0 || s1;\n        d2 = s1 || s2;\n        d3 = s2 || s3;\n      }\n      if (d0 && this.isWalkableAt(x - 1, y - 1)) {\n        neighbors.push((x - 1) << 16 | (y - 1));\n      }\n      if (d1 && this.isWalkableAt(x + 1, y - 1)) {\n        neighbors.push((x + 1) << 16 | (y - 1));\n      }\n      if (d2 && this.isWalkableAt(x + 1, y + 1)) {\n        neighbors.push((x + 1) << 16 | (y + 1));\n      }\n      if (d3 && this.isWalkableAt(x - 1, y + 1)) {\n        neighbors.push((x - 1) << 16 | (y + 1));\n      }\n      return neighbors;\n    };\n\n    Grid.prototype.getARandomWalkableBrick = function() {\n      var x, y;\n      while (true) {\n        x = (Math.random() * this.width) >>> 0;\n        y = (Math.random() * this.height) >>> 0;\n        if (this.isWalkableAt(x, y)) {\n          return x << 16 | y;\n        }\n      }\n    };\n\n    Grid.prototype.toString = function(startLoc, endLoc, path) {\n      var arr, brickLoc, i, markpoints, result, x, y, _i, _j, _k, _len, _ref, _ref1;\n      markpoints = {};\n      if (Array.isArray(path)) {\n        for (i = _i = 0, _len = path.length; _i < _len; i = ++_i) {\n          brickLoc = path[i];\n          markpoints[brickLoc] = i % 10;\n        }\n      }\n      if (!isNaN(startLoc)) {\n        markpoints[startLoc] = \"S\";\n      }\n      if (!isNaN(endLoc)) {\n        markpoints[endLoc] = \"E\";\n      }\n      result = \"[Grid(width=\" + this.width + \", height=\" + this.height + \")]\\nDump: ░=walkable, ▓=blocked\";\n      for (y = _j = 0, _ref = this.height; _j < _ref; y = _j += 1) {\n        arr = [];\n        for (x = _k = 0, _ref1 = this.width; _k < _ref1; x = _k += 1) {\n          if (markpoints[x << 16 | y] !== void 0) {\n            arr.push(markpoints[x << 16 | y]);\n          } else {\n            arr.push(this.isWalkableAt(x, y) ? \"░\" : \"▓\");\n          }\n        }\n        result = result + (\"\\n\" + (arr.join('')));\n      }\n      return result;\n    };\n\n    return Grid;\n\n  })();\n\n  module.exports = Grid;\n\n}).call(this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var Heap, SQRT2, backtrace, endLoc, grid, heuristic, locToClosed, locToF, locToG, locToH, locToOpen, locToParent, openList, startLoc, syncfinder_astar;\n\n  Heap = require(\"./heap\");\n\n  openList = new Heap();\n\n  startLoc = 0;\n\n  endLoc = 0;\n\n  grid = null;\n\n  locToClosed = null;\n\n  locToOpen = null;\n\n  locToG = null;\n\n  locToH = null;\n\n  locToF = null;\n\n  locToParent = null;\n\n  SQRT2 = Math.SQRT2;\n\n  heuristic = function(dx, dy) {\n    return dx + dy;\n  };\n\n  backtrace = function(node) {\n    var path;\n    path = [];\n    path.push(node);\n    while (locToParent[node]) {\n      node = locToParent[node];\n      path.unshift(node);\n    }\n    return path;\n  };\n\n  syncfinder_astar = {\n    findPathByBrickLoc: function(start, end, theGrid) {\n      return syncfinder_astar.findPath(start >>> 16, start & 0xffff, end >>> 16, end & 0xffff, theGrid);\n    },\n    findPath: function(startX, startY, endX, endY, theGrid, allowDiagonal, dontCrossCorners) {\n      var neighbor, neighborNode, neighbors, ng, node, nodeX, nodeY, x, y, _i, _len;\n      if (allowDiagonal == null) {\n        allowDiagonal = false;\n      }\n      if (dontCrossCorners == null) {\n        dontCrossCorners = false;\n      }\n      if (isNaN(startX) || startX < 0 || isNaN(startY) || startY < 0 || isNaN(endX) || endX < 0 || isNaN(endY) || endY < 0 || !theGrid) {\n        console.log(\"ERROR [syncfinder_astar::findPath] bad arguments, startX:\" + startX + \", startY:\" + startY + \", endX:\" + endX + \", endY:\" + endY + \", theGrid:\" + theGrid);\n        return null;\n      }\n      startLoc = startX << 16 | startY;\n      endLoc = endX << 16 | endY;\n      grid = theGrid;\n      locToClosed = {};\n      locToOpen = {};\n      locToG = {};\n      locToF = {};\n      locToH = {};\n      locToParent = {};\n      locToG[startLoc] = 0;\n      locToF[startLoc] = 0;\n      openList.reset(locToF);\n      openList.push(startLoc);\n      locToOpen[startLoc] = true;\n      while (openList.isNotEmpty()) {\n        node = openList.pop();\n        locToClosed[node] = true;\n        if (node === endLoc) {\n          return backtrace(node);\n        }\n        nodeX = node >>> 16;\n        nodeY = node & 0xffff;\n        neighbors = grid.getNeighbors(nodeX, nodeY, allowDiagonal, dontCrossCorners);\n        for (_i = 0, _len = neighbors.length; _i < _len; _i++) {\n          neighbor = neighbors[_i];\n          if (locToClosed[neighbor]) {\n            continue;\n          }\n          x = neighbor >>> 16;\n          y = neighbor & 0xffff;\n          ng = locToG[node] + (x === nodeX || y === nodeY ? 1 : SQRT2);\n          if ((!locToOpen[neighbor]) || (ng < locToG[neighbor])) {\n            locToG[neighbor] = ng;\n            locToH[neighbor] = locToH[neighbor] || heuristic(Math.abs(x - endX), Math.abs(y - endY));\n            locToF[neighbor] = locToG[neighbor] + locToH[neighbor];\n            neighborNode = x << 16 | y;\n            locToParent[neighborNode] = node;\n            if (!locToOpen[neighbor]) {\n              openList.push(neighborNode);\n              locToOpen[neighbor] = true;\n            } else {\n              openList.updateItem(neighborNode);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  };\n\n  module.exports = syncfinder_astar;\n\n}).call(this);\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var Heap;\n\n  Heap = (function() {\n    function Heap(locToF) {\n      this.locToF = locToF;\n      this.nodes = [];\n    }\n\n    Heap.prototype.isNotEmpty = function() {\n      return this.nodes.length > 0;\n    };\n\n    Heap.prototype._siftdown = function(startPos, pos) {\n      var newNode, parentNode, parentpos;\n      newNode = this.nodes[pos];\n      while (pos > startPos) {\n        parentpos = (pos - 1) >>> 1;\n        parentNode = this.nodes[parentpos];\n        if (this.locToF[newNode] < this.locToF[parentNode]) {\n          this.nodes[pos] = parentNode;\n          pos = parentpos;\n          continue;\n        }\n        break;\n      }\n      this.nodes[pos] = newNode;\n    };\n\n    Heap.prototype._siftup = function(pos) {\n      var childPos, endPos, newNode, rightPos, startPos;\n      endPos = this.nodes.length;\n      startPos = pos;\n      newNode = this.nodes[pos];\n      childPos = (pos << 1) + 1;\n      while (childPos < endPos) {\n        rightPos = childPos + 1;\n        if (rightPos < endPos && (this.locToF[this.nodes[childPos]] > this.locToF[this.nodes[rightPos]])) {\n          childPos = rightPos;\n        }\n        this.nodes[pos] = this.nodes[childPos];\n        pos = childPos;\n        childPos = (pos << 1) + 1;\n      }\n      this.nodes[pos] = newNode;\n      this._siftdown(startPos, pos);\n    };\n\n    Heap.prototype.updateItem = function(node) {\n      var pos;\n      pos = this.nodes.indexOf(node);\n      if (pos < 0) {\n        return;\n      }\n      this._siftdown(0, pos);\n      this._siftup(pos);\n    };\n\n    Heap.prototype.push = function(node) {\n      this.nodes.push(node);\n      return this._siftdown(0, this.nodes.length - 1);\n    };\n\n    Heap.prototype.pop = function() {\n      var lastelt, returnitem;\n      lastelt = this.nodes.pop();\n      if (this.nodes.length) {\n        returnitem = this.nodes[0];\n        this.nodes[0] = lastelt;\n        this._siftup(0);\n      } else {\n        return lastelt;\n      }\n      return returnitem;\n    };\n\n    Heap.prototype.reset = function(locToF) {\n      this.nodes.length = 0;\n      this.locToF = locToF;\n    };\n\n    return Heap;\n\n  })();\n\n  module.exports = Heap;\n\n}).call(this);\n","import { IFindPathConfig } from \"./botting/ifindpath-config\";\r\nimport { PathFinding } from \"./botting/path-finding\";\r\n\r\ndeclare function postMessage(x: any): any;\r\n\r\nPathFinding.initialize();\r\n\r\npostMessage(\"ready\");\r\n\r\nonmessage = e => {\r\n    try {\r\n        const config = JSON.parse(e.data) as IFindPathConfig;\r\n        const path = PathFinding.findPath(config);\r\n\r\n        postMessage(JSON.stringify(path));\r\n    } catch (error) {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\"error in worker\", error);\r\n    }\r\n};\r\n","import { PLAYERS_POSITION } from \"../ab-assets/map-constants\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { IFindPathConfig } from \"./ifindpath-config\";\r\nimport { IShipAwareMapRepresentation } from \"./ishipaware-maprepresentation\";\r\nimport { highresAircraftMaps, lowestresMaps, lowresAircraftMaps } from \"./maprepresentation\";\r\n\r\nconst PATH_LENGTH_THRESHOLD_FOR_HIGHRES = 2000;\r\nconst PATH_LENGTH_THRESHOLD_FOR_LOWRES = 80000;\r\n\r\ninterface ICalculatedPath {\r\n    isHighres: boolean;\r\n    path: IPos[];\r\n}\r\n\r\nexport class PathFinding {\r\n\r\n    public static initialize() {\r\n        // touch one of the maps to trigger initialize\r\n        const map = lowresAircraftMaps[2];\r\n        map.getScale();\r\n    }\r\n\r\n    public static findPath(config: IFindPathConfig): ICalculatedPath {\r\n        const pos1 = config.pos1;\r\n        const pos2 = config.pos2;\r\n        const aircraftType = config.aircraftType;\r\n        const pointsToAvoid = config.pointsToAvoid;\r\n\r\n        // if window is minimized, player position is unknown\r\n        if (Math.abs(pos1.x) === PLAYERS_POSITION.MAX_X || Math.abs(pos2.x) === PLAYERS_POSITION.MAX_X) {\r\n            return {\r\n                isHighres: false,\r\n                path: null\r\n            };\r\n        }\r\n\r\n        // tslint:disable-next-line: no-console\r\n        // console.log(\"pos: \", pos1.x, pos1.y, \" other: \", pos2.x, pos2.y);\r\n\r\n        let isHighres = false;\r\n\r\n        let map = lowestresMaps[aircraftType]\r\n        let path = PathFinding.tryFindPath(map, pos1, pos2, []);\r\n        if (!path || path.length * map.getScale() < PATH_LENGTH_THRESHOLD_FOR_LOWRES) {\r\n            map = lowresAircraftMaps[aircraftType];\r\n            path = PathFinding.tryFindPath(map, pos1, pos2, []);\r\n        }\r\n\r\n        // switch to highres if possible\r\n        if (!path || path.length * map.getScale() < PATH_LENGTH_THRESHOLD_FOR_HIGHRES) {\r\n            map = highresAircraftMaps[aircraftType];\r\n            path = PathFinding.tryFindPath(map, pos1, pos2, pointsToAvoid);\r\n            isHighres = true;\r\n        } else {\r\n            // otherwise calc the first segments as highres\r\n            const segmentLength = Math.round((PATH_LENGTH_THRESHOLD_FOR_HIGHRES / 2) / map.getScale());\r\n            if (path.length >= segmentLength) {\r\n                const refinedPath = this.tryFindPath(highresAircraftMaps[aircraftType], path[0], path[segmentLength - 1], pointsToAvoid);\r\n                if (refinedPath) {\r\n                    refinedPath.push(...path.slice(segmentLength));\r\n                    path = refinedPath;\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            isHighres,\r\n            path\r\n        }\r\n    }\r\n\r\n    private static tryFindPath(map: IShipAwareMapRepresentation, pos1: IPos, pos2: IPos, pointsToAvoid: IPos[]) {\r\n        try {\r\n            return map.findPath(pos1, pos2, pointsToAvoid);\r\n        } catch (error) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(\"error finding path\", error);\r\n            // tslint:disable-next-line: no-console\r\n            console.log(\"pos: \", pos1.x, pos1.y, \" other: \", pos2.x, pos2.y);\r\n        }\r\n    }\r\n}\r\n\r\n","// this file is a partial copy of ab-server\\src\\constants\\collisions.ts and players.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nexport const MAP_SIZE = {\r\n    WIDTH: 32768,\r\n    HEIGHT: 16384,\r\n\r\n    HALF_WIDTH: 32768 / 2,\r\n    HALF_HEIGHT: 16384 / 2,\r\n};\r\n\r\nexport const MAP_COORDS = {\r\n    MIN_X: -MAP_SIZE.WIDTH / 2,\r\n    MIN_Y: -MAP_SIZE.HEIGHT / 2,\r\n    MAX_X: MAP_SIZE.WIDTH / 2,\r\n    MAX_Y: MAP_SIZE.HEIGHT / 2,\r\n};\r\n\r\nexport const PLAYERS_POSITION = {\r\n    MIN_X: -16352,\r\n    MIN_Y: -8160,\r\n\r\n    MAX_X: 16352,\r\n    MAX_Y: 8160,\r\n};","import * as pathfinding from \"node-pathfinding\";\r\nimport { MAP_SIZE } from \"../ab-assets/map-constants\";\r\nimport { SHIPS_SPECS, SHIPS_TYPES } from \"../ab-assets/ships-constants\";\r\nimport { abWalls } from \"../ab-assets/walls\";\r\nimport { IPos } from \"../models/ipos\";\r\nimport { AircraftSize } from \"./aircraft-size\";\r\nimport { IShipAwareMapRepresentation } from \"./ishipaware-maprepresentation\";\r\n\r\nconst HIGH_RES = 10;\r\nconst LOW_RES = 100;\r\nconst LOWEST_RES = 500;\r\n\r\n/* tslint:disable:no-bitwise */\r\nfunction posFrom32bits(bits: number): IPos {\r\n    return { x: bits >>> 16, y: bits & 0xFFF };\r\n}\r\n/* tslint:enable:no-bitwise */\r\n\r\nclass ShipAwareMapRepresentation implements IShipAwareMapRepresentation {\r\n    private grid: any;\r\n\r\n    constructor(private scale: number, shipWidth: number) {\r\n\r\n        const mapArray: number[][] = [[]];\r\n\r\n        for (let y = 0; y < MAP_SIZE.HEIGHT / scale; y++) {\r\n            mapArray[y] = [];\r\n            for (let x = 0; x < MAP_SIZE.WIDTH / scale; x++) {\r\n                mapArray[y][x] = 0;\r\n            }\r\n        }\r\n        for (let y = 0; y < MAP_SIZE.HEIGHT / scale; y++) {\r\n            mapArray[y] = [];\r\n            for (let x = 0; x < MAP_SIZE.WIDTH / scale; x++) {\r\n                mapArray[y][x] = 0;\r\n            }\r\n        }\r\n\r\n        for (const wall of abWalls) {\r\n            const pos = this.translateToInternalRepresentation({ x: wall[0], y: wall[1] });\r\n\r\n            // add shipwidth / 2 (or a bit more) to the radius to account for the width of the ship in relation to the walls\r\n            const radius = Math.round((wall[2] + shipWidth * 0.8) / scale);\r\n\r\n            for (let x = pos.x - radius; x < pos.x + radius; x++) {\r\n                const dx = pos.x - x;\r\n                for (let y = pos.y - radius; y < pos.y + radius; y++) {\r\n                    const dy = pos.y - y;\r\n                    const distance = Math.sqrt(dx * dx + dy * dy);\r\n                    if (distance <= radius) {\r\n                        mapArray[y][x] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const width = mapArray[0].length;\r\n        const height = mapArray.length;\r\n\r\n        const buf = pathfinding.bytesFrom2DArray(width, height, mapArray);\r\n        this.grid = pathfinding.buildGrid(width, height, buf);\r\n    }\r\n\r\n    private translateToInternalRepresentation(pos: IPos): IPos {\r\n        return {\r\n            x: Math.round((pos.x + MAP_SIZE.HALF_WIDTH) / this.scale),\r\n            y: Math.round((pos.y + MAP_SIZE.HALF_HEIGHT) / this.scale),\r\n        };\r\n    }\r\n\r\n    private translateBack(internalPos: IPos): IPos {\r\n        return {\r\n            x: internalPos.x * this.scale - MAP_SIZE.HALF_WIDTH,\r\n            y: internalPos.y * this.scale - MAP_SIZE.HALF_HEIGHT\r\n        };\r\n    }\r\n\r\n    public getScale(): number {\r\n        return this.scale;\r\n    }\r\n\r\n    public findPath(pos1: IPos, pos2: IPos, pointsToAvoid: IPos[]): IPos[] {\r\n        const tpos1 = this.translateToInternalRepresentation(pos1);\r\n        const tpos2 = this.translateToInternalRepresentation(pos2);\r\n\r\n        const restoreWalkability: IPos[] = [];\r\n        for (const p of pointsToAvoid) {\r\n            const mapPoint = this.translateToInternalRepresentation(p);\r\n            for (let x = mapPoint.x - 1; x <= mapPoint.x + 1; x++) {\r\n                for (let y = mapPoint.y - 1; y <= mapPoint.y + 1; y++) {\r\n                    if (this.grid.isWalkableAt(x, y)) {\r\n                        restoreWalkability.push({x, y});\r\n                        this.grid.setWalkableAt(x, y, false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const result: IPos[] = [];\r\n\r\n        try {\r\n            const path = pathfinding.findPath(tpos1.x, tpos1.y, tpos2.x, tpos2.y, this.grid);\r\n\r\n            if (path) {\r\n                for (const bit of path) {\r\n                    result.push(this.translateBack(posFrom32bits(bit)));\r\n                }\r\n            }\r\n        } finally {\r\n            for (const p of restoreWalkability) {\r\n                this.grid.setWalkableAt(p.x, p.y, true);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nconst lowresAircraftMaps: IShipAwareMapRepresentation[] = [];\r\nconst highresAircraftMaps: IShipAwareMapRepresentation[] = [];\r\nconst lowestresMaps: IShipAwareMapRepresentation[] = [];\r\n\r\nconst lowestresMap = new ShipAwareMapRepresentation(LOWEST_RES, AircraftSize.getSize(SHIPS_TYPES.GOLIATH).width);\r\n\r\nfor (const shipType of [SHIPS_TYPES.PREDATOR, SHIPS_TYPES.GOLIATH, SHIPS_TYPES.COPTER, SHIPS_TYPES.TORNADO, SHIPS_TYPES.PROWLER]) {\r\n    lowresAircraftMaps[shipType] = new ShipAwareMapRepresentation(LOW_RES, AircraftSize.getSize(shipType).width);\r\n    highresAircraftMaps[shipType] = new ShipAwareMapRepresentation(HIGH_RES, AircraftSize.getSize(shipType).width);\r\n    lowestresMaps[shipType] = lowestresMap;\r\n}\r\n\r\nexport { lowestresMaps, lowresAircraftMaps, highresAircraftMaps }","Grid = require(\"./lib/grid\");\nsyncfinder_astar = require(\"./lib/syncfinder_astar.js\");\n\n\nmodule.exports = {\n\n  bytesFrom2DArray : Grid.bytesFrom2DArray ,\n  findPath : syncfinder_astar.findPath,\n  findPathByBrickLoc: syncfinder_astar.findPathByBrickLoc,\n  buildGrid : function(width, height, buf)\n  {\n    return new Grid(width, height, buf)\n  }\n\n}\n\n\n\n","// this file is a copy of ab-server\\src\\constants\\ships.ts\r\n/* tslint:disable */ // rules are different\r\n\r\nimport { MOB_TYPES } from \"../ab-protocol/src/lib\";\r\n\r\nexport const SHIPS_TYPES = {\r\n  PREDATOR: 1,\r\n  GOLIATH: 2,\r\n  COPTER: 3,\r\n  TORNADO: 4,\r\n  PROWLER: 5,\r\n};\r\n\r\nexport const SHIPS_FIRE_MODES = {\r\n  FIRE: 'fire',\r\n  INFERNO: 'infernoFire',\r\n};\r\n\r\nexport const SHIPS_FIRE_TYPES = {\r\n  DEFAULT: 'default',\r\n  SPECIAL: 'special',\r\n};\r\n\r\nexport const SHIPS_ENCLOSE_RADIUS = {\r\n  PREDATOR: 32,\r\n  GOLIATH: 88,\r\n  COPTER: 34,\r\n  TORNADO: 38,\r\n  PROWLER: 36,\r\n};\r\n\r\nconst missileTemplate = (type: number, x: number, y: number, rot: number, alt = false): object => {\r\n  return {\r\n    type,\r\n    x,\r\n    y,\r\n    rot,\r\n    alt,\r\n  };\r\n};\r\n\r\nconst missileFireTemplate = (def: any = [], special: any = []): any => {\r\n  return {\r\n    [SHIPS_FIRE_TYPES.DEFAULT]: def,\r\n    [SHIPS_FIRE_TYPES.SPECIAL]: special,\r\n  };\r\n};\r\n\r\nexport const SHIPS_SPECS = {\r\n  [SHIPS_TYPES.PREDATOR]: {\r\n    name: 'raptor',\r\n\r\n    turnFactor: 0.065,\r\n    accelFactor: 0.225,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1.5,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 5.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.008,\r\n    fireEnergy: 0.6,\r\n    specialEnergy: 0,\r\n    specialEnergyRegen: -0.01,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 550, // ms.\r\n    damageFactor: 2,\r\n    energyLight: 0.6,\r\n\r\n    collisions: [[0, 5, 23], [0, -15, 15], [0, -25, 12]],\r\n\r\n    repelEnergy: 2100,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, -20, 5, -0.05),\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.PREDATOR_MISSILE, 20, 5, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.GOLIATH]: {\r\n    name: 'spirit',\r\n\r\n    turnFactor: 0.04,\r\n    accelFactor: 0.15,\r\n    brakeFactor: 0.015,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 3.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.0005,\r\n    energyRegen: 0.005,\r\n    fireEnergy: 0.9,\r\n    specialEnergy: 0.5,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 1000,\r\n\r\n    fireDelay: 300, // ms.\r\n    damageFactor: 1,\r\n    energyLight: 0.9,\r\n\r\n    collisions: [\r\n      [0, 0, 35],\r\n      [50, 14, 16],\r\n      [74, 26, 14],\r\n      [30, 8, 23],\r\n      [63, 22, 15],\r\n      [-50, 14, 16],\r\n      [-74, 26, 14],\r\n      [-30, 8, 23],\r\n      [-63, 22, 15],\r\n    ],\r\n\r\n    repelEnergy: 7500,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, -30, 0, -0.05),\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.GOLIATH_MISSILE, 30, 0, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.COPTER]: {\r\n    name: 'mohawk',\r\n\r\n    turnFactor: 0.07,\r\n    accelFactor: 0.275,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 6,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.01,\r\n    fireEnergy: 0.3,\r\n    specialEnergy: 0,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 300,\r\n    damageFactor: 2.78,\r\n    energyLight: 0.3,\r\n\r\n    collisions: [[0, -12, 15], [0, 0, 17], [0, 13, 15], [0, 26, 15]],\r\n\r\n    repelEnergy: 1800,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 15, 10, 0, true),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, -10, 5, -0.05),\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 0, 10, 0),\r\n      missileTemplate(MOB_TYPES.COPTER_MISSILE, 10, 5, 0.05),\r\n    ]),\r\n  },\r\n\r\n  [SHIPS_TYPES.TORNADO]: {\r\n    name: 'tornado',\r\n\r\n    turnFactor: 0.055,\r\n    accelFactor: 0.2,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 4.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.006,\r\n    fireEnergy: 0.5,\r\n    specialEnergy: 0.9,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 0,\r\n\r\n    fireDelay: 500,\r\n    damageFactor: 5 / 3,\r\n    energyLight: 0.5,\r\n\r\n    collisions: [[0, 8, 18], [14, 12, 13], [-14, 12, 13], [0, -12, 16], [0, -26, 14], [0, -35, 12]],\r\n\r\n    repelEnergy: 2400,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate(\r\n      [missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0)],\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, -15, 10, -0.05),\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_SMALL_MISSILE, 15, 10, 0.05),\r\n      ]\r\n    ),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate(\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -15, 10, -0.05),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 15, 10, 0.05),\r\n      ],\r\n      [\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -30, 20, -0.06),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, -20, 15, -0.03),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 0, 40, 0),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 20, 15, 0.03),\r\n        missileTemplate(MOB_TYPES.TORNADO_MISSILE, 30, 20, 0.06),\r\n      ]\r\n    ),\r\n  },\r\n\r\n  [SHIPS_TYPES.PROWLER]: {\r\n    name: 'prowler',\r\n\r\n    turnFactor: 0.055,\r\n    accelFactor: 0.2,\r\n    brakeFactor: 0.025,\r\n    boostFactor: 1,\r\n    infernoFactor: 0.75,\r\n\r\n    maxSpeed: 4.5,\r\n    minSpeed: 0.001,\r\n    flagSpeed: 5,\r\n\r\n    healthRegen: 0.001,\r\n    energyRegen: 0.006,\r\n    fireEnergy: 0.75,\r\n    specialEnergy: 0.6,\r\n    specialEnergyRegen: 0,\r\n    specialDelay: 1500,\r\n\r\n    damageFactor: 5 / 3,\r\n    fireDelay: 300,\r\n    energyLight: 0.75,\r\n\r\n    collisions: [[0, 11, 25], [0, -8, 18], [19, 20, 10], [-19, 20, 10], [0, -20, 14]],\r\n\r\n    repelEnergy: 2600,\r\n\r\n    [SHIPS_FIRE_MODES.FIRE]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 0, 35, 0),\r\n    ]),\r\n\r\n    [SHIPS_FIRE_MODES.INFERNO]: missileFireTemplate([\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, -20, 0, -0.05),\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 0, 35, 0),\r\n      missileTemplate(MOB_TYPES.PROWLER_MISSILE, 20, 0, 0.05),\r\n    ]),\r\n  },\r\n};\r\n","import * as ClientPackets from './types/packets-client';\r\nimport * as ServerPackets from './types/packets-server';\r\n\r\nexport { ClientPackets, ServerPackets };\r\nexport * from './support/errors';\r\nexport * from './packets';\r\nexport { default as CLIENT_PACKETS } from './packets/client';\r\nexport { default as SERVER_PACKETS } from './packets/server';\r\nexport { default as CLIENT_SCHEMAS } from './schemas/client';\r\nexport { default as SERVER_SCHEMAS } from './schemas/server';\r\nexport * from './marshaling';\r\nexport * from './unmarshaling';\r\nexport * from './types/client';\r\nexport * from './types/server';\r\nexport * from './types/data';\r\nexport * from './types/flags';\r\nexport * from './support/utils';\r\nexport * from './decoding';\r\nexport * from './encoding';\r\n","import { ProtocolPacket } from '../packets';\r\n\r\n/**\r\n * Login request.\r\n * First request after connection open.\r\n */\r\nexport interface Login extends ProtocolPacket {\r\n  /**\r\n   * Protocol major version.\r\n   */\r\n  protocol?: number;\r\n\r\n  /**\r\n   * Desired player name.\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * User session.\r\n   */\r\n  session?: string;\r\n\r\n  /**\r\n   * Half-width screen value.\r\n   * Game map units.\r\n   */\r\n  horizonX?: number;\r\n\r\n  /**\r\n   * Half-height screen value.\r\n   * Game map units.\r\n   */\r\n  horizonY?: number;\r\n\r\n  /**\r\n   * Desired country flag.\r\n   */\r\n  flag?: string;\r\n}\r\n\r\n/**\r\n * Request from backup connection to associate with the player.\r\n */\r\nexport interface Backup extends ProtocolPacket {\r\n  /**\r\n   * Token from `Login` response.\r\n   */\r\n  token?: string;\r\n}\r\n\r\n/**\r\n * Request new viewport size.\r\n */\r\nexport interface Horizon extends ProtocolPacket {\r\n  /**\r\n   * Half-width screen value.\r\n   * Game map units.\r\n   */\r\n  horizonX?: number;\r\n\r\n  /**\r\n   * Half-height screen value.\r\n   * Game map units.\r\n   */\r\n  horizonY?: number;\r\n}\r\n\r\n/**\r\n * Ack.\r\n * Look for an explanation on HN.\r\n */\r\nexport interface Ack extends ProtocolPacket {}\r\n\r\n/**\r\n * Response to `Ping` request.\r\n */\r\nexport interface Pong extends ProtocolPacket {\r\n  /**\r\n   * Response validation token.\r\n   */\r\n  num?: number;\r\n}\r\n\r\n/**\r\n * Update key state.\r\n */\r\nexport interface Key extends ProtocolPacket {\r\n  /**\r\n   * Key press/release increasing id.\r\n   */\r\n  seq?: number;\r\n\r\n  /**\r\n   * Key code.\r\n   */\r\n  key?: number;\r\n\r\n  /**\r\n   * Press state.\r\n   * true — pressed.\r\n   */\r\n  state?: boolean;\r\n}\r\n\r\n/**\r\n * Send command.\r\n */\r\nexport interface Command extends ProtocolPacket {\r\n  /**\r\n   * Command name.\r\n   */\r\n  com?: string;\r\n\r\n  /**\r\n   * Command arguments.\r\n   */\r\n  data?: string;\r\n}\r\n\r\n/**\r\n * Request `ScoreDetailed`, `ScoreDetailedCtf` or `ScoreDetailedBtr` response.\r\n */\r\nexport interface Scoredetailed extends ProtocolPacket {}\r\n\r\n/**\r\n * Send message in the public chat.\r\n */\r\nexport interface Chat extends ProtocolPacket {\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * Send private message to player.\r\n */\r\nexport interface Whisper extends ProtocolPacket {\r\n  /**\r\n   * Recipient ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * Send message in the say chat.\r\n */\r\nexport interface Say extends ProtocolPacket {\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * Send message in the team chat.\r\n */\r\nexport interface Teamchat extends ProtocolPacket {\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * Vote to mute player.\r\n */\r\nexport interface Votemute extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n}\r\n\r\n/**\r\n * Currently not used.\r\n */\r\nexport interface Localping extends ProtocolPacket {\r\n  auth?: number;\r\n}\r\n","import { ProtocolPacket } from '../packets';\r\nimport {\r\n  CTF_TEAMS,\r\n  CTF_FLAG_STATE,\r\n  SERVER_CUSTOM_TYPES,\r\n  SERVER_MESSAGE_TYPES,\r\n  MOB_DESPAWN_TYPES,\r\n  MOB_TYPES,\r\n  LEAVE_HORIZON_TYPES,\r\n  PLAYER_LEVEL_UPDATE_TYPES,\r\n  PLAYER_POWERUP_TYPES,\r\n  BTR_FIREWALL_STATUS,\r\n  PLAYER_STATUS,\r\n  ClockTime,\r\n  SERVER_ERRORS,\r\n  COMMAND_REPLY_TYPES,\r\n  PLAYER_UPGRADE_TYPES,\r\n} from './server';\r\n\r\n/**\r\n * Connected player.\r\n */\r\nexport interface LoginPlayer {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player alive status.\r\n   */\r\n  status?: PLAYER_STATUS;\r\n\r\n  /**\r\n   * Account level.\r\n   */\r\n  level?: number;\r\n\r\n  /**\r\n   * Unique player name assigned by server.\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * Airplane type.\r\n   */\r\n  type?: number;\r\n\r\n  /**\r\n   * Player team ID.\r\n   */\r\n  team?: number;\r\n\r\n  /**\r\n   * Player high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Player high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Player rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Player country flag.\r\n   */\r\n  flag?: number;\r\n\r\n  /**\r\n   * `encodeUpgrades` result. See lib function.\r\n   */\r\n  upgrades?: number;\r\n}\r\n\r\nexport interface LoginBot {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n}\r\n\r\n/**\r\n * Response on client `Login`.\r\n */\r\nexport interface Login extends ProtocolPacket {\r\n  /**\r\n   * Currently not used.\r\n   */\r\n  success?: boolean;\r\n\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player team.\r\n   */\r\n  team?: number;\r\n\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Token to init backup connection.\r\n   */\r\n  token?: string;\r\n\r\n  /**\r\n   * Airplane type.\r\n   */\r\n  type?: number;\r\n\r\n  /**\r\n   * Server name.\r\n   */\r\n  room?: string;\r\n\r\n  /**\r\n   * List of connected players.\r\n   */\r\n  players?: LoginPlayer[];\r\n\r\n  /**\r\n   * Server configuration.\r\n   */\r\n  serverConfiguration?: string;\r\n\r\n  /**\r\n   * List of bots ID.\r\n   */\r\n  bots?: LoginBot[];\r\n}\r\n\r\n/**\r\n * Empty packet. Currently not used.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface Backup extends ProtocolPacket {}\r\n\r\n/**\r\n * Ping request.\r\n */\r\nexport interface Ping extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Random number to validate `Pong` response.\r\n   */\r\n  num?: number;\r\n}\r\n\r\n/**\r\n * Response on client `Pong`.\r\n */\r\nexport interface PingResult extends ProtocolPacket {\r\n  /**\r\n   * Player ping, ms.\r\n   */\r\n  ping?: number;\r\n\r\n  /**\r\n   * Total players among the servers group (like EU, US, ASIA, etc.).\r\n   */\r\n  playerstotal?: number;\r\n\r\n  /**\r\n   * Total players on this game server.\r\n   */\r\n  playersgame?: number;\r\n}\r\n\r\n/**\r\n * Empty packet. Currently not used.\r\n */\r\nexport interface Ack extends ProtocolPacket {}\r\n\r\n/**\r\n * Error notification. Only informing, it doesn't disconnect the player.\r\n */\r\nexport interface Error extends ProtocolPacket {\r\n  /**\r\n   * Error ID.\r\n   */\r\n  error?: SERVER_ERRORS;\r\n}\r\n\r\n/**\r\n * Response on the client `Command`.\r\n */\r\nexport interface CommandReply extends ProtocolPacket {\r\n  /**\r\n   * Reply type ID.\r\n   */\r\n  type?: COMMAND_REPLY_TYPES;\r\n\r\n  /**\r\n   * Reply content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * New player connected.\r\n */\r\nexport interface PlayerNew extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player alive status.\r\n   */\r\n  status?: PLAYER_STATUS;\r\n\r\n  /**\r\n   * Unique player name assigned by server.\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * Airplane type.\r\n   */\r\n  type?: number;\r\n\r\n  /**\r\n   * Player team.\r\n   */\r\n  team?: number;\r\n\r\n  /**\r\n   * Player high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Player high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Player rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Player country code.\r\n   */\r\n  flag?: number;\r\n\r\n  /**\r\n   * `encodeUpgrades` result. See lib function.\r\n   */\r\n  upgrades?: number;\r\n\r\n  /**\r\n   * Is player a bot.\r\n   */\r\n  isBot?: boolean;\r\n}\r\n\r\n/**\r\n * Player disconnected.\r\n */\r\nexport interface PlayerLeave extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n}\r\n\r\n/**\r\n * Player update state.\r\n */\r\nexport interface PlayerUpdate extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * `encodeKeystate` result. See lib function.\r\n   */\r\n  keystate?: number;\r\n\r\n  /**\r\n   * `encodeUpgrades` result. See lib function.\r\n   */\r\n  upgrades?: number;\r\n\r\n  /**\r\n   * Player high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Player high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Player rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Player velocity vector X.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Player velocity vector Y.\r\n   */\r\n  speedY?: number;\r\n}\r\n\r\n/**\r\n * Player fired projectile.\r\n */\r\nexport interface PlayerFireProjectile {\r\n  /**\r\n   * Projectile ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Projectile type.\r\n   */\r\n  type?: MOB_TYPES;\r\n\r\n  /**\r\n   * Projectile high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Projectile high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Projectile start velocity vector X.\r\n   * Depends on player velocity and flight direction.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Projectile start velocity vector Y.\r\n   * Depends on player velocity and flight direction.\r\n   */\r\n  speedY?: number;\r\n\r\n  /**\r\n   * Acceleration vector X.\r\n   * Depends on owner upgrades at the moment of fire.\r\n   */\r\n  accelX?: number;\r\n\r\n  /**\r\n   * Acceleration vector Y.\r\n   * Depends on owner upgrades at the moment of fire.\r\n   */\r\n  accelY?: number;\r\n\r\n  /**\r\n   * Maximum projectile speed.\r\n   * Depends on owner upgrades at the moment of fire.\r\n   */\r\n  maxSpeed?: number;\r\n}\r\n\r\n/**\r\n * Player fired projectiles.\r\n */\r\nexport interface PlayerFire extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player energy.\r\n   */\r\n  energy?: number;\r\n\r\n  /**\r\n   * Energy regen.\r\n   * Depends on player upgrades.\r\n   */\r\n  energyRegen?: number;\r\n\r\n  /**\r\n   * Fired projectiles.\r\n   */\r\n  projectiles?: PlayerFireProjectile[];\r\n}\r\n\r\n/**\r\n * Player respawned.\r\n */\r\nexport interface PlayerRespawn extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Player high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Player rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * `encodeUpgrades` result. See lib function.\r\n   */\r\n  upgrades?: number;\r\n}\r\n\r\n/**\r\n * Player country flag update.\r\n */\r\nexport interface PlayerFlag extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Flag country code.\r\n   */\r\n  flag?: number;\r\n}\r\n\r\n/**\r\n * Hurted victim.\r\n */\r\nexport interface PlayerHitPlayer {\r\n  /**\r\n   * Victim ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Victim health.\r\n   */\r\n  health?: number;\r\n\r\n  /**\r\n   * Victim health regen.\r\n   * Depends on victim airplane type.\r\n   */\r\n  healthRegen?: number;\r\n}\r\n\r\n/**\r\n * Projectile hit player(s).\r\n */\r\nexport interface PlayerHit extends ProtocolPacket {\r\n  /**\r\n   * Projectile ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Projectile type.\r\n   */\r\n  type?: MOB_TYPES;\r\n\r\n  /**\r\n   * Hit high-res position X (projectile explosion position).\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Hit high-res position Y (projectile explosion position).\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Projectile owner ID.\r\n   */\r\n  owner?: number;\r\n\r\n  /**\r\n   * Hurted victims.\r\n   */\r\n  players?: PlayerHitPlayer[];\r\n}\r\n\r\n/**\r\n * Player was killed or removed from the map.\r\n * Used with spectate packet for the fast remove\r\n * spectator from the map (spectator receives {spectatorId, 0, 0, 0}).\r\n */\r\nexport interface PlayerKill extends ProtocolPacket {\r\n  /**\r\n   * Victim ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Killer ID.\r\n   */\r\n  killer?: number;\r\n\r\n  /**\r\n   * Death high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Death high-res position Y.\r\n   */\r\n  posY?: number;\r\n}\r\n\r\n/**\r\n * Player applied (but not picked up the box) or lost upgrades.\r\n */\r\nexport interface PlayerUpgrade extends ProtocolPacket {\r\n  /**\r\n   * Player free upgrades.\r\n   */\r\n  upgrades?: number;\r\n\r\n  /**\r\n   * Action type: lose or apply.\r\n   */\r\n  type?: PLAYER_UPGRADE_TYPES;\r\n\r\n  /**\r\n   * Active speed upgrades.\r\n   */\r\n  speed?: number;\r\n\r\n  /**\r\n   * Active defense upgrades.\r\n   */\r\n  defense?: number;\r\n\r\n  /**\r\n   * Active energy upgrades.\r\n   */\r\n  energy?: number;\r\n\r\n  /**\r\n   * Active missile upgrades.\r\n   */\r\n  missile?: number;\r\n}\r\n\r\n/**\r\n * Player changed airplane type.\r\n */\r\nexport interface PlayerType extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Airplane type.\r\n   */\r\n  type?: number;\r\n}\r\n\r\n/**\r\n * Player received powerup.\r\n */\r\nexport interface PlayerPowerup extends ProtocolPacket {\r\n  /**\r\n   * Powerup type.\r\n   */\r\n  type?: PLAYER_POWERUP_TYPES;\r\n\r\n  /**\r\n   * Powerup duration.\r\n   */\r\n  duration?: number;\r\n}\r\n\r\n/**\r\n * Player level info.\r\n */\r\nexport interface PlayerLevel extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Level info type.\r\n   */\r\n  type?: PLAYER_LEVEL_UPDATE_TYPES;\r\n\r\n  /**\r\n   * Player level > 0.\r\n   */\r\n  level?: number;\r\n}\r\n\r\n/**\r\n * New player team.\r\n */\r\nexport interface PlayerReteamPlayers {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player new team ID.\r\n   */\r\n  team?: number;\r\n}\r\n\r\n/**\r\n * Players changed their teams.\r\n */\r\nexport interface PlayerReteam extends ProtocolPacket {\r\n  /**\r\n   * Players list.\r\n   */\r\n  players?: PlayerReteamPlayers[];\r\n}\r\n\r\n/**\r\n * Update CTF flag state or team score.\r\n */\r\nexport interface GameFlag extends ProtocolPacket {\r\n  /**\r\n   * Flag state.\r\n   */\r\n  type?: CTF_FLAG_STATE;\r\n\r\n  /**\r\n   * Flag team.\r\n   */\r\n  flag?: CTF_TEAMS;\r\n\r\n  /**\r\n   * Flag owner ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Flag high-res position X.\r\n   * If CTF_FLAG_STATE = DYNAMIC it doesn't matter.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Flag high-res position Y.\r\n   * If CTF_FLAG_STATE = DYNAMIC it doesn't matter.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Blue team score.\r\n   */\r\n  blueteam?: number;\r\n\r\n  /**\r\n   * Red team score.\r\n   */\r\n  redteam?: number;\r\n}\r\n\r\n/**\r\n * Switch into spectator mode or change spectating player.\r\n */\r\nexport interface GameSpectate extends ProtocolPacket {\r\n  /**\r\n   * ID of spectated player.\r\n   */\r\n  id?: number;\r\n}\r\n\r\n/**\r\n * BTF game state.\r\n */\r\nexport interface GamePlayersalive extends ProtocolPacket {\r\n  /**\r\n   * Total players alive.\r\n   */\r\n  players?: number;\r\n}\r\n\r\n/**\r\n * BTF firewall state.\r\n */\r\nexport interface GameFirewall extends ProtocolPacket {\r\n  /**\r\n   * Currently not used.\r\n   */\r\n  type?: number;\r\n\r\n  /**\r\n   * Firewall activity status.\r\n   */\r\n  status?: BTR_FIREWALL_STATUS;\r\n\r\n  /**\r\n   * Firewall high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Firewall high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Firewall radius.\r\n   */\r\n  radius?: number;\r\n\r\n  /**\r\n   * Firewall reducing speed.\r\n   */\r\n  speed?: number;\r\n}\r\n\r\n/**\r\n * Repeled victim.\r\n */\r\nexport interface EventRepelPlayer {\r\n  /**\r\n   * Victim ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * `encodeKeystate` result. See lib function.\r\n   */\r\n  keystate?: number;\r\n\r\n  /**\r\n   * Victim high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Victim high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Victim rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Victim speed vector X.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Victim speed vector Y.\r\n   */\r\n  speedY?: number;\r\n\r\n  /**\r\n   * Victim energy.\r\n   */\r\n  energy?: number;\r\n\r\n  /**\r\n   * Victim energy regen.\r\n   * Depends on victim upgrades.\r\n   */\r\n  energyRegen?: number;\r\n\r\n  /**\r\n   * Victim health.\r\n   */\r\n  playerHealth?: number;\r\n\r\n  /**\r\n   * Victim health regen.\r\n   */\r\n  playerHealthRegen?: number;\r\n}\r\n\r\n/**\r\n * Repeled projectile.\r\n */\r\nexport interface EventRepelMob {\r\n  /**\r\n   * Projectile ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Projectile type.\r\n   */\r\n  type?: MOB_TYPES;\r\n\r\n  /**\r\n   * Projectile high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Projectile high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Projectile new velocity vector X.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Projectile new velocity vector Y.\r\n   */\r\n  speedY?: number;\r\n\r\n  /**\r\n   * Projectile new acceleration vector X.\r\n   */\r\n  accelX?: number;\r\n\r\n  /**\r\n   * Projectile new acceleration vector Y.\r\n   */\r\n  accelY?: number;\r\n\r\n  /**\r\n   * Maximum projectile speed.\r\n   */\r\n  maxSpeed?: number;\r\n}\r\n\r\nexport interface EventRepel extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Repel owner.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Repel center position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Repel center position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Owner rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Owner velocity vector X.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Owner velocity vector Y.\r\n   */\r\n  speedY?: number;\r\n\r\n  /**\r\n   * Owner energy.\r\n   */\r\n  energy?: number;\r\n\r\n  /**\r\n   * Owner energy regen.\r\n   * Depends on player upgrades.\r\n   */\r\n  energyRegen?: number;\r\n\r\n  /**\r\n   * Repeled players.\r\n   */\r\n  players?: EventRepelPlayer[];\r\n\r\n  /**\r\n   * Repeled projectiles.\r\n   */\r\n  mobs?: EventRepelMob[];\r\n}\r\n\r\n/**\r\n * Predator start or stop boost.\r\n */\r\nexport interface EventBoost extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * true — boost start, false — stop.\r\n   */\r\n  boost?: boolean;\r\n\r\n  /**\r\n   * Player high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Player high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Player rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Player velocity vector X.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Player velocity vector Y.\r\n   */\r\n  speedY?: number;\r\n\r\n  /**\r\n   * Player energy.\r\n   */\r\n  energy?: number;\r\n\r\n  /**\r\n   * Player energy regen.\r\n   * Depends on player upgrades.\r\n   */\r\n  energyRegen?: number;\r\n}\r\n\r\n/**\r\n * Player bounced from the mountain.\r\n */\r\nexport interface EventBounce extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * `encodeKeystate` result. See lib function.\r\n   */\r\n  keystate?: number;\r\n\r\n  /**\r\n   * Player high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Player high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Player rotation.\r\n   */\r\n  rot?: number;\r\n\r\n  /**\r\n   * Player new velocity vector X after bounce.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Player new velocity vector Y after bounce.\r\n   */\r\n  speedY?: number;\r\n}\r\n\r\n/**\r\n * Prowler stealth state.\r\n */\r\nexport interface EventStealth extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * true — player invisible, false — visible.\r\n   */\r\n  state?: boolean;\r\n\r\n  /**\r\n   * Player energy.\r\n   */\r\n  energy?: number;\r\n\r\n  /**\r\n   * Player energy regen.\r\n   * Depends on player upgrades.\r\n   */\r\n  energyRegen?: number;\r\n}\r\n\r\n/**\r\n * Player or mob (projectile, powerup or upgrade) leaves screen\r\n * of the player received the packet. Actually not the screen,\r\n * but the viewport, which depends on scale factor. It may be more\r\n * or less of the player real screen.\r\n */\r\nexport interface EventLeavehorizon extends ProtocolPacket {\r\n  /**\r\n   * Object type\r\n   */\r\n  type?: LEAVE_HORIZON_TYPES;\r\n\r\n  /**\r\n   * Mob/Player ID.\r\n   */\r\n  id?: number;\r\n}\r\n\r\n/**\r\n * Spawn projectile on the player screen.\r\n */\r\nexport interface MobUpdate extends ProtocolPacket {\r\n  /**\r\n   * Packet time.\r\n   */\r\n  clock?: ClockTime;\r\n\r\n  /**\r\n   * Projectile ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Projectile type.\r\n   */\r\n  type?: MOB_TYPES;\r\n\r\n  /**\r\n   * Projectile high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Projectile high-res position Y.\r\n   */\r\n  posY?: number;\r\n\r\n  /**\r\n   * Projectile velocity vector X.\r\n   */\r\n  speedX?: number;\r\n\r\n  /**\r\n   * Projectile velocity vector Y.\r\n   */\r\n  speedY?: number;\r\n\r\n  /**\r\n   * Projectile acceleration vector X.\r\n   * Depends on owner upgrades at the moment of fire.\r\n   */\r\n  accelX?: number;\r\n\r\n  /**\r\n   * Projectile acceleration vector Y.\r\n   * Depends on owner upgrades at the moment of fire.\r\n   */\r\n  accelY?: number;\r\n\r\n  /**\r\n   * Maximum projectile speed.\r\n   * Depends on owner upgrades at the moment of fire.\r\n   */\r\n  maxSpeed?: number;\r\n}\r\n\r\n/**\r\n * Spawn/show box (powerup or upgrade) on the player screen.\r\n */\r\nexport interface MobUpdateStationary extends ProtocolPacket {\r\n  /**\r\n   * Mob ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Mob type.\r\n   */\r\n  type?: MOB_TYPES;\r\n\r\n  /**\r\n   * Mob high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Mob high-res position Y.\r\n   */\r\n  posY?: number;\r\n}\r\n\r\n/**\r\n * Projectile, powerup or upgrade was despawned or picked up (boxes only).\r\n */\r\nexport interface MobDespawn extends ProtocolPacket {\r\n  /**\r\n   * Mob ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Mob despawn reason.\r\n   */\r\n  type?: MOB_DESPAWN_TYPES;\r\n}\r\n\r\n/**\r\n * Projectile hit a mountain.\r\n */\r\nexport interface MobDespawnCoords extends ProtocolPacket {\r\n  /**\r\n   * Projectile ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Projectile type.\r\n   */\r\n  type?: MOB_TYPES;\r\n\r\n  /**\r\n   * Projectile high-res position X.\r\n   */\r\n  posX?: number;\r\n\r\n  /**\r\n   * Projectile high-res position Y.\r\n   */\r\n  posY?: number;\r\n}\r\n\r\n/**\r\n * Player was killed, killed another player, got a new level\r\n * or picked up an upgrade.\r\n */\r\nexport interface ScoreUpdate extends ProtocolPacket {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player score.\r\n   */\r\n  score?: number;\r\n\r\n  /**\r\n   * Only for accounts.\r\n   *\r\n   * Total score acquired by player over the entire account life.\r\n   */\r\n  earnings?: number;\r\n\r\n  /**\r\n   * Free player upgrades.\r\n   */\r\n  upgrades?: number;\r\n\r\n  /**\r\n   * Total player account (or current guest session) kills.\r\n   */\r\n  totalkills?: number;\r\n\r\n  /**\r\n   * Total player account (or current guest session) deaths.\r\n   */\r\n  totaldeaths?: number;\r\n}\r\n\r\n/**\r\n * Sorted list of players.\r\n */\r\nexport interface ScoreBoardData {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player score.\r\n   */\r\n  score?: number;\r\n\r\n  /**\r\n   * Player level.\r\n   */\r\n  level?: number;\r\n}\r\n\r\n/**\r\n * Sorted list of players.\r\n * If position (0, 0) — player in spectator mode.\r\n */\r\nexport interface ScoreBoardRanking {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Low resolution position X.\r\n   */\r\n  x?: number;\r\n\r\n  /**\r\n   * Low resolution position Y.\r\n   */\r\n  y?: number;\r\n}\r\n\r\n/**\r\n * Minimap and players rates and states update.\r\n */\r\nexport interface ScoreBoard extends ProtocolPacket {\r\n  /**\r\n   * Players score.\r\n   */\r\n  data?: ScoreBoardData[];\r\n\r\n  /**\r\n   * Players location and state (spectate or not).\r\n   */\r\n  rankings?: ScoreBoardRanking[];\r\n}\r\n\r\n/**\r\n * FFA rating item.\r\n */\r\nexport interface ScoreDetailedScore {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player level.\r\n   */\r\n  level?: number;\r\n\r\n  /**\r\n   * Player score during game session.\r\n   */\r\n  score?: number;\r\n\r\n  /**\r\n   * Player kills during game session.\r\n   */\r\n  kills?: number;\r\n\r\n  /**\r\n   * Player deaths during game session.\r\n   */\r\n  deaths?: number;\r\n\r\n  /**\r\n   * Player damage during game session.\r\n   */\r\n  damage?: number;\r\n\r\n  /**\r\n   * Player last ping value.\r\n   */\r\n  ping?: number;\r\n}\r\n\r\n/**\r\n * FFA sorted players list.\r\n */\r\nexport interface ScoreDetailed extends ProtocolPacket {\r\n  scores?: ScoreDetailedScore[];\r\n}\r\n\r\n/**\r\n * CTF rating item.\r\n */\r\nexport interface ScoreDetailedCtfScore {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player level.\r\n   */\r\n  level?: number;\r\n\r\n  /**\r\n   * Flag captures by player during game session.\r\n   */\r\n  captures?: number;\r\n\r\n  /**\r\n   * Player score during game session.\r\n   */\r\n  score?: number;\r\n\r\n  /**\r\n   * Player kills during game session.\r\n   */\r\n  kills?: number;\r\n\r\n  /**\r\n   * Player deaths during game session.\r\n   */\r\n  deaths?: number;\r\n\r\n  /**\r\n   * Player damage during game session.\r\n   */\r\n  damage?: number;\r\n\r\n  /**\r\n   * Player last ping value.\r\n   */\r\n  ping?: number;\r\n}\r\n\r\n/**\r\n * CTF sorted players list.\r\n */\r\nexport interface ScoreDetailedCtf extends ProtocolPacket {\r\n  /**\r\n   * Players score.\r\n   */\r\n  scores?: ScoreDetailedCtfScore[];\r\n}\r\n\r\n/**\r\n * BTR rating item.\r\n */\r\nexport interface ScoreDetailedBtrScore {\r\n  /**\r\n   * Player ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Player level.\r\n   */\r\n  level?: number;\r\n\r\n  /**\r\n   * Player alive or not.\r\n   */\r\n  alive?: boolean;\r\n\r\n  /**\r\n   * Player wins during game session.\r\n   */\r\n  wins?: number;\r\n\r\n  /**\r\n   * Player score during game session.\r\n   */\r\n  score?: number;\r\n\r\n  /**\r\n   * Player kills during game session.\r\n   */\r\n  kills?: number;\r\n\r\n  /**\r\n   * Player deaths during game session.\r\n   */\r\n  deaths?: number;\r\n\r\n  /**\r\n   * Player damage during game session.\r\n   */\r\n  damage?: number;\r\n\r\n  /**\r\n   * Player last ping value.\r\n   */\r\n  ping?: number;\r\n}\r\n\r\n/**\r\n * BTR sorted players list.\r\n */\r\nexport interface ScoreDetailedBtr extends ProtocolPacket {\r\n  /**\r\n   * Players score.\r\n   */\r\n  scores?: ScoreDetailedBtrScore[];\r\n}\r\n\r\n/**\r\n * New team chat message by player.\r\n */\r\nexport interface ChatTeam extends ProtocolPacket {\r\n  /**\r\n   * Message owner ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * New public chat message by player.\r\n */\r\nexport interface ChatPublic extends ProtocolPacket {\r\n  /**\r\n   * Message owner ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * New public say message by player.\r\n */\r\nexport interface ChatSay extends ProtocolPacket {\r\n  /**\r\n   * Message owner ID.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * New whisper message.\r\n */\r\nexport interface ChatWhisper extends ProtocolPacket {\r\n  /**\r\n   * Message owner ID.\r\n   */\r\n  from?: number;\r\n\r\n  /**\r\n   * Recipient ID.\r\n   */\r\n  to?: number;\r\n\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * Player was muted.\r\n */\r\nexport interface ChatVotemutepassed extends ProtocolPacket {\r\n  /**\r\n   * Muted player ID.\r\n   */\r\n  id?: number;\r\n}\r\n\r\n/**\r\n * Player was muted. Response on player attempt to chat.\r\n */\r\nexport interface ChatVotemuted extends ProtocolPacket {}\r\n\r\n/**\r\n * Server HTML message.\r\n */\r\nexport interface ServerMessage extends ProtocolPacket {\r\n  type?: SERVER_MESSAGE_TYPES;\r\n\r\n  /**\r\n   * Duration on the screen.\r\n   */\r\n  duration?: number;\r\n\r\n  /**\r\n   * Message content.\r\n   */\r\n  text?: string;\r\n}\r\n\r\n/**\r\n * CTF end game alert data.\r\n */\r\nexport interface ServerCustomCTFData {\r\n  /**\r\n   * Winner team.\r\n   */\r\n  w: CTF_TEAMS;\r\n\r\n  /**\r\n   * Bounty reward.\r\n   */\r\n  b: number;\r\n\r\n  /**\r\n   * Alert duration.\r\n   */\r\n  t: number;\r\n}\r\n\r\n/**\r\n * BTR end game alert data.\r\n */\r\nexport interface ServerCustomBTRData {\r\n  /**\r\n   * Winner country flag code.\r\n   */\r\n  f: number;\r\n\r\n  /**\r\n   * Winner name.\r\n   */\r\n  p: string;\r\n\r\n  /**\r\n   * Winner kills.\r\n   */\r\n  k: number;\r\n\r\n  /**\r\n   * Bounty reward.\r\n   */\r\n  b: number;\r\n\r\n  /**\r\n   * Alert duration.\r\n   */\r\n  t: number;\r\n}\r\n\r\n/**\r\n * CTF or BTR end game alert.\r\n */\r\nexport interface ServerCustom extends ProtocolPacket {\r\n  /**\r\n   * Game mode type.\r\n   */\r\n  type?: SERVER_CUSTOM_TYPES;\r\n\r\n  /**\r\n   * JSON.\r\n   */\r\n  data?: string;\r\n}\r\n","/* eslint-disable max-classes-per-file */\r\nexport class ProtocolError {\r\n  public name: string;\r\n\r\n  public message: string;\r\n\r\n  constructor(message = '') {\r\n    this.name = this.constructor.name;\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport class StringEncodeError extends ProtocolError {}\r\n\r\nexport class StringDecodeError extends ProtocolError {}\r\n","export interface WSPacket {\r\n  /**\r\n   * Packet code.\r\n   */\r\n  c?: number;\r\n}\r\n\r\nexport interface ProtocolPacket extends WSPacket {\r\n  [index: string]: {}[] | number | string | boolean;\r\n}\r\n","export default {\r\n  LOGIN: 0,\r\n  BACKUP: 1,\r\n  HORIZON: 2,\r\n  ACK: 5,\r\n  PONG: 6,\r\n  KEY: 10,\r\n  COMMAND: 11,\r\n  SCOREDETAILED: 12,\r\n  CHAT: 20,\r\n  WHISPER: 21,\r\n  SAY: 22,\r\n  TEAMCHAT: 23,\r\n  VOTEMUTE: 24,\r\n  LOCALPING: 255,\r\n};\r\n","export default {\r\n  LOGIN: 0,\r\n  BACKUP: 1,\r\n  PING: 5,\r\n  PING_RESULT: 6,\r\n  ACK: 7,\r\n  ERROR: 8,\r\n  COMMAND_REPLY: 9,\r\n  PLAYER_NEW: 10,\r\n  PLAYER_LEAVE: 11,\r\n  PLAYER_UPDATE: 12,\r\n  PLAYER_FIRE: 13,\r\n  PLAYER_HIT: 14,\r\n  PLAYER_RESPAWN: 15,\r\n  PLAYER_FLAG: 16,\r\n  PLAYER_KILL: 17,\r\n  PLAYER_UPGRADE: 18,\r\n  PLAYER_TYPE: 19,\r\n  PLAYER_POWERUP: 20,\r\n  PLAYER_LEVEL: 21,\r\n  PLAYER_RETEAM: 22,\r\n  GAME_FLAG: 30,\r\n  GAME_SPECTATE: 31,\r\n  GAME_PLAYERSALIVE: 32,\r\n  GAME_FIREWALL: 33,\r\n  EVENT_REPEL: 40,\r\n  EVENT_BOOST: 41,\r\n  EVENT_BOUNCE: 42,\r\n  EVENT_STEALTH: 43,\r\n  EVENT_LEAVEHORIZON: 44,\r\n  MOB_UPDATE: 60,\r\n  MOB_UPDATE_STATIONARY: 61,\r\n  MOB_DESPAWN: 62,\r\n  MOB_DESPAWN_COORDS: 63,\r\n  CHAT_PUBLIC: 70,\r\n  CHAT_TEAM: 71,\r\n  CHAT_SAY: 72,\r\n  CHAT_WHISPER: 73,\r\n  CHAT_VOTEMUTEPASSED: 78,\r\n  CHAT_VOTEMUTED: 79,\r\n  SCORE_UPDATE: 80,\r\n  SCORE_BOARD: 81,\r\n  SCORE_DETAILED: 82,\r\n  SCORE_DETAILED_CTF: 83,\r\n  SCORE_DETAILED_BTR: 84,\r\n  SERVER_MESSAGE: 90,\r\n  SERVER_CUSTOM: 91,\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport CLIENT_PACKETS from '../packets/client';\r\nimport { DATA_TYPES } from '../types/data';\r\n\r\nexport default {\r\n  [CLIENT_PACKETS.LOGIN]: [\r\n    ['protocol', DATA_TYPES.uint8],\r\n    ['name', DATA_TYPES.text],\r\n    ['session', DATA_TYPES.text],\r\n    ['horizonX', DATA_TYPES.uint16],\r\n    ['horizonY', DATA_TYPES.uint16],\r\n    ['flag', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.BACKUP]: [['token', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.HORIZON]: [\r\n    ['horizonX', DATA_TYPES.uint16],\r\n    ['horizonY', DATA_TYPES.uint16],\r\n  ],\r\n  [CLIENT_PACKETS.ACK]: [],\r\n  [CLIENT_PACKETS.PONG]: [['num', DATA_TYPES.uint32]],\r\n  [CLIENT_PACKETS.KEY]: [\r\n    ['seq', DATA_TYPES.uint32],\r\n    ['key', DATA_TYPES.uint8],\r\n    ['state', DATA_TYPES.boolean],\r\n  ],\r\n  [CLIENT_PACKETS.COMMAND]: [\r\n    ['com', DATA_TYPES.text],\r\n    ['data', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.SCOREDETAILED]: [],\r\n  [CLIENT_PACKETS.CHAT]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.WHISPER]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n  [CLIENT_PACKETS.SAY]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.TEAMCHAT]: [['text', DATA_TYPES.text]],\r\n  [CLIENT_PACKETS.VOTEMUTE]: [['id', DATA_TYPES.uint16]],\r\n  [CLIENT_PACKETS.LOCALPING]: [['auth', DATA_TYPES.uint32]],\r\n};\r\n","export enum DATA_TYPES {\r\n  text = 1,\r\n  textbig = 2,\r\n  arraysmall = 4,\r\n  array = 3,\r\n  uint8 = 5,\r\n  uint16 = 6,\r\n  uint24 = 7,\r\n  uint32 = 8,\r\n  float32 = 9,\r\n  float64 = 10,\r\n  boolean = 11,\r\n  speed = 12,\r\n  accel = 13,\r\n  coordx = 14,\r\n  coordy = 15,\r\n  coord24 = 16,\r\n  rotation = 17,\r\n  healthenergy = 18,\r\n  regen = 19,\r\n}\r\n\r\nconst MAX_UINT8 = (1 << 8) - 1;\r\nconst MAX_UINT16 = (1 << 16) - 1;\r\nconst CHAR_BITS = 8;\r\n\r\nexport const DATA_TYPE_SIZE_BITS = {\r\n  [DATA_TYPES.text]: 8 + MAX_UINT8 * CHAR_BITS,\r\n  [DATA_TYPES.textbig]: 16 + MAX_UINT16 * CHAR_BITS,\r\n  [DATA_TYPES.arraysmall]: 8,\r\n  [DATA_TYPES.array]: 16,\r\n  [DATA_TYPES.uint8]: 8,\r\n  [DATA_TYPES.uint16]: 16,\r\n  [DATA_TYPES.uint24]: 24,\r\n  [DATA_TYPES.uint32]: 32,\r\n  [DATA_TYPES.float32]: 64,\r\n  [DATA_TYPES.float64]: 64,\r\n  [DATA_TYPES.boolean]: 8,\r\n  [DATA_TYPES.speed]: 16,\r\n  [DATA_TYPES.accel]: 16,\r\n  [DATA_TYPES.coordx]: 16,\r\n  [DATA_TYPES.coordy]: 16,\r\n  [DATA_TYPES.coord24]: 24,\r\n  [DATA_TYPES.rotation]: 16,\r\n  [DATA_TYPES.healthenergy]: 8,\r\n  [DATA_TYPES.regen]: 16,\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-interface */\r\nimport SERVER_PACKETS from '../packets/server';\r\nimport { DATA_TYPES } from '../types/data';\r\n\r\nexport default {\r\n  [SERVER_PACKETS.LOGIN]: [\r\n    ['success', DATA_TYPES.boolean],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['team', DATA_TYPES.uint16],\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['token', DATA_TYPES.text],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['room', DATA_TYPES.text],\r\n    [\r\n      'players',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['status', DATA_TYPES.uint8],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['name', DATA_TYPES.text],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['team', DATA_TYPES.uint16],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['rot', DATA_TYPES.rotation],\r\n        ['flag', DATA_TYPES.uint16],\r\n        ['upgrades', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n    ['serverConfiguration', DATA_TYPES.textbig],\r\n    ['bots', DATA_TYPES.array, [['id', DATA_TYPES.uint16]]],\r\n  ],\r\n\r\n  [SERVER_PACKETS.BACKUP]: [],\r\n\r\n  [SERVER_PACKETS.PING]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['num', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PING_RESULT]: [\r\n    ['ping', DATA_TYPES.uint16],\r\n    ['playerstotal', DATA_TYPES.uint32],\r\n    ['playersgame', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.ACK]: [],\r\n\r\n  [SERVER_PACKETS.ERROR]: [['error', DATA_TYPES.uint8]],\r\n\r\n  [SERVER_PACKETS.COMMAND_REPLY]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['text', DATA_TYPES.textbig],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_NEW]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['status', DATA_TYPES.uint8],\r\n    ['name', DATA_TYPES.text],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['team', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['flag', DATA_TYPES.uint16],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n    ['isBot', DATA_TYPES.boolean],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_LEAVE]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.PLAYER_UPDATE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['keystate', DATA_TYPES.uint8],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_FIRE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n    [\r\n      'projectiles',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['accelX', DATA_TYPES.accel],\r\n        ['accelY', DATA_TYPES.accel],\r\n        ['maxSpeed', DATA_TYPES.speed],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  // [packet.PLAYER_SAY]: [['id', types.uint16], ['text', types.text]],\r\n\r\n  [SERVER_PACKETS.PLAYER_RESPAWN]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['upgrades', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_FLAG]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['flag', DATA_TYPES.uint16],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_HIT]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['owner', DATA_TYPES.uint16],\r\n    [\r\n      'players',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['health', DATA_TYPES.healthenergy],\r\n        ['healthRegen', DATA_TYPES.regen],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_KILL]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['killer', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_UPGRADE]: [\r\n    ['upgrades', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['speed', DATA_TYPES.uint8],\r\n    ['defense', DATA_TYPES.uint8],\r\n    ['energy', DATA_TYPES.uint8],\r\n    ['missile', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_TYPE]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_POWERUP]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['duration', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_LEVEL]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['level', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.PLAYER_RETEAM]: [\r\n    [\r\n      'players',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['team', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.GAME_FLAG]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['flag', DATA_TYPES.uint8],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['blueteam', DATA_TYPES.uint8],\r\n    ['redteam', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.GAME_SPECTATE]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.GAME_PLAYERSALIVE]: [['players', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.GAME_FIREWALL]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['status', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['radius', DATA_TYPES.float32],\r\n    ['speed', DATA_TYPES.float32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_REPEL]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n    [\r\n      'players',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['keystate', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['rot', DATA_TYPES.rotation],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['energy', DATA_TYPES.healthenergy],\r\n        ['energyRegen', DATA_TYPES.regen],\r\n        ['playerHealth', DATA_TYPES.healthenergy],\r\n        ['playerHealthRegen', DATA_TYPES.regen],\r\n      ],\r\n    ],\r\n    [\r\n      'mobs',\r\n      DATA_TYPES.arraysmall,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['type', DATA_TYPES.uint8],\r\n        ['posX', DATA_TYPES.coordx],\r\n        ['posY', DATA_TYPES.coordy],\r\n        ['speedX', DATA_TYPES.speed],\r\n        ['speedY', DATA_TYPES.speed],\r\n        ['accelX', DATA_TYPES.accel],\r\n        ['accelY', DATA_TYPES.accel],\r\n        ['maxSpeed', DATA_TYPES.speed],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_BOOST]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['boost', DATA_TYPES.boolean],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_BOUNCE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['keystate', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coord24],\r\n    ['posY', DATA_TYPES.coord24],\r\n    ['rot', DATA_TYPES.rotation],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_STEALTH]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['state', DATA_TYPES.boolean],\r\n    ['energy', DATA_TYPES.healthenergy],\r\n    ['energyRegen', DATA_TYPES.regen],\r\n  ],\r\n\r\n  [SERVER_PACKETS.EVENT_LEAVEHORIZON]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['id', DATA_TYPES.uint16],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_UPDATE]: [\r\n    ['clock', DATA_TYPES.uint32],\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n    ['speedX', DATA_TYPES.speed],\r\n    ['speedY', DATA_TYPES.speed],\r\n    ['accelX', DATA_TYPES.accel],\r\n    ['accelY', DATA_TYPES.accel],\r\n    ['maxSpeed', DATA_TYPES.speed],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_UPDATE_STATIONARY]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.float32],\r\n    ['posY', DATA_TYPES.float32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_DESPAWN]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n  ],\r\n\r\n  [SERVER_PACKETS.MOB_DESPAWN_COORDS]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['type', DATA_TYPES.uint8],\r\n    ['posX', DATA_TYPES.coordx],\r\n    ['posY', DATA_TYPES.coordy],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_UPDATE]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['score', DATA_TYPES.uint32],\r\n    ['earnings', DATA_TYPES.uint32],\r\n    ['upgrades', DATA_TYPES.uint16],\r\n    ['totalkills', DATA_TYPES.uint32],\r\n    ['totaldeaths', DATA_TYPES.uint32],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_BOARD]: [\r\n    [\r\n      'data',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['level', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n    [\r\n      'rankings',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['x', DATA_TYPES.uint8],\r\n        ['y', DATA_TYPES.uint8],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED_CTF]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['captures', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SCORE_DETAILED_BTR]: [\r\n    [\r\n      'scores',\r\n      DATA_TYPES.array,\r\n      [\r\n        ['id', DATA_TYPES.uint16],\r\n        ['level', DATA_TYPES.uint8],\r\n        ['alive', DATA_TYPES.boolean],\r\n        ['wins', DATA_TYPES.uint16],\r\n        ['score', DATA_TYPES.uint32],\r\n        ['kills', DATA_TYPES.uint16],\r\n        ['deaths', DATA_TYPES.uint16],\r\n        ['damage', DATA_TYPES.float32],\r\n        ['ping', DATA_TYPES.uint16],\r\n      ],\r\n    ],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_TEAM]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_PUBLIC]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_SAY]: [\r\n    ['id', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_WHISPER]: [\r\n    ['from', DATA_TYPES.uint16],\r\n    ['to', DATA_TYPES.uint16],\r\n    ['text', DATA_TYPES.text],\r\n  ],\r\n\r\n  [SERVER_PACKETS.CHAT_VOTEMUTEPASSED]: [['id', DATA_TYPES.uint16]],\r\n\r\n  [SERVER_PACKETS.CHAT_VOTEMUTED]: [],\r\n\r\n  [SERVER_PACKETS.SERVER_MESSAGE]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['duration', DATA_TYPES.uint32],\r\n    ['text', DATA_TYPES.textbig],\r\n  ],\r\n\r\n  [SERVER_PACKETS.SERVER_CUSTOM]: [\r\n    ['type', DATA_TYPES.uint8],\r\n    ['data', DATA_TYPES.textbig],\r\n  ],\r\n};\r\n","import CLIENT_SCHEMAS from '../schemas/client';\r\nimport SERVER_SCHEMAS from '../schemas/server';\r\nimport { DATA_TYPES } from '../types/data';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport PREDEFINED_CLIENT_MARSHAL from './client';\r\nimport PREDEFINED_SERVER_MARSHAL from './server';\r\nimport { WSPacket, ProtocolPacket } from '../packets';\r\n\r\nconst SERVER_MESSAGE = 0;\r\nconst CLIENT_MESSAGE = 1;\r\n\r\nconst encodedStrings = new (class {\r\n  public storage: Uint8Array[];\r\n\r\n  constructor() {\r\n    this.storage = [];\r\n  }\r\n\r\n  last(): Uint8Array | null {\r\n    if (this.storage.length > 0) {\r\n      return this.storage[this.storage.length - 1];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  put(str: Uint8Array): void {\r\n    this.storage.push(str);\r\n  }\r\n\r\n  shift(): Uint8Array {\r\n    return this.storage.shift();\r\n  }\r\n\r\n  flush(): void {\r\n    this.storage = [];\r\n  }\r\n})();\r\n\r\nconst flushVars = (): void => {\r\n  encodedStrings.flush();\r\n};\r\n\r\nconst calcBufferLength = (\r\n  data: ProtocolPacket,\r\n  dataSchema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): number => {\r\n  let length = 0;\r\n\r\n  for (let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\r\n    const fieldData = data[fieldName];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        encodedStrings.put(encodeUTF8(fieldData as string));\r\n\r\n        if (fieldType === DATA_TYPES.textbig) {\r\n          length += 2;\r\n        } else {\r\n          length += 1;\r\n        }\r\n\r\n        length += encodedStrings.last().length;\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        if (fieldType === DATA_TYPES.array) {\r\n          length += 2;\r\n        } else {\r\n          length += 1;\r\n        }\r\n\r\n        for (let index = 0; index < (fieldData as []).length; index += 1) {\r\n          length += calcBufferLength(fieldData[index], subSchema);\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n      case DATA_TYPES.boolean:\r\n      case DATA_TYPES.healthenergy:\r\n        length += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n      case DATA_TYPES.speed:\r\n      case DATA_TYPES.accel:\r\n      case DATA_TYPES.coordx:\r\n      case DATA_TYPES.coordy:\r\n      case DATA_TYPES.rotation:\r\n      case DATA_TYPES.regen:\r\n        length += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n      case DATA_TYPES.coord24:\r\n        length += 3;\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n      case DATA_TYPES.float32:\r\n        length += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        length += 8;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return length;\r\n};\r\n\r\nconst fillBufferWithData = (\r\n  dataView: DataView,\r\n  startOffset: number,\r\n  data: WSPacket,\r\n  dataSchema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): number => {\r\n  let offset = startOffset;\r\n\r\n  if (offset === 1) {\r\n    dataView.setUint8(0, data.c);\r\n  }\r\n\r\n  for (let fieldIndex = 0; fieldIndex < dataSchema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = dataSchema[fieldIndex];\r\n    const fieldData = data[fieldName];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        {\r\n          const encodedString = encodedStrings.shift();\r\n\r\n          if (fieldType === DATA_TYPES.textbig) {\r\n            dataView.setUint16(offset, encodedString.length, true);\r\n            offset += 2;\r\n          } else {\r\n            dataView.setUint8(offset, encodedString.length);\r\n            offset += 1;\r\n          }\r\n\r\n          for (let charOffset = 0; charOffset < encodedString.length; charOffset += 1) {\r\n            dataView.setUint8(offset + charOffset, encodedString[charOffset]);\r\n          }\r\n\r\n          offset += encodedString.length;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        if (fieldType === DATA_TYPES.array) {\r\n          dataView.setUint16(offset, fieldData.length, true);\r\n          offset += 2;\r\n        } else {\r\n          dataView.setUint8(offset, fieldData.length);\r\n          offset += 1;\r\n        }\r\n\r\n        for (\r\n          let arrayElementIndex = 0;\r\n          arrayElementIndex < fieldData.length;\r\n          arrayElementIndex += 1\r\n        ) {\r\n          offset = fillBufferWithData(dataView, offset, fieldData[arrayElementIndex], subSchema);\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n        dataView.setUint8(offset, fieldData);\r\n        offset += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.healthenergy:\r\n        dataView.setUint8(offset, fieldData * 255);\r\n        offset += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n        dataView.setUint16(offset, fieldData, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.regen:\r\n        dataView.setUint16(offset, fieldData * 1e6 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.rotation:\r\n        dataView.setUint16(offset, fieldData * 6553.6, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordy:\r\n        dataView.setUint16(offset, fieldData * 4 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordx:\r\n        dataView.setUint16(offset, fieldData * 2 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.accel:\r\n        dataView.setUint16(offset, fieldData * 32768 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.speed:\r\n        dataView.setUint16(offset, fieldData * 1638.4 + 32768, true);\r\n        offset += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n        {\r\n          const u8 = fieldData % 256;\r\n          const u16 = (fieldData - u8) / 256;\r\n\r\n          dataView.setUint16(offset, u16, true);\r\n          offset += 2;\r\n\r\n          dataView.setUint8(offset, u8);\r\n          offset += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.coord24:\r\n        {\r\n          const value = fieldData * 512 + 8388608;\r\n          const u8 = value % 256;\r\n          const u16 = (value - u8) / 256;\r\n\r\n          dataView.setUint16(offset, u16, true);\r\n          offset += 2;\r\n          dataView.setUint8(offset, u8);\r\n          offset += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n        dataView.setUint32(offset, fieldData, true);\r\n        offset += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float32:\r\n        dataView.setFloat32(offset, fieldData, true);\r\n        offset += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        dataView.setFloat64(offset, fieldData, true);\r\n        offset += 8;\r\n        break;\r\n\r\n      case DATA_TYPES.boolean:\r\n        dataView.setUint8(offset, fieldData === false ? 0 : 1);\r\n        offset += 1;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return offset;\r\n};\r\n\r\nconst marshal = (\r\n  message: ProtocolPacket,\r\n  type: number,\r\n  usePredefinedMarshal: boolean\r\n): ArrayBuffer => {\r\n  flushVars();\r\n\r\n  const messageCode = message.c;\r\n\r\n  let schema = null;\r\n  let predefMarshal = null;\r\n\r\n  switch (type) {\r\n    case CLIENT_MESSAGE:\r\n      predefMarshal = PREDEFINED_CLIENT_MARSHAL[messageCode];\r\n      schema = CLIENT_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    case SERVER_MESSAGE:\r\n      predefMarshal = PREDEFINED_SERVER_MARSHAL[messageCode];\r\n      schema = SERVER_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  if (schema === null) {\r\n    return null;\r\n  }\r\n\r\n  let buffer = null;\r\n\r\n  if (usePredefinedMarshal && predefMarshal) {\r\n    buffer = predefMarshal(message);\r\n  } else {\r\n    let dataView = null;\r\n    let bufferLength = 0;\r\n\r\n    bufferLength = 1 + calcBufferLength(message, schema);\r\n    buffer = new ArrayBuffer(bufferLength);\r\n    dataView = new DataView(buffer);\r\n\r\n    fillBufferWithData(dataView, 1, message, schema);\r\n  }\r\n\r\n  return buffer;\r\n};\r\n\r\n/**\r\n * Marshal client message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst marshalClientMessage = (\r\n  message: ProtocolPacket,\r\n  usePredefinedMarshal = true\r\n): ArrayBuffer => {\r\n  return marshal(message, CLIENT_MESSAGE, usePredefinedMarshal);\r\n};\r\n\r\n/**\r\n * Marshal server message object to binary packet.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst marshalServerMessage = (\r\n  message: ProtocolPacket,\r\n  usePredefinedMarshal = true\r\n): ArrayBuffer => {\r\n  return marshal(message, SERVER_MESSAGE, usePredefinedMarshal);\r\n};\r\n\r\nexport { marshalClientMessage, marshalServerMessage };\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable no-bitwise */\r\nimport { StringEncodeError, StringDecodeError } from './errors';\r\n\r\n/**\r\n * Marshals a string to an Uint8Array.\r\n * https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\r\n *\r\n * @param s\r\n */\r\nconst encodeUTF8 = (s: string): Uint8Array => {\r\n  let i = 0;\r\n  const bytes = new Uint8Array(s.length * 4);\r\n\r\n  for (let ci = 0; ci !== s.length; ci += 1) {\r\n    let c = s.charCodeAt(ci);\r\n\r\n    if (c < 128) {\r\n      bytes[i++] = c;\r\n      // eslint-disable-next-line no-continue\r\n      continue;\r\n    }\r\n\r\n    if (c < 2048) {\r\n      bytes[i++] = (c >> 6) | 192;\r\n    } else {\r\n      if (c > 0xd7ff && c < 0xdc00) {\r\n        if (++ci >= s.length)\r\n          throw new StringEncodeError('UTF-8 encode: incomplete surrogate pair');\r\n\r\n        const c2 = s.charCodeAt(ci);\r\n\r\n        if (c2 < 0xdc00 || c2 > 0xdfff)\r\n          throw new StringEncodeError(\r\n            `UTF-8 encode: second surrogate character 0x${c2.toString(\r\n              16\r\n            )} at index ${ci} out of range`\r\n          );\r\n\r\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\r\n        bytes[i++] = (c >> 18) | 240;\r\n        bytes[i++] = ((c >> 12) & 63) | 128;\r\n      } else bytes[i++] = (c >> 12) | 224;\r\n\r\n      bytes[i++] = ((c >> 6) & 63) | 128;\r\n    }\r\n\r\n    bytes[i++] = (c & 63) | 128;\r\n  }\r\n\r\n  return bytes.subarray(0, i);\r\n};\r\n\r\n/**\r\n * Unmarshals a string from an Uint8Array.\r\n *\r\n * @param bytes\r\n */\r\nconst decodeUTF8 = (bytes: Uint8Array): string => {\r\n  let i = 0;\r\n  let s = '';\r\n\r\n  while (i < bytes.length) {\r\n    let c = bytes[i++];\r\n\r\n    if (c > 127) {\r\n      if (c > 191 && c < 224) {\r\n        if (i >= bytes.length)\r\n          throw new StringDecodeError('UTF-8 decode: incomplete 2-byte sequence');\r\n\r\n        c = ((c & 31) << 6) | (bytes[i++] & 63);\r\n      } else if (c > 223 && c < 240) {\r\n        if (i + 1 >= bytes.length)\r\n          throw new StringDecodeError('UTF-8 decode: incomplete 3-byte sequence');\r\n\r\n        c = ((c & 15) << 12) | ((bytes[i++] & 63) << 6) | (bytes[i++] & 63);\r\n      } else if (c > 239 && c < 248) {\r\n        if (i + 2 >= bytes.length)\r\n          throw new StringDecodeError('UTF-8 decode: incomplete 4-byte sequence');\r\n\r\n        c =\r\n          ((c & 7) << 18) |\r\n          ((bytes[i++] & 63) << 12) |\r\n          ((bytes[i++] & 63) << 6) |\r\n          (bytes[i++] & 63);\r\n      } else\r\n        throw new StringDecodeError(\r\n          `UTF-8 decode: unknown multibyte start 0x${c.toString(16)} at index ${i - 1}`\r\n        );\r\n    }\r\n\r\n    if (c <= 0xffff) s += String.fromCharCode(c);\r\n    else if (c <= 0x10ffff) {\r\n      c -= 0x10000;\r\n      s += String.fromCharCode((c >> 10) | 0xd800);\r\n      s += String.fromCharCode((c & 0x3ff) | 0xdc00);\r\n    } else\r\n      throw new StringDecodeError(\r\n        `UTF-8 decode: code point 0x${c.toString(16)} exceeds UTF-16 reach`\r\n      );\r\n  }\r\n\r\n  return s;\r\n};\r\n\r\nexport { decodeUTF8, encodeUTF8 };\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/client';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Horizon,\r\n  Pong,\r\n  Key,\r\n  Command,\r\n  Chat,\r\n  Whisper,\r\n  Say,\r\n  Teamchat,\r\n  Votemute,\r\n  Localping,\r\n} from '../types/packets-client';\r\n\r\nconst staticAckPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 5);\r\n\r\n  return buffer;\r\n})();\r\nconst staticScoredetailedPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 12);\r\n\r\n  return buffer;\r\n})();\r\n\r\nexport default {\r\n  [packet.LOGIN]: (msg: Login): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const name = encodeUTF8(msg.name);\r\n    const session = encodeUTF8(msg.session);\r\n    const flag = encodeUTF8(msg.flag);\r\n\r\n    const buffer = new ArrayBuffer(9 + name.length + session.length + flag.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // protocol, uint8\r\n    dataView.setUint8(offset, msg.protocol);\r\n    offset += 1;\r\n\r\n    // name, text\r\n    dataView.setUint8(offset, name.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < name.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, name[charOffset]);\r\n    }\r\n\r\n    offset += name.length;\r\n\r\n    // session, text\r\n    dataView.setUint8(offset, session.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < session.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, session[charOffset]);\r\n    }\r\n\r\n    offset += session.length;\r\n\r\n    // horizonX, uint16\r\n    dataView.setUint16(offset, msg.horizonX, true);\r\n    offset += 2;\r\n\r\n    // horizonY, uint16\r\n    dataView.setUint16(offset, msg.horizonY, true);\r\n    offset += 2;\r\n\r\n    // flag, text\r\n    dataView.setUint8(offset, flag.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < flag.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, flag[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.BACKUP]: (msg: Backup): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const token = encodeUTF8(msg.token);\r\n\r\n    const buffer = new ArrayBuffer(2 + token.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // token, text\r\n    dataView.setUint8(offset, token.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < token.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, token[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.HORIZON]: (msg: Horizon): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // horizonX, uint16\r\n    dataView.setUint16(offset, msg.horizonX, true);\r\n    offset += 2;\r\n\r\n    // horizonY, uint16\r\n    dataView.setUint16(offset, msg.horizonY, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.ACK]: (): ArrayBuffer => staticAckPacket,\r\n\r\n  [packet.PONG]: (msg: Pong): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // num, uint32\r\n    dataView.setUint32(offset, msg.num, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.KEY]: (msg: Key): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(7);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // seq, uint32\r\n    dataView.setUint32(offset, msg.seq, true);\r\n    offset += 4;\r\n\r\n    // key, uint8\r\n    dataView.setUint8(offset, msg.key);\r\n    offset += 1;\r\n\r\n    // state, boolean\r\n    dataView.setUint8(offset, msg.state === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.COMMAND]: (msg: Command): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const com = encodeUTF8(msg.com);\r\n    const data = encodeUTF8(msg.data);\r\n\r\n    const buffer = new ArrayBuffer(3 + com.length + data.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // com, text\r\n    dataView.setUint8(offset, com.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < com.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, com[charOffset]);\r\n    }\r\n\r\n    offset += com.length;\r\n\r\n    // data, text\r\n    dataView.setUint8(offset, data.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < data.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, data[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCOREDETAILED]: (): ArrayBuffer => staticScoredetailedPacket,\r\n\r\n  [packet.CHAT]: (msg: Chat): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.WHISPER]: (msg: Whisper): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SAY]: (msg: Say): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.TEAMCHAT]: (msg: Teamchat): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(2 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.VOTEMUTE]: (msg: Votemute): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.LOCALPING]: (msg: Localping): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // auth, uint32\r\n    dataView.setUint32(offset, msg.auth, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n};\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/server';\r\nimport { encodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Ping,\r\n  PingResult,\r\n  Error,\r\n  CommandReply,\r\n  PlayerNew,\r\n  PlayerLeave,\r\n  PlayerUpdate,\r\n  PlayerFire,\r\n  PlayerHit,\r\n  PlayerRespawn,\r\n  PlayerFlag,\r\n  PlayerKill,\r\n  PlayerUpgrade,\r\n  PlayerType,\r\n  PlayerPowerup,\r\n  PlayerLevel,\r\n  PlayerReteam,\r\n  GameFlag,\r\n  GameSpectate,\r\n  GamePlayersalive,\r\n  GameFirewall,\r\n  EventRepel,\r\n  EventBoost,\r\n  EventBounce,\r\n  EventStealth,\r\n  EventLeavehorizon,\r\n  MobUpdate,\r\n  MobUpdateStationary,\r\n  MobDespawn,\r\n  MobDespawnCoords,\r\n  ChatPublic,\r\n  ChatTeam,\r\n  ChatSay,\r\n  ChatWhisper,\r\n  ChatVotemutepassed,\r\n  ScoreUpdate,\r\n  ScoreBoard,\r\n  ScoreDetailed,\r\n  ScoreDetailedCtf,\r\n  ScoreDetailedBtr,\r\n  ServerMessage,\r\n  ServerCustom,\r\n} from '../types/packets-server';\r\n\r\nconst staticBackupPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 1);\r\n\r\n  return buffer;\r\n})();\r\nconst staticAckPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 7);\r\n\r\n  return buffer;\r\n})();\r\nconst staticChatVotemutedPacket = ((): ArrayBuffer => {\r\n  const buffer = new ArrayBuffer(1);\r\n  const dataView = new DataView(buffer);\r\n\r\n  dataView.setUint8(0, 79);\r\n\r\n  return buffer;\r\n})();\r\n\r\nexport default {\r\n  [packet.LOGIN]: (msg: Login): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    const arrStrings = [];\r\n    let arrStringsOffset = 0;\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 17;\r\n\r\n      // String \"name\" size calculation\r\n      arrStrings[arrStringsOffset] = encodeUTF8(msg.players[i].name);\r\n      arraysSize += arrStrings[arrStringsOffset].length;\r\n      arrStringsOffset += 1;\r\n    }\r\n\r\n    // Array \"bots\" size calculation\r\n    for (let i = 0; i < msg.bots.length; i += 1) {\r\n      arraysSize += 2;\r\n    }\r\n\r\n    // Root strings size calculation\r\n    const token = encodeUTF8(msg.token);\r\n    const room = encodeUTF8(msg.room);\r\n    const serverConfiguration = encodeUTF8(msg.serverConfiguration);\r\n\r\n    const buffer = new ArrayBuffer(\r\n      19 + token.length + room.length + serverConfiguration.length + arraysSize\r\n    );\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    arrStringsOffset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // success, boolean\r\n    dataView.setUint8(offset, msg.success === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // team, uint16\r\n    dataView.setUint16(offset, msg.team, true);\r\n    offset += 2;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // token, text\r\n    dataView.setUint8(offset, token.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < token.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, token[charOffset]);\r\n    }\r\n\r\n    offset += token.length;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // room, text\r\n    dataView.setUint8(offset, room.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < room.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, room[charOffset]);\r\n    }\r\n\r\n    offset += room.length;\r\n\r\n    // players, array\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint16(offset, players.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[status], uint8\r\n        dataView.setUint8(offset, players[i].status);\r\n        offset += 1;\r\n\r\n        // players[level], uint8\r\n        dataView.setUint8(offset, players[i].level);\r\n        offset += 1;\r\n\r\n        // players[name], text\r\n        dataView.setUint8(offset, arrStrings[arrStringsOffset].length);\r\n        offset += 1;\r\n\r\n        for (\r\n          let charOffset = 0;\r\n          charOffset < arrStrings[arrStringsOffset].length;\r\n          charOffset += 1\r\n        ) {\r\n          dataView.setUint8(offset + charOffset, arrStrings[arrStringsOffset][charOffset]);\r\n        }\r\n\r\n        offset += arrStrings[arrStringsOffset].length;\r\n        arrStringsOffset += 1;\r\n\r\n        // players[type], uint8\r\n        dataView.setUint8(offset, players[i].type);\r\n        offset += 1;\r\n\r\n        // players[team], uint16\r\n        dataView.setUint16(offset, players[i].team, true);\r\n        offset += 2;\r\n\r\n        // players[posX], coordx\r\n        dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[posY], coordy\r\n        dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[rot], rotation\r\n        dataView.setUint16(offset, players[i].rot * 6553.6, true);\r\n        offset += 2;\r\n\r\n        // players[flag], uint16\r\n        dataView.setUint16(offset, players[i].flag, true);\r\n        offset += 2;\r\n\r\n        // players[upgrades], uint8\r\n        dataView.setUint8(offset, players[i].upgrades);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    // serverConfiguration, textbig\r\n    dataView.setUint16(offset, serverConfiguration.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < serverConfiguration.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, serverConfiguration[charOffset]);\r\n    }\r\n\r\n    offset += serverConfiguration.length;\r\n\r\n    // bots, array\r\n    {\r\n      const { bots } = msg;\r\n\r\n      dataView.setUint16(offset, bots.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < bots.length; i += 1) {\r\n        // bots[id], uint16\r\n        dataView.setUint16(offset, bots[i].id, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.BACKUP]: (): ArrayBuffer => staticBackupPacket,\r\n\r\n  [packet.PING]: (msg: Ping): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(9);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // num, uint32\r\n    dataView.setUint32(offset, msg.num, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PING_RESULT]: (msg: PingResult): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(11);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // ping, uint16\r\n    dataView.setUint16(offset, msg.ping, true);\r\n    offset += 2;\r\n\r\n    // playerstotal, uint32\r\n    dataView.setUint32(offset, msg.playerstotal, true);\r\n    offset += 4;\r\n\r\n    // playersgame, uint32\r\n    dataView.setUint32(offset, msg.playersgame, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.ACK]: (): ArrayBuffer => staticAckPacket,\r\n\r\n  [packet.ERROR]: (msg: Error): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(2);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // error, uint8\r\n    dataView.setUint8(offset, msg.error);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.COMMAND_REPLY]: (msg: CommandReply): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // text, textbig\r\n    dataView.setUint16(offset, text.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_NEW]: (msg: PlayerNew): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const name = encodeUTF8(msg.name);\r\n\r\n    const buffer = new ArrayBuffer(18 + name.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // status, uint8\r\n    dataView.setUint8(offset, msg.status);\r\n    offset += 1;\r\n\r\n    // name, text\r\n    dataView.setUint8(offset, name.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < name.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, name[charOffset]);\r\n    }\r\n\r\n    offset += name.length;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // team, uint16\r\n    dataView.setUint16(offset, msg.team, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // flag, uint16\r\n    dataView.setUint16(offset, msg.flag, true);\r\n    offset += 2;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    // isBot, boolean\r\n    dataView.setUint8(offset, msg.isBot === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_LEAVE]: (msg: PlayerLeave): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_UPDATE]: (msg: PlayerUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(21);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // keystate, uint8\r\n    dataView.setUint8(offset, msg.keystate);\r\n    offset += 1;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_FIRE]: (msg: PlayerFire): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"projectiles\" size calculation\r\n    for (let i = 0; i < msg.projectiles.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(11 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    // projectiles, arraysmall\r\n    {\r\n      const { projectiles } = msg;\r\n\r\n      dataView.setUint8(offset, projectiles.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < projectiles.length; i += 1) {\r\n        // projectiles[id], uint16\r\n        dataView.setUint16(offset, projectiles[i].id, true);\r\n        offset += 2;\r\n\r\n        // projectiles[type], uint8\r\n        dataView.setUint8(offset, projectiles[i].type);\r\n        offset += 1;\r\n\r\n        // projectiles[posX], coordx\r\n        dataView.setUint16(offset, projectiles[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[posY], coordy\r\n        dataView.setUint16(offset, projectiles[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[speedX], speed\r\n        dataView.setUint16(offset, projectiles[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[speedY], speed\r\n        dataView.setUint16(offset, projectiles[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[accelX], accel\r\n        dataView.setUint16(offset, projectiles[i].accelX * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[accelY], accel\r\n        dataView.setUint16(offset, projectiles[i].accelY * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // projectiles[maxSpeed], speed\r\n        dataView.setUint16(offset, projectiles[i].maxSpeed * 1638.4 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_HIT]: (msg: PlayerHit): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 5;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(11 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // owner, uint16\r\n    dataView.setUint16(offset, msg.owner, true);\r\n    offset += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint8(offset, players.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[health], healthenergy\r\n        dataView.setUint8(offset, players[i].health * 255);\r\n        offset += 1;\r\n\r\n        // players[healthRegen], regen\r\n        dataView.setUint16(offset, players[i].healthRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_RESPAWN]: (msg: PlayerRespawn): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(12);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // upgrades, uint8\r\n    dataView.setUint8(offset, msg.upgrades);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_FLAG]: (msg: PlayerFlag): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // flag, uint16\r\n    dataView.setUint16(offset, msg.flag, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_KILL]: (msg: PlayerKill): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(9);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // killer, uint16\r\n    dataView.setUint16(offset, msg.killer, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_UPGRADE]: (msg: PlayerUpgrade): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(8);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // upgrades, uint16\r\n    dataView.setUint16(offset, msg.upgrades, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // speed, uint8\r\n    dataView.setUint8(offset, msg.speed);\r\n    offset += 1;\r\n\r\n    // defense, uint8\r\n    dataView.setUint8(offset, msg.defense);\r\n    offset += 1;\r\n\r\n    // energy, uint8\r\n    dataView.setUint8(offset, msg.energy);\r\n    offset += 1;\r\n\r\n    // missile, uint8\r\n    dataView.setUint8(offset, msg.missile);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_TYPE]: (msg: PlayerType): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_POWERUP]: (msg: PlayerPowerup): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(6);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // duration, uint32\r\n    dataView.setUint32(offset, msg.duration, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_LEVEL]: (msg: PlayerLevel): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(5);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // level, uint8\r\n    dataView.setUint8(offset, msg.level);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.PLAYER_RETEAM]: (msg: PlayerReteam): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 4;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // players, array\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint16(offset, players.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[team], uint16\r\n        dataView.setUint16(offset, players[i].team, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_FLAG]: (msg: GameFlag): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(13);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // flag, uint8\r\n    dataView.setUint8(offset, msg.flag);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // blueteam, uint8\r\n    dataView.setUint8(offset, msg.blueteam);\r\n    offset += 1;\r\n\r\n    // redteam, uint8\r\n    dataView.setUint8(offset, msg.redteam);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_SPECTATE]: (msg: GameSpectate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_PLAYERSALIVE]: (msg: GamePlayersalive): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // players, uint16\r\n    dataView.setUint16(offset, msg.players, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.GAME_FIREWALL]: (msg: GameFirewall): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(15);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // status, uint8\r\n    dataView.setUint8(offset, msg.status);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // radius, float32\r\n    dataView.setFloat32(offset, msg.radius, true);\r\n    offset += 4;\r\n\r\n    // speed, float32\r\n    dataView.setFloat32(offset, msg.speed, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_REPEL]: (msg: EventRepel): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"players\" size calculation\r\n    for (let i = 0; i < msg.players.length; i += 1) {\r\n      arraysSize += 19;\r\n    }\r\n\r\n    // Array \"mobs\" size calculation\r\n    for (let i = 0; i < msg.mobs.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(22 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const { players } = msg;\r\n\r\n      dataView.setUint8(offset, players.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < players.length; i += 1) {\r\n        // players[id], uint16\r\n        dataView.setUint16(offset, players[i].id, true);\r\n        offset += 2;\r\n\r\n        // players[keystate], uint8\r\n        dataView.setUint8(offset, players[i].keystate);\r\n        offset += 1;\r\n\r\n        // players[posX], coordx\r\n        dataView.setUint16(offset, players[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[posY], coordy\r\n        dataView.setUint16(offset, players[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[rot], rotation\r\n        dataView.setUint16(offset, players[i].rot * 6553.6, true);\r\n        offset += 2;\r\n\r\n        // players[speedX], speed\r\n        dataView.setUint16(offset, players[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[speedY], speed\r\n        dataView.setUint16(offset, players[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[energy], healthenergy\r\n        dataView.setUint8(offset, players[i].energy * 255);\r\n        offset += 1;\r\n\r\n        // players[energyRegen], regen\r\n        dataView.setUint16(offset, players[i].energyRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n\r\n        // players[playerHealth], healthenergy\r\n        dataView.setUint8(offset, players[i].playerHealth * 255);\r\n        offset += 1;\r\n\r\n        // players[playerHealthRegen], regen\r\n        dataView.setUint16(offset, players[i].playerHealthRegen * 1e6 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    // mobs, arraysmall\r\n    {\r\n      const { mobs } = msg;\r\n\r\n      dataView.setUint8(offset, mobs.length);\r\n      offset += 1;\r\n\r\n      for (let i = 0; i < mobs.length; i += 1) {\r\n        // mobs[id], uint16\r\n        dataView.setUint16(offset, mobs[i].id, true);\r\n        offset += 2;\r\n\r\n        // mobs[type], uint8\r\n        dataView.setUint8(offset, mobs[i].type);\r\n        offset += 1;\r\n\r\n        // mobs[posX], coordx\r\n        dataView.setUint16(offset, mobs[i].posX * 2 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[posY], coordy\r\n        dataView.setUint16(offset, mobs[i].posY * 4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[speedX], speed\r\n        dataView.setUint16(offset, mobs[i].speedX * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[speedY], speed\r\n        dataView.setUint16(offset, mobs[i].speedY * 1638.4 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[accelX], accel\r\n        dataView.setUint16(offset, mobs[i].accelX * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[accelY], accel\r\n        dataView.setUint16(offset, mobs[i].accelY * 32768 + 32768, true);\r\n        offset += 2;\r\n\r\n        // mobs[maxSpeed], speed\r\n        dataView.setUint16(offset, mobs[i].maxSpeed * 1638.4 + 32768, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_BOOST]: (msg: EventBoost): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(23);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // boost, boolean\r\n    dataView.setUint8(offset, msg.boost === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_BOUNCE]: (msg: EventBounce): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(20);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // keystate, uint8\r\n    dataView.setUint8(offset, msg.keystate);\r\n    offset += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const value = msg.posX * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const value = msg.posY * 512 + 8388608;\r\n      const u8 = value % 256;\r\n      const u16 = (value - u8) / 256;\r\n\r\n      dataView.setUint16(offset, u16, true);\r\n      offset += 2;\r\n\r\n      dataView.setUint8(offset, u8);\r\n      offset += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    dataView.setUint16(offset, msg.rot * 6553.6, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_STEALTH]: (msg: EventStealth): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(7);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // state, boolean\r\n    dataView.setUint8(offset, msg.state === false ? 0 : 1);\r\n    offset += 1;\r\n\r\n    // energy, healthenergy\r\n    dataView.setUint8(offset, msg.energy * 255);\r\n    offset += 1;\r\n\r\n    // energyRegen, regen\r\n    dataView.setUint16(offset, msg.energyRegen * 1e6 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.EVENT_LEAVEHORIZON]: (msg: EventLeavehorizon): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_UPDATE]: (msg: MobUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(22);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // clock, uint32\r\n    dataView.setUint32(offset, msg.clock, true);\r\n    offset += 4;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedX, speed\r\n    dataView.setUint16(offset, msg.speedX * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // speedY, speed\r\n    dataView.setUint16(offset, msg.speedY * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    // accelX, accel\r\n    dataView.setUint16(offset, msg.accelX * 32768 + 32768, true);\r\n    offset += 2;\r\n\r\n    // accelY, accel\r\n    dataView.setUint16(offset, msg.accelY * 32768 + 32768, true);\r\n    offset += 2;\r\n\r\n    // maxSpeed, speed\r\n    dataView.setUint16(offset, msg.maxSpeed * 1638.4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_UPDATE_STATIONARY]: (msg: MobUpdateStationary): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(12);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, float32\r\n    dataView.setFloat32(offset, msg.posX, true);\r\n    offset += 4;\r\n\r\n    // posY, float32\r\n    dataView.setFloat32(offset, msg.posY, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN]: (msg: MobDespawn): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(4);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN_COORDS]: (msg: MobDespawnCoords): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(8);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // posX, coordx\r\n    dataView.setUint16(offset, msg.posX * 2 + 32768, true);\r\n    offset += 2;\r\n\r\n    // posY, coordy\r\n    dataView.setUint16(offset, msg.posY * 4 + 32768, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_PUBLIC]: (msg: ChatPublic): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_TEAM]: (msg: ChatTeam): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_SAY]: (msg: ChatSay): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(4 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_WHISPER]: (msg: ChatWhisper): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(6 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // from, uint16\r\n    dataView.setUint16(offset, msg.from, true);\r\n    offset += 2;\r\n\r\n    // to, uint16\r\n    dataView.setUint16(offset, msg.to, true);\r\n    offset += 2;\r\n\r\n    // text, text\r\n    dataView.setUint8(offset, text.length);\r\n    offset += 1;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTEPASSED]: (msg: ChatVotemutepassed): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(3);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTED]: (): ArrayBuffer => staticChatVotemutedPacket,\r\n\r\n  [packet.SCORE_UPDATE]: (msg: ScoreUpdate): ArrayBuffer => {\r\n    const buffer = new ArrayBuffer(21);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // id, uint16\r\n    dataView.setUint16(offset, msg.id, true);\r\n    offset += 2;\r\n\r\n    // score, uint32\r\n    dataView.setUint32(offset, msg.score, true);\r\n    offset += 4;\r\n\r\n    // earnings, uint32\r\n    dataView.setUint32(offset, msg.earnings, true);\r\n    offset += 4;\r\n\r\n    // upgrades, uint16\r\n    dataView.setUint16(offset, msg.upgrades, true);\r\n    offset += 2;\r\n\r\n    // totalkills, uint32\r\n    dataView.setUint32(offset, msg.totalkills, true);\r\n    offset += 4;\r\n\r\n    // totaldeaths, uint32\r\n    dataView.setUint32(offset, msg.totaldeaths, true);\r\n    offset += 4;\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_BOARD]: (msg: ScoreBoard): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"data\" size calculation\r\n    for (let i = 0; i < msg.data.length; i += 1) {\r\n      arraysSize += 7;\r\n    }\r\n\r\n    // Array \"rankings\" size calculation\r\n    for (let i = 0; i < msg.rankings.length; i += 1) {\r\n      arraysSize += 4;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(5 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // data, array\r\n    {\r\n      const { data } = msg;\r\n\r\n      dataView.setUint16(offset, data.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < data.length; i += 1) {\r\n        // data[id], uint16\r\n        dataView.setUint16(offset, data[i].id, true);\r\n        offset += 2;\r\n\r\n        // data[score], uint32\r\n        dataView.setUint32(offset, data[i].score, true);\r\n        offset += 4;\r\n\r\n        // data[level], uint8\r\n        dataView.setUint8(offset, data[i].level);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    // rankings, array\r\n    {\r\n      const { rankings } = msg;\r\n\r\n      dataView.setUint16(offset, rankings.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < rankings.length; i += 1) {\r\n        // rankings[id], uint16\r\n        dataView.setUint16(offset, rankings[i].id, true);\r\n        offset += 2;\r\n\r\n        // rankings[x], uint8\r\n        dataView.setUint8(offset, rankings[i].x);\r\n        offset += 1;\r\n\r\n        // rankings[y], uint8\r\n        dataView.setUint8(offset, rankings[i].y);\r\n        offset += 1;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED]: (msg: ScoreDetailed): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 17;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_CTF]: (msg: ScoreDetailedCtf): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 19;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[captures], uint16\r\n        dataView.setUint16(offset, scores[i].captures, true);\r\n        offset += 2;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_BTR]: (msg: ScoreDetailedBtr): ArrayBuffer => {\r\n    // Arrays size calculation\r\n    let arraysSize = 0;\r\n\r\n    // Array \"scores\" size calculation\r\n    for (let i = 0; i < msg.scores.length; i += 1) {\r\n      arraysSize += 20;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(3 + arraysSize);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // scores, array\r\n    {\r\n      const { scores } = msg;\r\n\r\n      dataView.setUint16(offset, scores.length, true);\r\n      offset += 2;\r\n\r\n      for (let i = 0; i < scores.length; i += 1) {\r\n        // scores[id], uint16\r\n        dataView.setUint16(offset, scores[i].id, true);\r\n        offset += 2;\r\n\r\n        // scores[level], uint8\r\n        dataView.setUint8(offset, scores[i].level);\r\n        offset += 1;\r\n\r\n        // scores[alive], boolean\r\n        dataView.setUint8(offset, scores[i].alive === false ? 0 : 1);\r\n        offset += 1;\r\n\r\n        // scores[wins], uint16\r\n        dataView.setUint16(offset, scores[i].wins, true);\r\n        offset += 2;\r\n\r\n        // scores[score], uint32\r\n        dataView.setUint32(offset, scores[i].score, true);\r\n        offset += 4;\r\n\r\n        // scores[kills], uint16\r\n        dataView.setUint16(offset, scores[i].kills, true);\r\n        offset += 2;\r\n\r\n        // scores[deaths], uint16\r\n        dataView.setUint16(offset, scores[i].deaths, true);\r\n        offset += 2;\r\n\r\n        // scores[damage], float32\r\n        dataView.setFloat32(offset, scores[i].damage, true);\r\n        offset += 4;\r\n\r\n        // scores[ping], uint16\r\n        dataView.setUint16(offset, scores[i].ping, true);\r\n        offset += 2;\r\n      }\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SERVER_MESSAGE]: (msg: ServerMessage): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const text = encodeUTF8(msg.text);\r\n\r\n    const buffer = new ArrayBuffer(8 + text.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // duration, uint32\r\n    dataView.setUint32(offset, msg.duration, true);\r\n    offset += 4;\r\n\r\n    // text, textbig\r\n    dataView.setUint16(offset, text.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < text.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, text[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  [packet.SERVER_CUSTOM]: (msg: ServerCustom): ArrayBuffer => {\r\n    // Root strings size calculation\r\n    const data = encodeUTF8(msg.data);\r\n\r\n    const buffer = new ArrayBuffer(4 + data.length);\r\n    const dataView = new DataView(buffer);\r\n\r\n    let offset = 0;\r\n\r\n    dataView.setUint8(offset, msg.c);\r\n    offset += 1;\r\n\r\n    // type, uint8\r\n    dataView.setUint8(offset, msg.type);\r\n    offset += 1;\r\n\r\n    // data, textbig\r\n    dataView.setUint16(offset, data.length, true);\r\n    offset += 2;\r\n\r\n    for (let charOffset = 0; charOffset < data.length; charOffset += 1) {\r\n      dataView.setUint8(offset + charOffset, data[charOffset]);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n};\r\n","import { ProtocolPacket } from '../packets';\r\nimport CLIENT_SCHEMAS from '../schemas/client';\r\nimport SERVER_SCHEMAS from '../schemas/server';\r\nimport { decodeUTF8 } from '../support/utils';\r\nimport { DATA_TYPES } from '../types/data';\r\nimport PREDEFINED_CLIENT_MARSHAL from './client';\r\nimport PREDEFINED_SERVER_MARSHAL from './server';\r\n\r\nconst SERVER_BUFFER = 0;\r\nconst CLIENT_BUFFER = 1;\r\n\r\nconst readBufferData = (\r\n  dataView: DataView,\r\n  startReadIndex = 0,\r\n  schema: [string, DATA_TYPES, [string, DATA_TYPES, []?][]?][]\r\n): ProtocolPacket => {\r\n  const message: ProtocolPacket = {};\r\n  let readIndex = startReadIndex;\r\n\r\n  if (readIndex === 0) {\r\n    message.c = dataView.getUint8(0);\r\n    readIndex += 1;\r\n  }\r\n\r\n  for (let fieldIndex = 0; fieldIndex < schema.length; fieldIndex += 1) {\r\n    const [fieldName, fieldType, subSchema] = schema[fieldIndex];\r\n\r\n    switch (fieldType) {\r\n      case DATA_TYPES.text:\r\n      case DATA_TYPES.textbig:\r\n        {\r\n          let stringLength = 0;\r\n\r\n          if (fieldType === DATA_TYPES.text) {\r\n            stringLength = dataView.getUint8(readIndex);\r\n            readIndex += 1;\r\n          } else {\r\n            stringLength = dataView.getUint16(readIndex, true);\r\n            readIndex += 2;\r\n          }\r\n\r\n          const encodedString = new Uint8Array(stringLength);\r\n\r\n          for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n            encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n          }\r\n\r\n          message[fieldName] = decodeUTF8(encodedString);\r\n          readIndex += stringLength;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.array:\r\n      case DATA_TYPES.arraysmall:\r\n        {\r\n          let arrayLength = 0;\r\n\r\n          if (fieldType === DATA_TYPES.arraysmall) {\r\n            arrayLength = dataView.getUint8(readIndex);\r\n            readIndex += 1;\r\n          } else {\r\n            arrayLength = dataView.getUint16(readIndex, true);\r\n            readIndex += 2;\r\n          }\r\n\r\n          message[fieldName] = [];\r\n\r\n          for (let arrayElementIndex = 0; arrayElementIndex < arrayLength; arrayElementIndex += 1) {\r\n            const arrayElement = {};\r\n\r\n            for (\r\n              let subSchemaFieldIndex = 0;\r\n              subSchemaFieldIndex < subSchema.length;\r\n              subSchemaFieldIndex += 1\r\n            ) {\r\n              const [subFieldName, subFieldType] = subSchema[subSchemaFieldIndex];\r\n\r\n              switch (subFieldType) {\r\n                case DATA_TYPES.text:\r\n                case DATA_TYPES.textbig:\r\n                  {\r\n                    let stringLength = 0;\r\n\r\n                    if (subFieldType === DATA_TYPES.text) {\r\n                      stringLength = dataView.getUint8(readIndex);\r\n                      readIndex += 1;\r\n                    } else {\r\n                      stringLength = dataView.getUint16(readIndex, true);\r\n                      readIndex += 2;\r\n                    }\r\n\r\n                    const encodedString = new Uint8Array(stringLength);\r\n\r\n                    for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n                      encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n                    }\r\n\r\n                    arrayElement[subFieldName] = decodeUTF8(encodedString);\r\n                    readIndex += stringLength;\r\n                  }\r\n\r\n                  break;\r\n\r\n                case DATA_TYPES.uint8:\r\n                  arrayElement[subFieldName] = dataView.getUint8(readIndex);\r\n                  readIndex += 1;\r\n                  break;\r\n\r\n                case DATA_TYPES.uint16:\r\n                  arrayElement[subFieldName] = dataView.getUint16(readIndex, true);\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.uint24:\r\n                  {\r\n                    const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n                    readIndex += 2;\r\n                    arrayElement[subFieldName] = u16 + dataView.getUint8(readIndex);\r\n                    readIndex += 1;\r\n                  }\r\n\r\n                  break;\r\n\r\n                case DATA_TYPES.uint32:\r\n                  arrayElement[subFieldName] = dataView.getUint32(readIndex, true);\r\n                  readIndex += 4;\r\n                  break;\r\n\r\n                case DATA_TYPES.float32:\r\n                  arrayElement[subFieldName] = dataView.getFloat32(readIndex, true);\r\n                  readIndex += 4;\r\n                  break;\r\n\r\n                case DATA_TYPES.float64:\r\n                  arrayElement[subFieldName] = dataView.getFloat64(readIndex, true);\r\n                  readIndex += 8;\r\n                  break;\r\n\r\n                case DATA_TYPES.boolean:\r\n                  arrayElement[subFieldName] = dataView.getUint8(readIndex) !== 0;\r\n                  readIndex += 1;\r\n                  break;\r\n\r\n                case DATA_TYPES.speed:\r\n                  arrayElement[subFieldName] =\r\n                    (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.accel:\r\n                  arrayElement[subFieldName] =\r\n                    (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.coordx:\r\n                  arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.coordy:\r\n                  arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.coord24:\r\n                  {\r\n                    const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n                    readIndex += 2;\r\n                    arrayElement[subFieldName] =\r\n                      (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n                    readIndex += 1;\r\n                  }\r\n\r\n                  break;\r\n\r\n                case DATA_TYPES.rotation:\r\n                  arrayElement[subFieldName] = dataView.getUint16(readIndex, true) / 6553.6;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.regen:\r\n                  arrayElement[subFieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n                  readIndex += 2;\r\n                  break;\r\n\r\n                case DATA_TYPES.healthenergy:\r\n                  arrayElement[subFieldName] = dataView.getUint8(readIndex) / 255;\r\n                  readIndex += 1;\r\n                  break;\r\n\r\n                default:\r\n                  throw Error();\r\n              }\r\n            }\r\n\r\n            (message[fieldName] as {}[]).push(arrayElement);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint8:\r\n        message[fieldName] = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.uint16:\r\n        message[fieldName] = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.uint24:\r\n        {\r\n          const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n          readIndex += 2;\r\n          message[fieldName] = u16 + dataView.getUint8(readIndex);\r\n          readIndex += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.uint32:\r\n        message[fieldName] = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float32:\r\n        message[fieldName] = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n        break;\r\n\r\n      case DATA_TYPES.float64:\r\n        message[fieldName] = dataView.getFloat64(readIndex, true);\r\n        readIndex += 8;\r\n        break;\r\n\r\n      case DATA_TYPES.boolean:\r\n        message[fieldName] = dataView.getUint8(readIndex) !== 0;\r\n        readIndex += 1;\r\n        break;\r\n\r\n      case DATA_TYPES.speed:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.accel:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordx:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coordy:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.coord24:\r\n        {\r\n          const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n          readIndex += 2;\r\n          message[fieldName] = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n          readIndex += 1;\r\n        }\r\n\r\n        break;\r\n\r\n      case DATA_TYPES.rotation:\r\n        message[fieldName] = dataView.getUint16(readIndex, true) / 6553.6;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.regen:\r\n        message[fieldName] = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n        break;\r\n\r\n      case DATA_TYPES.healthenergy:\r\n        message[fieldName] = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n        break;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\nconst unmarshal = (\r\n  buffer: ArrayBuffer,\r\n  type: number,\r\n  usePredefinedMarshal: boolean\r\n): ProtocolPacket => {\r\n  const dataView = new DataView(buffer);\r\n  const messageCode = dataView.getUint8(0);\r\n\r\n  let predefMarshal = null;\r\n  let message = null;\r\n  let schema = null;\r\n\r\n  switch (type) {\r\n    case CLIENT_BUFFER:\r\n      predefMarshal = PREDEFINED_CLIENT_MARSHAL[messageCode];\r\n      schema = CLIENT_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    case SERVER_BUFFER:\r\n      predefMarshal = PREDEFINED_SERVER_MARSHAL[messageCode];\r\n      schema = SERVER_SCHEMAS[messageCode];\r\n      break;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  if (usePredefinedMarshal && predefMarshal) {\r\n    message = predefMarshal(buffer);\r\n  } else {\r\n    if (schema === null) {\r\n      return null;\r\n    }\r\n\r\n    message = readBufferData(dataView, 0, schema);\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\n/**\r\n * Unmarshal client binary packet to protocol message.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst unmarshalClientMessage = (\r\n  message: ArrayBuffer,\r\n  usePredefinedMarshal = true\r\n): ProtocolPacket => {\r\n  return unmarshal(message, CLIENT_BUFFER, usePredefinedMarshal);\r\n};\r\n\r\n/**\r\n * Unmarshal server binary packet to protocol message.\r\n * Pre generated converters are a bit faster.\r\n *\r\n * @param message\r\n * @param usePredefinedMarshal use pre generated converters.\r\n */\r\nconst unmarshalServerMessage = (\r\n  message: ArrayBuffer,\r\n  usePredefinedMarshal = true\r\n): ProtocolPacket => {\r\n  return unmarshal(message, SERVER_BUFFER, usePredefinedMarshal);\r\n};\r\n\r\nexport { unmarshalClientMessage, unmarshalServerMessage };\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/client';\r\nimport { decodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Horizon,\r\n  Ack,\r\n  Pong,\r\n  Key,\r\n  Command,\r\n  Scoredetailed,\r\n  Chat,\r\n  Whisper,\r\n  Say,\r\n  Teamchat,\r\n  Votemute,\r\n  Localping,\r\n} from '../types/packets-client';\r\n\r\nconst staticAckPacket: Ack = { c: 5 };\r\nconst staticScoredetailedPacket: Scoredetailed = { c: 12 };\r\n\r\nexport default {\r\n  [packet.LOGIN]: (buffer: ArrayBuffer): Login => {\r\n    const msg: Login = { c: 0 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // protocol, uint8\r\n    msg.protocol = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // name, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.name = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // session, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.session = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // horizonX, uint16\r\n    msg.horizonX = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // horizonY, uint16\r\n    msg.horizonY = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // flag, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.flag = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.BACKUP]: (buffer: ArrayBuffer): Backup => {\r\n    const msg: Backup = { c: 1 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // token, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.token = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.HORIZON]: (buffer: ArrayBuffer): Horizon => {\r\n    const msg: Horizon = { c: 2 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // horizonX, uint16\r\n    msg.horizonX = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // horizonY, uint16\r\n    msg.horizonY = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.ACK]: (): Ack => staticAckPacket,\r\n\r\n  [packet.PONG]: (buffer: ArrayBuffer): Pong => {\r\n    const msg: Pong = { c: 6 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // num, uint32\r\n    msg.num = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.KEY]: (buffer: ArrayBuffer): Key => {\r\n    const msg: Key = { c: 10 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // seq, uint32\r\n    msg.seq = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // key, uint8\r\n    msg.key = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // state, boolean\r\n    msg.state = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.COMMAND]: (buffer: ArrayBuffer): Command => {\r\n    const msg: Command = { c: 11 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // com, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.com = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // data, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.data = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCOREDETAILED]: (): Scoredetailed => staticScoredetailedPacket,\r\n\r\n  [packet.CHAT]: (buffer: ArrayBuffer): Chat => {\r\n    const msg: Chat = { c: 20 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.WHISPER]: (buffer: ArrayBuffer): Whisper => {\r\n    const msg: Whisper = { c: 21 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SAY]: (buffer: ArrayBuffer): Say => {\r\n    const msg: Say = { c: 22 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.TEAMCHAT]: (buffer: ArrayBuffer): Teamchat => {\r\n    const msg: Teamchat = { c: 23 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.VOTEMUTE]: (buffer: ArrayBuffer): Votemute => {\r\n    const msg: Votemute = { c: 24 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.LOCALPING]: (buffer: ArrayBuffer): Localping => {\r\n    const msg: Localping = { c: 255 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // auth, uint32\r\n    msg.auth = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n};\r\n","/*\r\n *\r\n * This file was created automatically with generator\r\n * Please don't change it manually.\r\n *\r\n */\r\n\r\nimport packet from '../packets/server';\r\nimport { decodeUTF8 } from '../support/utils';\r\nimport {\r\n  Login,\r\n  Backup,\r\n  Ping,\r\n  PingResult,\r\n  Ack,\r\n  Error,\r\n  CommandReply,\r\n  PlayerNew,\r\n  PlayerLeave,\r\n  PlayerUpdate,\r\n  PlayerFire,\r\n  PlayerHit,\r\n  PlayerRespawn,\r\n  PlayerFlag,\r\n  PlayerKill,\r\n  PlayerUpgrade,\r\n  PlayerType,\r\n  PlayerPowerup,\r\n  PlayerLevel,\r\n  PlayerReteam,\r\n  GameFlag,\r\n  GameSpectate,\r\n  GamePlayersalive,\r\n  GameFirewall,\r\n  EventRepel,\r\n  EventBoost,\r\n  EventBounce,\r\n  EventStealth,\r\n  EventLeavehorizon,\r\n  MobUpdate,\r\n  MobUpdateStationary,\r\n  MobDespawn,\r\n  MobDespawnCoords,\r\n  ChatPublic,\r\n  ChatTeam,\r\n  ChatSay,\r\n  ChatWhisper,\r\n  ChatVotemutepassed,\r\n  ChatVotemuted,\r\n  ScoreUpdate,\r\n  ScoreBoard,\r\n  ScoreDetailed,\r\n  ScoreDetailedCtf,\r\n  ScoreDetailedBtr,\r\n  ServerMessage,\r\n  ServerCustom,\r\n} from '../types/packets-server';\r\n\r\nconst staticBackupPacket: Backup = { c: 1 };\r\nconst staticAckPacket: Ack = { c: 7 };\r\nconst staticChatVotemutedPacket: ChatVotemuted = { c: 79 };\r\n\r\nexport default {\r\n  [packet.LOGIN]: (buffer: ArrayBuffer): Login => {\r\n    const msg: Login = { c: 0 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // success, boolean\r\n    msg.success = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // team, uint16\r\n    msg.team = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // token, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.token = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // room, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.room = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // players, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: Login['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // status, uint8\r\n        arrayElement.status = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // name, text\r\n        {\r\n          const stringLength = dataView.getUint8(readIndex);\r\n          const encodedString = new Uint8Array(stringLength);\r\n\r\n          readIndex += 1;\r\n\r\n          for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n            encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n          }\r\n\r\n          arrayElement.name = decodeUTF8(encodedString);\r\n          readIndex += stringLength;\r\n        }\r\n\r\n        // type, uint8\r\n        arrayElement.type = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // team, uint16\r\n        arrayElement.team = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // rot, rotation\r\n        arrayElement.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n        readIndex += 2;\r\n\r\n        // flag, uint16\r\n        arrayElement.flag = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // upgrades, uint8\r\n        arrayElement.upgrades = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    // serverConfiguration, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.serverConfiguration = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // bots, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.bots = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: Login['bots'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.bots.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.BACKUP]: (): Backup => staticBackupPacket,\r\n\r\n  [packet.PING]: (buffer: ArrayBuffer): Ping => {\r\n    const msg: Ping = { c: 5 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // num, uint32\r\n    msg.num = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PING_RESULT]: (buffer: ArrayBuffer): PingResult => {\r\n    const msg: PingResult = { c: 6 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // ping, uint16\r\n    msg.ping = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // playerstotal, uint32\r\n    msg.playerstotal = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // playersgame, uint32\r\n    msg.playersgame = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.ACK]: (): Ack => staticAckPacket,\r\n\r\n  [packet.ERROR]: (buffer: ArrayBuffer): Error => {\r\n    const msg: Error = { c: 8 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // error, uint8\r\n    msg.error = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.COMMAND_REPLY]: (buffer: ArrayBuffer): CommandReply => {\r\n    const msg: CommandReply = { c: 9 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // text, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_NEW]: (buffer: ArrayBuffer): PlayerNew => {\r\n    const msg: PlayerNew = { c: 10 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // status, uint8\r\n    msg.status = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // name, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.name = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // team, uint16\r\n    msg.team = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // flag, uint16\r\n    msg.flag = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // upgrades, uint8\r\n    msg.upgrades = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // isBot, boolean\r\n    msg.isBot = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_LEAVE]: (buffer: ArrayBuffer): PlayerLeave => {\r\n    const msg: PlayerLeave = { c: 11 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_UPDATE]: (buffer: ArrayBuffer): PlayerUpdate => {\r\n    const msg: PlayerUpdate = { c: 12 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // keystate, uint8\r\n    msg.keystate = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // upgrades, uint8\r\n    msg.upgrades = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_FIRE]: (buffer: ArrayBuffer): PlayerFire => {\r\n    const msg: PlayerFire = { c: 13 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    // projectiles, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.projectiles = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: PlayerFire['projectiles'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // type, uint8\r\n        arrayElement.type = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // speedX, speed\r\n        arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // speedY, speed\r\n        arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // accelX, accel\r\n        arrayElement.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // accelY, accel\r\n        arrayElement.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // maxSpeed, speed\r\n        arrayElement.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        msg.projectiles.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_HIT]: (buffer: ArrayBuffer): PlayerHit => {\r\n    const msg: PlayerHit = { c: 14 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // owner, uint16\r\n    msg.owner = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: PlayerHit['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // health, healthenergy\r\n        arrayElement.health = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n\r\n        // healthRegen, regen\r\n        arrayElement.healthRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_RESPAWN]: (buffer: ArrayBuffer): PlayerRespawn => {\r\n    const msg: PlayerRespawn = { c: 15 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // upgrades, uint8\r\n    msg.upgrades = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_FLAG]: (buffer: ArrayBuffer): PlayerFlag => {\r\n    const msg: PlayerFlag = { c: 16 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // flag, uint16\r\n    msg.flag = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_KILL]: (buffer: ArrayBuffer): PlayerKill => {\r\n    const msg: PlayerKill = { c: 17 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // killer, uint16\r\n    msg.killer = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_UPGRADE]: (buffer: ArrayBuffer): PlayerUpgrade => {\r\n    const msg: PlayerUpgrade = { c: 18 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // upgrades, uint16\r\n    msg.upgrades = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // speed, uint8\r\n    msg.speed = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // defense, uint8\r\n    msg.defense = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // energy, uint8\r\n    msg.energy = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // missile, uint8\r\n    msg.missile = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_TYPE]: (buffer: ArrayBuffer): PlayerType => {\r\n    const msg: PlayerType = { c: 19 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_POWERUP]: (buffer: ArrayBuffer): PlayerPowerup => {\r\n    const msg: PlayerPowerup = { c: 20 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // duration, uint32\r\n    msg.duration = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_LEVEL]: (buffer: ArrayBuffer): PlayerLevel => {\r\n    const msg: PlayerLevel = { c: 21 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // level, uint8\r\n    msg.level = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.PLAYER_RETEAM]: (buffer: ArrayBuffer): PlayerReteam => {\r\n    const msg: PlayerReteam = { c: 22 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // players, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: PlayerReteam['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // team, uint16\r\n        arrayElement.team = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_FLAG]: (buffer: ArrayBuffer): GameFlag => {\r\n    const msg: GameFlag = { c: 30 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // flag, uint8\r\n    msg.flag = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // blueteam, uint8\r\n    msg.blueteam = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // redteam, uint8\r\n    msg.redteam = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_SPECTATE]: (buffer: ArrayBuffer): GameSpectate => {\r\n    const msg: GameSpectate = { c: 31 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_PLAYERSALIVE]: (buffer: ArrayBuffer): GamePlayersalive => {\r\n    const msg: GamePlayersalive = { c: 32 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // players, uint16\r\n    msg.players = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.GAME_FIREWALL]: (buffer: ArrayBuffer): GameFirewall => {\r\n    const msg: GameFirewall = { c: 33 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // status, uint8\r\n    msg.status = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // radius, float32\r\n    msg.radius = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // speed, float32\r\n    msg.speed = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_REPEL]: (buffer: ArrayBuffer): EventRepel => {\r\n    const msg: EventRepel = { c: 40 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    // players, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.players = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: EventRepel['players'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // keystate, uint8\r\n        arrayElement.keystate = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // rot, rotation\r\n        arrayElement.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n        readIndex += 2;\r\n\r\n        // speedX, speed\r\n        arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // speedY, speed\r\n        arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // energy, healthenergy\r\n        arrayElement.energy = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n\r\n        // energyRegen, regen\r\n        arrayElement.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n\r\n        // playerHealth, healthenergy\r\n        arrayElement.playerHealth = dataView.getUint8(readIndex) / 255;\r\n        readIndex += 1;\r\n\r\n        // playerHealthRegen, regen\r\n        arrayElement.playerHealthRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n        readIndex += 2;\r\n\r\n        msg.players.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    // mobs, arraysmall\r\n    {\r\n      const arrayLength = dataView.getUint8(readIndex);\r\n\r\n      readIndex += 1;\r\n      msg.mobs = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: EventRepel['mobs'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // type, uint8\r\n        arrayElement.type = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // posX, coordx\r\n        arrayElement.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n        readIndex += 2;\r\n\r\n        // posY, coordy\r\n        arrayElement.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n        readIndex += 2;\r\n\r\n        // speedX, speed\r\n        arrayElement.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // speedY, speed\r\n        arrayElement.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        // accelX, accel\r\n        arrayElement.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // accelY, accel\r\n        arrayElement.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n        readIndex += 2;\r\n\r\n        // maxSpeed, speed\r\n        arrayElement.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n        readIndex += 2;\r\n\r\n        msg.mobs.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_BOOST]: (buffer: ArrayBuffer): EventBoost => {\r\n    const msg: EventBoost = { c: 41 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // boost, boolean\r\n    msg.boost = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_BOUNCE]: (buffer: ArrayBuffer): EventBounce => {\r\n    const msg: EventBounce = { c: 42 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // keystate, uint8\r\n    msg.keystate = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posX = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // posY, coord24\r\n    {\r\n      const u16 = 256 * dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.posY = (u16 + dataView.getUint8(readIndex) - 8388608) / 512;\r\n      readIndex += 1;\r\n    }\r\n\r\n    // rot, rotation\r\n    msg.rot = dataView.getUint16(readIndex, true) / 6553.6;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_STEALTH]: (buffer: ArrayBuffer): EventStealth => {\r\n    const msg: EventStealth = { c: 43 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // state, boolean\r\n    msg.state = dataView.getUint8(readIndex) !== 0;\r\n    readIndex += 1;\r\n\r\n    // energy, healthenergy\r\n    msg.energy = dataView.getUint8(readIndex) / 255;\r\n    readIndex += 1;\r\n\r\n    // energyRegen, regen\r\n    msg.energyRegen = (dataView.getUint16(readIndex, true) - 32768) / 1e6;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.EVENT_LEAVEHORIZON]: (buffer: ArrayBuffer): EventLeavehorizon => {\r\n    const msg: EventLeavehorizon = { c: 44 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_UPDATE]: (buffer: ArrayBuffer): MobUpdate => {\r\n    const msg: MobUpdate = { c: 60 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // clock, uint32\r\n    msg.clock = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    // speedX, speed\r\n    msg.speedX = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // speedY, speed\r\n    msg.speedY = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    // accelX, accel\r\n    msg.accelX = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n    readIndex += 2;\r\n\r\n    // accelY, accel\r\n    msg.accelY = (dataView.getUint16(readIndex, true) - 32768) / 32768;\r\n    readIndex += 2;\r\n\r\n    // maxSpeed, speed\r\n    msg.maxSpeed = (dataView.getUint16(readIndex, true) - 32768) / 1638.4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_UPDATE_STATIONARY]: (buffer: ArrayBuffer): MobUpdateStationary => {\r\n    const msg: MobUpdateStationary = { c: 61 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, float32\r\n    msg.posX = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // posY, float32\r\n    msg.posY = dataView.getFloat32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN]: (buffer: ArrayBuffer): MobDespawn => {\r\n    const msg: MobDespawn = { c: 62 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.MOB_DESPAWN_COORDS]: (buffer: ArrayBuffer): MobDespawnCoords => {\r\n    const msg: MobDespawnCoords = { c: 63 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // posX, coordx\r\n    msg.posX = (dataView.getUint16(readIndex, true) - 32768) / 2;\r\n    readIndex += 2;\r\n\r\n    // posY, coordy\r\n    msg.posY = (dataView.getUint16(readIndex, true) - 32768) / 4;\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_PUBLIC]: (buffer: ArrayBuffer): ChatPublic => {\r\n    const msg: ChatPublic = { c: 70 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_TEAM]: (buffer: ArrayBuffer): ChatTeam => {\r\n    const msg: ChatTeam = { c: 71 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_SAY]: (buffer: ArrayBuffer): ChatSay => {\r\n    const msg: ChatSay = { c: 72 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_WHISPER]: (buffer: ArrayBuffer): ChatWhisper => {\r\n    const msg: ChatWhisper = { c: 73 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // from, uint16\r\n    msg.from = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // to, uint16\r\n    msg.to = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // text, text\r\n    {\r\n      const stringLength = dataView.getUint8(readIndex);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 1;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTEPASSED]: (buffer: ArrayBuffer): ChatVotemutepassed => {\r\n    const msg: ChatVotemutepassed = { c: 78 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.CHAT_VOTEMUTED]: (): ChatVotemuted => staticChatVotemutedPacket,\r\n\r\n  [packet.SCORE_UPDATE]: (buffer: ArrayBuffer): ScoreUpdate => {\r\n    const msg: ScoreUpdate = { c: 80 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // id, uint16\r\n    msg.id = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // score, uint32\r\n    msg.score = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // earnings, uint32\r\n    msg.earnings = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // upgrades, uint16\r\n    msg.upgrades = dataView.getUint16(readIndex, true);\r\n    readIndex += 2;\r\n\r\n    // totalkills, uint32\r\n    msg.totalkills = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // totaldeaths, uint32\r\n    msg.totaldeaths = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_BOARD]: (buffer: ArrayBuffer): ScoreBoard => {\r\n    const msg: ScoreBoard = { c: 81 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // data, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.data = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreBoard['data'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        msg.data.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    // rankings, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.rankings = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreBoard['rankings'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // x, uint8\r\n        arrayElement.x = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // y, uint8\r\n        arrayElement.y = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        msg.rankings.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED]: (buffer: ArrayBuffer): ScoreDetailed => {\r\n    const msg: ScoreDetailed = { c: 82 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // scores, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.scores = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreDetailed['scores'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // kills, uint16\r\n        arrayElement.kills = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // deaths, uint16\r\n        arrayElement.deaths = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // damage, float32\r\n        arrayElement.damage = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // ping, uint16\r\n        arrayElement.ping = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.scores.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_CTF]: (buffer: ArrayBuffer): ScoreDetailedCtf => {\r\n    const msg: ScoreDetailedCtf = { c: 83 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // scores, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.scores = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreDetailedCtf['scores'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // captures, uint16\r\n        arrayElement.captures = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // kills, uint16\r\n        arrayElement.kills = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // deaths, uint16\r\n        arrayElement.deaths = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // damage, float32\r\n        arrayElement.damage = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // ping, uint16\r\n        arrayElement.ping = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.scores.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SCORE_DETAILED_BTR]: (buffer: ArrayBuffer): ScoreDetailedBtr => {\r\n    const msg: ScoreDetailedBtr = { c: 84 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // scores, array\r\n    {\r\n      const arrayLength = dataView.getUint16(readIndex, true);\r\n\r\n      readIndex += 2;\r\n      msg.scores = [];\r\n\r\n      for (let i = 0; i < arrayLength; i += 1) {\r\n        const arrayElement: ScoreDetailedBtr['scores'][0] = {};\r\n\r\n        // id, uint16\r\n        arrayElement.id = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // level, uint8\r\n        arrayElement.level = dataView.getUint8(readIndex);\r\n        readIndex += 1;\r\n\r\n        // alive, boolean\r\n        arrayElement.alive = dataView.getUint8(readIndex) !== 0;\r\n        readIndex += 1;\r\n\r\n        // wins, uint16\r\n        arrayElement.wins = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // score, uint32\r\n        arrayElement.score = dataView.getUint32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // kills, uint16\r\n        arrayElement.kills = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // deaths, uint16\r\n        arrayElement.deaths = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        // damage, float32\r\n        arrayElement.damage = dataView.getFloat32(readIndex, true);\r\n        readIndex += 4;\r\n\r\n        // ping, uint16\r\n        arrayElement.ping = dataView.getUint16(readIndex, true);\r\n        readIndex += 2;\r\n\r\n        msg.scores.push(arrayElement);\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SERVER_MESSAGE]: (buffer: ArrayBuffer): ServerMessage => {\r\n    const msg: ServerMessage = { c: 90 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // duration, uint32\r\n    msg.duration = dataView.getUint32(readIndex, true);\r\n    readIndex += 4;\r\n\r\n    // text, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.text = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n\r\n  [packet.SERVER_CUSTOM]: (buffer: ArrayBuffer): ServerCustom => {\r\n    const msg: ServerCustom = { c: 91 };\r\n    const dataView = new DataView(buffer);\r\n\r\n    let readIndex = 1;\r\n\r\n    // type, uint8\r\n    msg.type = dataView.getUint8(readIndex);\r\n    readIndex += 1;\r\n\r\n    // data, textbig\r\n    {\r\n      const stringLength = dataView.getUint16(readIndex, true);\r\n      const encodedString = new Uint8Array(stringLength);\r\n\r\n      readIndex += 2;\r\n\r\n      for (let charIndex = 0; charIndex < stringLength; charIndex += 1) {\r\n        encodedString[charIndex] = dataView.getUint8(readIndex + charIndex);\r\n      }\r\n\r\n      msg.data = decodeUTF8(encodedString);\r\n      readIndex += stringLength;\r\n    }\r\n\r\n    return msg;\r\n  },\r\n};\r\n","/**\r\n * CLIENT_PACKETS.KEY types\r\n */\r\nexport enum KEY_CODES {\r\n  UP = 1,\r\n  DOWN = 2,\r\n  LEFT = 3,\r\n  RIGHT = 4,\r\n  FIRE = 5,\r\n  SPECIAL = 6,\r\n}\r\n\r\nexport interface Keystate {\r\n  UP: boolean;\r\n  DOWN: boolean;\r\n  LEFT: boolean;\r\n  RIGHT: boolean;\r\n}\r\n\r\nexport const KEY_NAMES = Object.assign(\r\n  {},\r\n  ...Object.entries(KEY_CODES).map(([name, code]) => ({ [code]: name }))\r\n);\r\n","/**\r\n * Protocol time, 10^-5 seconds.\r\n * Started from 0 at the moment of the server start.\r\n */\r\nexport type ClockTime = number;\r\n\r\n/**\r\n * SERVER_PACKETS.ERROR types.\r\n */\r\nexport enum SERVER_ERRORS {\r\n  PACKET_FLOODING_DISCONNECT = 1,\r\n  PACKET_FLOODING_BAN = 2,\r\n  GLOBAL_BAN = 3,\r\n  UNKNOWN_ERROR = 4,\r\n  REQUIRED_INACTIVITY_AND_HEALTH_TO_RESPAWN = 5,\r\n  AFK_DISCONNECT = 6,\r\n  PLAYER_KICKED = 7,\r\n  INVALID_LOGIN_DATA = 8,\r\n  INCORRECT_PROTOCOL = 9,\r\n  ACCOUNT_BANNED = 10,\r\n  ALREADY_LOGGED_IN = 11,\r\n  FORBIDDEN_TO_CHANGE_PLANE_IN_BTR = 12,\r\n  REQUIRED_INACTIVITY_AND_HEALTH_TO_SPECTATE = 13,\r\n  NOT_ENOUGH_UPGRADES = 20,\r\n  CHAT_SPAMMING = 30,\r\n  FLAG_CHANGE_TOO_FAST = 31,\r\n  UNKNOWN_COMMAND = 100,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.SERVER_MESSAGE types.\r\n */\r\nexport enum SERVER_MESSAGE_TYPES {\r\n  ALERT = 1,\r\n  INFO = 2,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.COMMAND_REPLY types.\r\n */\r\nexport enum COMMAND_REPLY_TYPES {\r\n  /**\r\n   * Special notification at the bottom of the chat.\r\n   */\r\n  CHAT = 0,\r\n\r\n  /**\r\n   * Popup. Use only for debug.\r\n   */\r\n  DEBUG = 1,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.EVENT_LEAVEHORIZON types.\r\n */\r\nexport enum LEAVE_HORIZON_TYPES {\r\n  PLAYER = 0,\r\n  MOB = 1,\r\n}\r\n\r\nexport enum MOB_TYPES {\r\n  PLAYER = 0,\r\n\r\n  // Projectiles\r\n  PREDATOR_MISSILE = 1,\r\n  GOLIATH_MISSILE = 2,\r\n  COPTER_MISSILE = 3,\r\n  TORNADO_MISSILE = 5,\r\n  TORNADO_SMALL_MISSILE = 6,\r\n  PROWLER_MISSILE = 7,\r\n\r\n  // Boxes\r\n  UPGRADE = 4,\r\n  SHIELD = 8,\r\n  INFERNO = 9,\r\n\r\n  // BTR\r\n  FIREWALL = 200,\r\n}\r\n\r\n/**\r\n * EXPIRED — box or projectile despawned.\r\n * PICKUP — player picked up a box.\r\n */\r\nexport enum MOB_DESPAWN_TYPES {\r\n  EXPIRED = 0,\r\n  PICKUP = 1,\r\n}\r\n\r\nexport enum PLAYER_LEVEL_UPDATE_TYPES {\r\n  INFORM = 0,\r\n  LEVELUP = 1,\r\n}\r\n\r\nexport enum PLAYER_STATUS {\r\n  /**\r\n   * On the map.\r\n   */\r\n  ALIVE = 0,\r\n\r\n  /**\r\n   * Dead or spectate\r\n   */\r\n  INACTIVE = 1,\r\n}\r\n\r\nexport enum PLAYER_UPGRADE_TYPES {\r\n  LOST = 0,\r\n  SPEED = 1,\r\n  DEFENSE = 2,\r\n  ENERGY = 3,\r\n  MISSILE = 4,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.SERVER_CUSTOM types.\r\n */\r\nexport enum SERVER_CUSTOM_TYPES {\r\n  BTR = 1,\r\n  CTF = 2,\r\n}\r\n\r\n/**\r\n * SERVER_PACKETS.PLAYER_POWERUP types.\r\n */\r\nexport enum PLAYER_POWERUP_TYPES {\r\n  SHIELD = 1,\r\n  INFERNO = 2,\r\n}\r\n\r\nexport enum CTF_TEAMS {\r\n  BLUE = 1,\r\n  RED = 2,\r\n}\r\n\r\nexport enum CTF_FLAG_STATE {\r\n  /**\r\n   * Flag dropped.\r\n   */\r\n  STATIC = 1,\r\n\r\n  /**\r\n   * Frag currently owned by player.\r\n   */\r\n  DYNAMIC = 2,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum CTF_CAPTURE_BOUNTY {\r\n  BASE = 100,\r\n  INCREMENT = 100,\r\n  MAX = 1000,\r\n}\r\n\r\nexport enum BTR_FIREWALL_STATUS {\r\n  INACTIVE = 0,\r\n  ACTIVE = 1,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum CTF_WIN_BOUNTY {\r\n  BASE = 100,\r\n  INCREMENT = 100,\r\n  MAX = 1000,\r\n}\r\n\r\n/**\r\n * BASE — min bounty (if only one player online),\r\n * INCREMENT — an additional bounty for each online player\r\n */\r\nexport enum BTR_WIN_BOUNTY {\r\n  BASE = 500,\r\n  INCREMENT = 500,\r\n  MAX = 5000,\r\n}\r\n\r\nexport enum GAME_TYPES {\r\n  FFA = 1,\r\n  CTF = 2,\r\n  BTR = 3,\r\n}\r\n\r\nexport enum GAME_STATE_CODES {\r\n  LOGIN = 1,\r\n  CONNECTING = 2,\r\n  PLAYING = 3,\r\n}\r\n\r\nexport const GAME_STATE_NAMES = Object.assign(\r\n  {},\r\n  ...Object.entries(GAME_STATE_CODES).map(([name, code]) => ({ [code]: name }))\r\n);\r\n\r\nexport const MAP_SIZE = {\r\n  WIDTH: 32768,\r\n  HEIGHT: 16384,\r\n};\r\n","/**\r\n * Available texture to 2 letter ISO-3166-1 country codes\r\n *\r\n */\r\nconst FLAGS_CODE_TO_ISO = {\r\n  '1': 'SY',\r\n  '2': 'TH',\r\n  '3': 'TM',\r\n  '4': 'TN',\r\n  '5': 'TR',\r\n  '6': 'TT',\r\n  '7': 'TW',\r\n  '8': 'TZ',\r\n  '9': 'UA',\r\n  '10': 'UN',\r\n  '11': 'US',\r\n  '12': 'UY',\r\n  '13': 'UZ',\r\n  '14': 'VE',\r\n  '15': 'VN',\r\n  '16': 'PR',\r\n  '17': 'PT',\r\n  '18': 'PY',\r\n  '19': 'QA',\r\n  '20': 'RAINBOW',\r\n  '21': 'RO',\r\n  '22': 'RS',\r\n  '23': 'RU',\r\n  '24': 'SA',\r\n  '25': 'SE',\r\n  '26': 'SG',\r\n  '27': 'SI',\r\n  '28': 'SK',\r\n  '29': 'SM',\r\n  '30': 'MK',\r\n  '31': 'MO',\r\n  '32': 'MT',\r\n  '33': 'MX',\r\n  '34': 'MY',\r\n  '35': 'NG',\r\n  '36': 'NL',\r\n  '37': 'NO',\r\n  '38': 'NP',\r\n  '39': 'NZ',\r\n  '40': 'OM',\r\n  '41': 'PA',\r\n  '42': 'PE',\r\n  '43': 'JP',\r\n  '44': 'KP',\r\n  '45': 'KR',\r\n  '46': 'KW',\r\n  '47': 'KZ',\r\n  '48': 'LB',\r\n  '49': 'LI',\r\n  '50': 'LK',\r\n  '51': 'LT',\r\n  '52': 'LU',\r\n  '53': 'LV',\r\n  '54': 'HN',\r\n  '55': 'HR',\r\n  '56': 'HU',\r\n  '57': 'ID',\r\n  '58': 'IE',\r\n  '59': 'IL',\r\n  '60': 'IM',\r\n  '61': 'IMPERIAL',\r\n  '62': 'IN',\r\n  '63': 'IQ',\r\n  '64': 'DE',\r\n  '65': 'DK',\r\n  '66': 'DO',\r\n  '67': 'DZ',\r\n  '68': 'EC',\r\n  '69': 'EE',\r\n  '70': 'EG',\r\n  '71': 'ES',\r\n  '72': 'EU',\r\n  '73': 'BH',\r\n  '74': 'BO',\r\n  '75': 'BR',\r\n  '76': 'BT',\r\n  '77': 'BY',\r\n  '78': 'CA',\r\n  '79': 'CH',\r\n  '80': 'AD',\r\n  '81': 'AE',\r\n  '82': 'AL',\r\n  '83': 'AM',\r\n  '84': 'CL',\r\n  '85': 'AQ',\r\n  '86': 'CN',\r\n  '87': 'AR',\r\n  '88': 'FI',\r\n  '89': 'CO',\r\n  '90': 'AT',\r\n  '91': 'IR',\r\n  '92': 'FR',\r\n  '93': 'COMMUNIST',\r\n  '94': 'AU',\r\n  '95': 'LY',\r\n  '96': 'IS',\r\n  '97': 'GB',\r\n  '98': 'CONFEDERATE',\r\n  '99': 'AZ',\r\n  '100': 'MA',\r\n  '101': 'IT',\r\n  '102': 'GE',\r\n  '103': 'CR',\r\n  '104': 'BA',\r\n  '105': 'PH',\r\n  '106': 'MC',\r\n  '107': 'JM',\r\n  '108': 'GR',\r\n  '109': 'CU',\r\n  '110': 'BD',\r\n  '111': 'SO',\r\n  '112': 'PK',\r\n  '113': 'MD',\r\n  '114': 'JO',\r\n  '115': 'GT',\r\n  '116': 'CY',\r\n  '117': 'BE',\r\n  '118': 'ZA',\r\n  '119': 'SV',\r\n  '120': 'PL',\r\n  '121': 'ME',\r\n  '122': 'JOLLY',\r\n  '123': 'HK',\r\n  '124': 'CZ',\r\n  '125': 'BG',\r\n};\r\n\r\nconst FLAGS_ISO_TO_CODE = Object.assign(\r\n  {},\r\n  ...Object.entries(FLAGS_CODE_TO_ISO).map(([numCode, charCode]) => ({ [charCode]: ~~numCode }))\r\n);\r\n\r\n/**\r\n * Country by ISO 3166-2\r\n *\r\n */\r\nconst COUNTRY_NAMES = {\r\n  AL: 'Albania',\r\n  DZ: 'Algeria',\r\n  AD: 'Andorra',\r\n  AQ: 'Antarctica',\r\n  AR: 'Argentina',\r\n  AM: 'Armenia',\r\n  AU: 'Australia',\r\n  AT: 'Austria',\r\n  AZ: 'Azerbaijan',\r\n  BH: 'Bahrain',\r\n  BD: 'Bangladesh',\r\n  BY: 'Belarus',\r\n  BE: 'Belgium',\r\n  BT: 'Bhutan',\r\n  BO: 'Bolivia',\r\n  BA: 'Bosnia and Herzegovina',\r\n  BR: 'Brazil',\r\n  BG: 'Bulgaria',\r\n  CA: 'Canada',\r\n  CL: 'Chile',\r\n  CN: 'China',\r\n  CO: 'Colombia',\r\n  COMMUNIST: 'Communist',\r\n  CONFEDERATE: 'Confederate',\r\n  CR: 'CostaRica',\r\n  HR: 'Croatia',\r\n  CU: 'Cuba',\r\n  CY: 'Cyprus',\r\n  CZ: 'Czech Republic',\r\n  DK: 'Denmark',\r\n  DO: 'Dominican Republic',\r\n  KP: 'DPRK',\r\n  EC: 'Ecuador',\r\n  EG: 'Egypt',\r\n  SV: 'ElSalvador',\r\n  EE: 'Estonia',\r\n  EU: 'European Union',\r\n  FI: 'Finland',\r\n  FR: 'France',\r\n  GE: 'Georgia',\r\n  DE: 'Germany',\r\n  GR: 'Greece',\r\n  GT: 'Guatemala',\r\n  HN: 'Honduras',\r\n  HK: 'HongKong',\r\n  HU: 'Hungary',\r\n  IS: 'Iceland',\r\n  IMPERIAL: 'Imperial Japan',\r\n  IN: 'India',\r\n  ID: 'Indonesia',\r\n  IR: 'Iran',\r\n  IQ: 'Iraq',\r\n  IE: 'Ireland',\r\n  IM: 'Isle of Man',\r\n  IL: 'Israel',\r\n  IT: 'Italy',\r\n  JM: 'Jamaica',\r\n  JP: 'Japan',\r\n  JOLLY: 'Jolly Rogers',\r\n  JO: 'Jordan',\r\n  KZ: 'Kazakhstan',\r\n  KW: 'Kuwait',\r\n  LV: 'Latvia',\r\n  LB: 'Lebanon',\r\n  LY: 'Libyan Arab Jamahiriya',\r\n  LI: 'Liechtenstein',\r\n  LT: 'Lithuania',\r\n  LU: 'Luxembourg',\r\n  MO: 'Macao',\r\n  MK: 'Macedonia',\r\n  MY: 'Malaysia',\r\n  MT: 'Malta',\r\n  MX: 'Mexico',\r\n  MD: 'Moldova',\r\n  MC: 'Monaco',\r\n  ME: 'Montenegro',\r\n  MA: 'Morocco',\r\n  NP: 'Nepal',\r\n  NL: 'Netherlands',\r\n  NZ: 'New Zealand',\r\n  NG: 'Nigeria',\r\n  NO: 'Norway',\r\n  OM: 'Oman',\r\n  PK: 'Pakistan',\r\n  PA: 'Panama',\r\n  PY: 'Paraguay',\r\n  PE: 'Peru',\r\n  PH: 'Philippines',\r\n  PL: 'Poland',\r\n  PT: 'Portugal',\r\n  PR: 'PuertoRico',\r\n  QA: 'Qatar',\r\n  RAINBOW: 'Rainbow',\r\n  RO: 'Romania',\r\n  RU: 'Russian Federation',\r\n  SM: 'SanMarino',\r\n  SA: 'Saudi Arabia',\r\n  RS: 'Serbia',\r\n  SG: 'Singapore',\r\n  SK: 'Slovakia',\r\n  SI: 'Slovenia',\r\n  SO: 'Somalia',\r\n  ZA: 'South Africa',\r\n  KR: 'South Korea',\r\n  ES: 'Spain',\r\n  LK: 'Sri Lanka',\r\n  SE: 'Sweden',\r\n  CH: 'Switzerland',\r\n  SY: 'Syrian Arab Republic',\r\n  TW: 'Taiwan',\r\n  TZ: 'Tanzania',\r\n  TH: 'Thailand',\r\n  TT: 'Trinidad and Tobago',\r\n  TN: 'Tunisia',\r\n  TR: 'Turkey',\r\n  TM: 'Turkmenistan',\r\n  UA: 'Ukraine',\r\n  AE: 'United Arab Emirates',\r\n  GB: 'United Kingdom',\r\n  UN: 'United Nations',\r\n  US: 'United States',\r\n  UY: 'Uruguay',\r\n  UZ: 'Uzbekistan',\r\n  VE: 'Venezuela',\r\n  VN: 'Vietnam',\r\n};\r\n\r\nexport { FLAGS_CODE_TO_ISO, COUNTRY_NAMES, FLAGS_ISO_TO_CODE };\r\n","import { MAP_SIZE } from '../types/server';\r\nimport { Keystate } from '../types/client';\r\n\r\nconst clamp = (value: number, lower: number, upper: number): number => {\r\n  if (value <= lower) {\r\n    return lower;\r\n  }\r\n\r\n  if (value >= upper) {\r\n    return upper;\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nexport const levelToBouty = (level: number): number => {\r\n  return ((level - 1) / 0.0111) ** 2;\r\n};\r\n\r\nexport const decodeMinimapCoords = (x: number, y: number): { x: number; y: number } => {\r\n  return {\r\n    x: 128 * x - MAP_SIZE.WIDTH / 2 + 64,\r\n    y: clamp(128 * y - MAP_SIZE.HEIGHT, -MAP_SIZE.HEIGHT / 2, MAP_SIZE.HEIGHT / 2) + 64,\r\n  };\r\n};\r\n\r\nexport const decodeUpgrades = (\r\n  upgrades: number\r\n): { speed: number; shield: number; inferno: number } => {\r\n  const speed = upgrades & 7;\r\n  const shield = (upgrades & 8) >> 3;\r\n  const inferno = (upgrades & 16) >> 4;\r\n\r\n  return {\r\n    speed,\r\n    shield,\r\n    inferno,\r\n  };\r\n};\r\n\r\nexport const decodeKeystate = (\r\n  keystate: number\r\n): {\r\n  keystate: Keystate;\r\n  boost: boolean;\r\n  strafe: boolean;\r\n  stealthed: boolean;\r\n  flagspeed: boolean;\r\n} => {\r\n  return {\r\n    keystate: {\r\n      UP: (keystate & (1 << 0)) === 1 << 0,\r\n      DOWN: (keystate & (1 << 1)) === 1 << 1,\r\n      LEFT: (keystate & (1 << 2)) === 1 << 2,\r\n      RIGHT: (keystate & (1 << 3)) === 1 << 3,\r\n    },\r\n    boost: (keystate & (1 << 4)) === 1 << 4,\r\n    strafe: (keystate & (1 << 5)) === 1 << 5,\r\n    stealthed: (keystate & (1 << 6)) === 1 << 6,\r\n    flagspeed: (keystate & (1 << 7)) === 1 << 7,\r\n  };\r\n};\r\n\r\nexport default levelToBouty;\r\n","import { Keystate } from '../types/client';\r\n\r\nexport const encodeUpgrades = (speed: number, shield: number, inferno: number): number => {\r\n  return (speed & 7) | (shield << 3) | (inferno << 4);\r\n};\r\n\r\nexport const encodeKeystate = (\r\n  keystate: Keystate,\r\n  boost: boolean,\r\n  strafe: boolean,\r\n  stealthed: boolean,\r\n  flagspeed: boolean\r\n): number => {\r\n  const down = keystate.DOWN === true ? 1 : 0;\r\n\r\n  return (\r\n    0 |\r\n    ((keystate.UP === true ? 1 : 0) << 0) |\r\n    ((keystate.UP === true ? 0 : down) << 1) |\r\n    ((keystate.LEFT === true ? 1 : 0) << 2) |\r\n    ((keystate.RIGHT === true ? 1 : 0) << 3) |\r\n    ((boost === true ? 1 : 0) << 4) |\r\n    ((strafe === true ? 1 : 0) << 5) |\r\n    ((stealthed === true ? 1 : 0) << 6) |\r\n    ((flagspeed === true ? 1 : 0) << 7)\r\n  );\r\n};\r\n","/* tslint:disable */\r\n\r\n/** some stats: the walls have 12 different radii,\r\n * distributed in steps of 12 like this:\r\n * \r\n * radius : number of walls\r\n  '36': 4,\r\n  '48': 24,\r\n  '60': 52,\r\n  '72': 53,\r\n  '84': 62,\r\n  '96': 50,\r\n  '108': 142,\r\n  '120': 77,\r\n  '132': 43,\r\n  '144': 9,\r\n  '156': 2,\r\n  '168': 2\r\n */\r\n\r\nconst abWalls = [[1009, -2308, 108], [1241, -2490, 60], [1157, -2379, 84], [622, -2126, 48], [669, -2187, 72], [-392, -1669, 132],\r\n[-273, -1746, 60], [-252, -1504, 120], [1553, -2016, 48], [1637, -1972, 60], [1736, -1922, 60], [2150, -2406, 72], [2238, -2318, 108],\r\n[2364, -2391, 72], [2491, -2682, 72], [2596, -2671, 108], [-150, -3147, 48], [-155, -3044, 84], [-427, -3600, 48], [-259, -2982, 60],\r\n[-379, -3529, 72], [-665, -3052, 60], [20, -1816, 60], [127, -1799, 60], [263, -2572, 48], [405, -2570, 108], [851, -4183, 120], [754, -3971, 108],\r\n[1757, -5065, 132], [1169, -4453, 108], [2054, -5244, 108], [1631, -4901, 108], [2305, -5281, 108], [1007, -4281, 96], [2766, -5202, 96],\r\n[2927, -5204, 84], [3206, -5218, 36], [3099, -5193, 72], [1417, -4726, 120], [2844, -1513, 60], [3206, -1464, 120], [2881, -1403, 108],\r\n[3804, -2025, 84], [4116, -1778, 108], [3715, -1508, 72], [4247, -1126, 72], [3860, 268, 60], [4334, -1011, 132], [3849, 349, 72],\r\n[3956, 490, 96], [4073, 667, 108], [3583, -864, 96], [4135, 836, 120], [4785, -743, 120], [4993, -839, 108], [5224, -482, 84], [5235, -1238, 132],\r\n[5419, -1346, 72], [6075, -5099, 96], [5767, -4953, 108], [5896, -4967, 108], [5384, -4642, 108], [5704, -4857, 108], [5563, -4697, 108],\r\n[5406, -4470, 132], [5352, -3964, 108], [5309, -3665, 132], [5247, -3464, 108], [5300, -3121, 108], [3524, -3340, 132], [3661, -3589, 108],\r\n[7236, -1376, 72], [7624, -1610, 96], [7403, -1555, 84], [7514, -1568, 108], [3660, -2705, 108], [3374, -2813, 96], [7347, -1447, 108],\r\n[7236, -775, 60], [7207, -631, 108], [7303, -468, 108], [7262, -1263, 108], [7404, -350, 120], [7589, -305, 108], [7741, -1589, 120],\r\n[7949, -1594, 120], [8152, -1599, 132], [8378, -1602, 144], [7873, -321, 72], [8543, -1661, 84], [7790, -259, 120], [8675, -1573, 120],\r\n[8163, -245, 84], [8329, -311, 84], [8275, -229, 120], [8447, -277, 120], [8824, -1447, 108], [7221, -1140, 60], [8924, -1273, 108],\r\n[6844, -950, 120], [8949, -1060, 132], [8904, -920, 96], [8582, -338, 84], [8963, -803, 120], [8680, -322, 108], [8811, -449, 108],\r\n[8910, -610, 108], [6855, 114, 96], [6971, 241, 120], [6852, 656, 60], [6980, 706, 108], [6946, 939, 120], [6027, -560, 72],\r\n[7521, 425, 48], [7599, 389, 60], [5863, -431, 108], [9392, 262, 108], [7521, 512, 72], [9807, 1027, 60], [9554, 237, 120],\r\n[9346, 392, 144], [9789, 1142, 84], [9747, -532, 96], [8591, 347, 72], [9951, -509, 120], [9308, 2417, 60], [10185, -522, 108],\r\n[10330, 2147, 72], [9350, 2480, 84], [10503, 2124, 108], [12500, 2628, 60], [13188, 2864, 60], [12637, 2659, 84], [13262, 2899, 60],\r\n[13777, 5168, 60], [15709, 6399, 48], [13539, 5664, 60], [15660, 6474, 48], [13743, 5248, 84], [15482, 6600, 48], [15591, 6525, 36],\r\n[13487, 5738, 84], [15407, 6702, 72], [8171, -2568, 60], [16001, 6015, 72], [16017, 6110, 48], [6496, -1491, 60], [6626, -1480, 84],\r\n[6190, -1022, 96], [8325, -2615, 120], [8222, -2412, 120], [9204, -2288, 108], [9279, -2216, 120], [10375, -1558, 96], [10309, -1421, 108],\r\n[10247, -1216, 144], [10079, -2310, 108], [10320, -2330, 120], [10942, -2963, 108], [10807, -2778, 132], [12989, -1929, 72],\r\n[12613, -1181, 48], [12559, -1120, 60], [11642, -1900, 84], [11558, -1692, 108], [11509, -1479, 60], [12559, -2673, 96], [12446, -2487, 120],\r\n[12375, -2303, 108], [10363, -3514, 84], [10290, -3340, 108], [10162, -3207, 84], [9003, -3048, 108], [9161, -3119, 72], [14550, -3462, 108],\r\n[14407, -3335, 108], [14366, -4493, 108], [14477, -4437, 120], [15305, -4230, 108], [15481, -4283, 108], [15349, -5009, 48],\r\n[11874, -4879, 72], [15453, -4984, 84], [11907, -4742, 96], [12440, -4278, 60], [11980, -4582, 108], [12131, -4387, 132],\r\n[15681, -4973, 120], [12591, -4252, 96], [12777, -4244, 108], [12969, -4227, 108], [15897, -5071, 108], [13204, -4228, 120], [11592, -5261, 84],\r\n[12743, -4826, 48], [10102, -5078, 84], [12854, -4782, 108], [10191, -5033, 84], [10523, -5133, 120], [10336, -4977, 132], [10667, -5250, 96],\r\n[9665, -6403, 84], [10798, -5379, 60], [9670, -5547, 108], [9834, -6369, 120], [9864, -5572, 132], [11362, -3957, 108], [11162, -3830, 120],\r\n[8922, -6173, 120], [9003, -5368, 60], [8453, -6153, 72], [8954, -5229, 108], [8905, -5072, 96], [8704, -3873, 108], [8578, -6105, 96],\r\n[8508, -3710, 84], [8614, -5400, 60], [8788, -4922, 132], [8936, -3905, 72], [9701, -4613, 108], [6973, -4776, 72], [7016, -4674, 108],\r\n[9124, -3853, 108], [7253, -4648, 96], [6602, -4591, 72], [8510, -5322, 108], [6687, -3810, 84], [9525, -4492, 132], [7461, -4705, 108],\r\n[9280, -3812, 96], [6467, -2811, 36], [6842, -3820, 96], [6483, -2725, 72], [7675, -4864, 132], [6991, -2885, 108], [6610, -2664, 108],\r\n[6822, -2736, 108], [6763, -4582, 108], [6509, -2490, 108], [7216, -3865, 132], [7018, -3708, 120], [2254, -3301, 96], [6378, -2310, 96],\r\n[7197, -2857, 108], [2609, -3483, 60], [2449, -3385, 108], [4585, -2889, 84], [4470, -2768, 96], [4083, -4033, 108], [1568, -2869, 48],\r\n[4336, -4105, 144], [1977, -1678, 60], [1412, -3642, 60], [1570, -2792, 72], [1932, -1586, 72], [1310, -3547, 72], [3611, 1391, 120],\r\n[3558, 2174, 108], [3431, 1563, 108], [3142, 2813, 84], [3330, 2296, 132], [3001, 2818, 72], [3703, 2044, 48], [2872, 3863, 108],\r\n[3125, 2942, 132], [2841, 4018, 132], [2402, 5140, 72], [2511, 5167, 96], [-14607, -5112, 108], [-14430, -5180, 108], [-14197, -5222, 144],\r\n[-14895, -4703, 60], [-14797, -4728, 48], [-14697, -4739, 48], [-13919, -5281, 132], [-13646, -5170, 84], [-13400, -5068, 144],\r\n[-13099, -5108, 132], [-12824, -5092, 108], [-12631, -5044, 108], [-12427, -4914, 108], [-12270, -4816, 84], [-11772, -4983, 84], [-11940, -4867, 108], [-12091, -4699, 108], [-12270, -4529, 84], [-12460, -4396, 108], [-13058, -4252, 108], [-12894, -4096, 84], [-12738, -4077, 84], [-13546, -4341, 48], [-13428, -4299, 108], [-14679, -4192, 84], [-14368, -4308, 84], [-14495, -4133, 132], [-12072, -3824, 96], [-11904, -3648, 120], [-11654, -3569, 84], [-11648, -3357, 108], [-11420, -3359, 108], [-11296, -3135, 84], [-10782, -2838, 96], [-11410, -3039, 36], [-10581, -2773, 132], [-11118, -5114, 96], [-10675, -5079, 108], [-10205, -4890, 96], [-11543, -4164, 96], [-11287, -4244, 60], [-10018, -4747, 120], [-9278, 419, 60], [-9341, 470, 60], [-9180, 496, 96], [-11365, -4131, 120], [-9353, 0, 72], [-8975, 528, 120], [-9413, 89, 108], [-8230, 770, 48], [-9231, 17, 84], [-6808, 1667, 60], [-6694, 1622, 96], [-8285, 855, 72], [-6793, 1796, 96], [-6865, 1935, 60], [-7043, 2222, 72], [-7083, 2368, 72], [-7103, 2533, 84], [-7099, 2721, 96], [-7178, 2874, 48], [-6964, 3110, 84], [-6246, 4191, 72], [-6735, 3446, 48], [-6722, 3537, 84], [-6396, 3388, 108], [-6787, 3140, 108], [-6227, 4488, 84], [-6281, 3953, 72], [-6530, 3576, 132], [-6147, 3994, 132], [-6141, 4292, 144], [-6377, 5578, 84], [-6152, 4569, 108], [-6222, 4769, 84], [-6266, 4956, 72], [-6233, 5414, 108], [-6347, 5646, 84], [-6400, 6066, 84], [-6411, 6261, 96], [-6565, 7043, 72], [-6377, 6415, 108], [-6440, 6614, 84], [-5944, 1954, 60], [-6001, 2039, 96], [-6467, 7070, 108], [-4963, 3608, 72], [-4776, 3510, 48], [-5785, 1998, 132], [-3708, 3449, 72], [-3790, 3582, 108], [-4031, 3697, 84], [-4859, 3634, 120], [-3850, 3730, 120], [-4689, 4605, 108], [-3492, 2892, 72], [-4507, 4483, 72], [-4829, 2745, 108], [-4435, 4273, 108], [-3383, 2930, 108], [-4888, 2821, 108], [-5372, 5172, 60], [-5036, 2981, 108], [-9895, -1942, 120], [-9371, -2159, 72], [-9995, -1773, 108], [-5280, 5218, 108], [-5079, 5183, 108], [-5149, 3079, 72], [-9695, -2048, 120], [-5063, 5374, 108], [-9504, -2059, 120], [-8948, -2140, 84], [-9262, -2081, 132], [-9068, -2071, 120], [-8861, -2045, 132], [-8654, -2083, 120], [-8473, -2048, 120], [-8283, -1965, 120], [-8182, -1863, 108], [-10037, -1579, 108], [-10063, -1365, 108], [-10074, -1190, 108], [-8167, -1225, 60], [-8188, -1087, 96], [-9975, -1022, 108], [-9835, -910, 120], [-9709, -848, 120], [-9532, -792, 120], [-9348, -779, 120], [-9131, -784, 132], [-8754, -795, 84], [-8587, -797, 120], [-8424, -856, 108], [-8246, -921, 108], [-8153, -1701, 84], [-6447, -2137, 72], [-8153, -1591, 60], [-7694, -1393, 120], [-6541, -2030, 84], [-7135, -1547, 84], [-5885, -2958, 72], [-7171, -1440, 96], [-5620, -3123, 72], [-6631, -1866, 96], [-5882, -3696, 96], [-5716, -2944, 108], [-5949, -3528, 60], [-6869, -4052, 96], [-7081, -2673, 60], [-6725, -4069, 72], [-10487, -2295, 60], [-7032, -2749, 72], [-10769, -3817, 72], [-6607, -4081, 60], [-10849, -1824, 84], [-10479, -2146, 108], [-7003, -2611, 108], [-10749, -1511, 72], [-10697, -1953, 120], [-10848, -1330, 108], [-10912, -1220, 60], [-9843, -2685, 84], [-10823, -3717, 84], [-9697, -2713, 72], [-10080, -3431, 48], [-10648, -3844, 108], [-9530, -2695, 120], [-2387, -6791, 108], [-8465, -5037, 84], [-2550, -6627, 108], [-9325, -2822, 84], [-10140, -3346, 96], [-8461, -4908, 108], [8116, -1076, 96], [8115, -940, 96], [-2503, -6359, 168], [-9062, -1580, 96], [8120, -790, 96], [-9065, -1444, 96], [-2615, -6159, 120], [-2744, -5943, 132], [-3713, -4955, 108], [-9061, -1292, 96], [-1551, -4718, 60], [5251, -6249, 60], [5192, -6181, 48], [-2898, -5732, 108], [-1705, -4629, 96], [1618, -7035, 60], [-3829, -4776, 108], [-2851, -5589, 132], [-2974, -5399, 132], [-3952, -4568, 108], [-4135, -4368, 132], [-3428, -5104, 132], [-3167, -5254, 108], [-3049, -6916, 120], [-3097, -6722, 108], [-3190, -6493, 120], [-3318, -6284, 132], [-4672, -5861, 132], [-4480, -5668, 120], [-4294, -5548, 108], [-3433, -6072, 120], [-3568, -5881, 120], [-3736, -5698, 144], [-3978, -7517, 108], [-3956, -5572, 120], [-4103, -5400, 120], [-4281, -5240, 120], [-4409, -5034, 120], [-4475, -4808, 108], [-2777, -7546, 120], [-2542, -7502, 108], [-2398, -7364, 108], [-2350, -7151, 108], [-2315, -6976, 96], [-3749, -7488, 120], [-2995, -7596, 144], [-3253, -7558, 132], [-3468, -7472, 120], [-5028, -6473, 120], [-3604, -7301, 132], [-3678, -7078, 132], [-3835, -6826, 132], [-3935, -6595, 120], [-5214, -7381, 120], [-4065, -6416, 132], [-4174, -6231, 84], [-4556, -6940, 120], [-4663, -6781, 120], [-4748, -6548, 156], [-4847, -6257, 132], [-4806, -6016, 108], [-4950, -7410, 168], [-5470, -7251, 156], [-5637, -7038, 120], [-5593, -6819, 120], [-5406, -6727, 120], [-5263, -6580, 120], [-4636, -7476, 120], [-4399, -7496, 108], [-6769, -7571, 108], [-6853, -7377, 108], [-8273, -7231, 60], [-4182, -7512, 108], [-7525, -5855, 108], [-7495, -6329, 60], [-7297, -6946, 108], [-8148, -7137, 84], [-7030, -7301, 84]];\r\nexport { abWalls };","import { SHIPS_SPECS, SHIPS_TYPES } from \"../ab-assets/ships-constants\";\r\n\r\nconst sizes: AircraftSize[] = [];\r\n\r\nexport class AircraftSize {\r\n\r\n    constructor(private _width: number, private _height: number) {\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    static getSize(type: number): AircraftSize {\r\n        return sizes[type];\r\n    }\r\n}\r\n\r\nfor (const shipType of [SHIPS_TYPES.PREDATOR, SHIPS_TYPES.GOLIATH, SHIPS_TYPES.COPTER, SHIPS_TYPES.TORNADO, SHIPS_TYPES.PROWLER]) {\r\n    const hitCircles = SHIPS_SPECS[shipType].collisions;\r\n\r\n    let leftX: number = 999;\r\n    let rightX: number = 0;\r\n    let topY: number = 999;\r\n    let bottomY: number = 0;\r\n    for (const circle of hitCircles) {\r\n        const x = circle[0];\r\n        const y = circle[1];\r\n        const r = circle[2];\r\n        if (x - r < leftX) {\r\n            leftX = x - r;\r\n        }\r\n        if (x + r > rightX) {\r\n            rightX = x + r;\r\n        }\r\n        if (y - r < topY) {\r\n            topY = y - r;\r\n        }\r\n        if (y + r > bottomY) {\r\n            bottomY = y + r;\r\n        }\r\n    }\r\n    const shipWidth = rightX - leftX;\r\n    const shipHeight = bottomY - topY;\r\n    const size = new AircraftSize(shipWidth, shipHeight);\r\n    sizes[shipType] = size;\r\n}\r\n\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","DATA_TYPES","KEY_CODES","MOB_TYPES","GAME_STATE_CODES","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$a4b132d324fe7981$require$Buffer","$N0o3H","Buffer","Grid","width","height","bytes","isBuffer","length","Math","ceil","bytesFrom2DArray","array2d","buf","byte","byteIndex","index","offset","row","x","y","_i","_j","_len","_len1","isNaN","Array","isArray","console","log","fill","prototype","isWalkableAt","bytePos","setWalkableAt","walkable","getNeighbors","allowDiagonal","dontCrossCorners","d0","d1","d2","d3","neighbors","s0","s1","s2","s3","push","getARandomWalkableBrick","random","toString","startLoc","endLoc","path","arr","i","markpoints","result","_k","_ref","_ref1","join","$0934e0939605d48c$export$a143d493d941bafc","$0934e0939605d48c$export$f99ded8fe4b79145","$bQMRt","$dbnIE","$0934e0939605d48c$var$customInspectSymbol","Symbol","$0934e0939605d48c$var$createBuffer","RangeError","Uint8Array","setPrototypeOf","$0934e0939605d48c$var$Buffer","arg","encodingOrOffset","TypeError","$0934e0939605d48c$var$allocUnsafe","$0934e0939605d48c$var$from","value","$0934e0939605d48c$var$fromString","string","encoding","isEncoding","$0934e0939605d48c$var$byteLength","actual","write","slice","ArrayBuffer","isView","$0934e0939605d48c$var$fromArrayView","arrayView","$0934e0939605d48c$var$isInstance","copy","$0934e0939605d48c$var$fromArrayBuffer","buffer","byteOffset","byteLength","$0934e0939605d48c$var$fromArrayLike","SharedArrayBuffer","valueOf","from","b","$0934e0939605d48c$var$fromObject","obj","len","$0934e0939605d48c$var$checked","undefined","$0934e0939605d48c$var$numberIsNaN","type","data","toPrimitive","$0934e0939605d48c$var$assertSize","size","array","mustMatch","arguments","loweredCase","$0934e0939605d48c$var$utf8ToBytes","$0934e0939605d48c$var$base64ToBytes","toLowerCase","$0934e0939605d48c$var$slowToString","start","end","$0934e0939605d48c$var$hexSlice","out","$0934e0939605d48c$var$hexSliceLookupTable","$0934e0939605d48c$var$utf8Slice","$0934e0939605d48c$var$asciiSlice","ret","min","String","fromCharCode","$0934e0939605d48c$var$latin1Slice","fromByteArray","$0934e0939605d48c$var$utf16leSlice","res","$0934e0939605d48c$var$swap","m","$0934e0939605d48c$var$bidirectionalIndexOf","val","dir","$0934e0939605d48c$var$arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","$0934e0939605d48c$var$decodeCodePointsArray","codePoints","apply","$0934e0939605d48c$var$checkOffset","ext","$0934e0939605d48c$var$checkInt","max","$0934e0939605d48c$var$checkIEEE754","$0934e0939605d48c$var$writeFloat","littleEndian","noAssert","$0934e0939605d48c$var$writeDouble","TYPED_ARRAY_SUPPORT","$0934e0939605d48c$var$typedArraySupport","proto","foo","error","poolSize","alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","str","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","remaining","$0934e0939605d48c$var$hexWrite","Number","strLen","parsed","parseInt","substr","$0934e0939605d48c$var$blitBuffer","$0934e0939605d48c$var$asciiToBytes","byteArray","charCodeAt","$0934e0939605d48c$var$utf16leToBytes","units","c","hi","toJSON","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$0934e0939605d48c$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","$0934e0939605d48c$var$base64clean","split","src","dst","constructor","name","alphabet","table","i16","$8a0a73e6b73fd0c4$export$d622b2ad8d90c771","$8a0a73e6b73fd0c4$export$6100ba28696e12de","b64","tmp","lens","$8a0a73e6b73fd0c4$var$getLens","validLen","placeHoldersLen","$8a0a73e6b73fd0c4$var$Arr","curByte","$8a0a73e6b73fd0c4$var$revLookup","uint8","extraBytes","parts","len2","$8a0a73e6b73fd0c4$var$encodeChunk","output","$8a0a73e6b73fd0c4$var$lookup","num","$8a0a73e6b73fd0c4$var$code","$8a0a73e6b73fd0c4$var$i","$8a0a73e6b73fd0c4$var$len","$998eb38f4d082829$export$aafa59e2e03f2942","$998eb38f4d082829$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","abs","floor","LN2","SQRT2","backtrace","grid","heuristic","locToClosed","locToF","locToG","locToH","locToOpen","locToParent","openList","syncfinder_astar","dx","dy","node","unshift","findPathByBrickLoc","theGrid","findPath","startX","startY","endX","endY","neighbor","neighborNode","ng","nodeX","nodeY","reset","isNotEmpty","pop","updateItem","Heap","nodes","_siftdown","startPos","newNode","parentNode","parentpos","_siftup","childPos","endPos","rightPos","lastelt","returnitem","$87af5b1ac654d440$export$fdf35536e9a0700c","WIDTH","HEIGHT","HALF_WIDTH","HALF_HEIGHT","$87af5b1ac654d440$export$9000cfdce9ac9444","MAX_X","$1f555963597ba593$exports","buildGrid","$ce1896ec5a34bc57$export$49cb77d19e897fe6","message","$ce1896ec5a34bc57$export$bd6a5472535ccab5","$ce1896ec5a34bc57$export$e16542dee1cf1467","$b7e01e2d61bb1b28$export$68317eef4cf08696","text","uint16","uint32","boolean","coordx","coordy","rotation","textbig","coord24","speed","healthenergy","regen","arraysmall","accel","float32","dataView","DataView","setUint8","$f0ba005495de6100$var$encodedStrings","storage","last","put","shift","flush","$f0ba005495de6100$var$fillBufferWithData","startOffset","dataSchema","fieldIndex","fieldName","fieldType","subSchema","fieldData","encodedString","setUint16","charOffset","arrayElementIndex","uint24","u8","u16","setUint32","setFloat32","float64","setFloat64","assign","entries","map","$e4ad34ea523e3171$export$696edb37a517566d","numCode","charCode","$ad11f6fc34bb1cfa$var$missileTemplate","rot","alt","$ad11f6fc34bb1cfa$var$missileFireTemplate","def","special","$ad11f6fc34bb1cfa$export$de794ad9b3d6afb7","turnFactor","accelFactor","brakeFactor","boostFactor","infernoFactor","maxSpeed","minSpeed","flagSpeed","healthRegen","energyRegen","fireEnergy","specialEnergy","specialEnergyRegen","specialDelay","fireDelay","damageFactor","energyLight","collisions","repelEnergy","PREDATOR_MISSILE","GOLIATH_MISSILE","COPTER_MISSILE","TORNADO_MISSILE","TORNADO_SMALL_MISSILE","PROWLER_MISSILE","$35cddcdef3a819e4$export$538e3d9fdc6b7eea","$a6571f70560d3626$var$sizes","$a6571f70560d3626$export$d77a2bc8f6628f42","_width","_height","getSize","shipType","hitCircles","leftX","rightX","topY","bottomY","circle","r","$ca76cabc7d32feff$var$ShipAwareMapRepresentation","scale","shipWidth","mapArray","wall","translateToInternalRepresentation","radius","round","sqrt","translateBack","internalPos","getScale","pos1","pos2","pointsToAvoid","tpos1","tpos2","restoreWalkability","p","mapPoint","bit","bits","$ca76cabc7d32feff$export$c71ae647ae0b22b8","$ca76cabc7d32feff$export$1991dc3812003de4","$ca76cabc7d32feff$export$7a869ce99deb324e","$ca76cabc7d32feff$var$lowestresMap","$2fa72ef06efcb071$export$cd51d8d84d256df6","initialize","config","aircraftType","isHighres","tryFindPath","segmentLength","$2fa72ef06efcb071$var$PATH_LENGTH_THRESHOLD_FOR_HIGHRES","refinedPath","postMessage","onmessage","JSON","parse","stringify"],"version":3,"file":"browser-worker.js.map"}